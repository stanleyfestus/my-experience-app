/*! For license information please see arcgis_analysis_node_modules_arcgis_app-components_dist_esm_data-s-721dc8.js.LICENSE.txt */
"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_data-s-721dc8"],{66301:(e,t,r)=>{r.d(t,{a:()=>i,b:()=>u,c:()=>n,d:()=>d,e:()=>f,f:()=>c,g:()=>y,h:()=>l,i:()=>m});var o=r(25972),a=r(44090),s=r(16093);function n(e,t){const r={type:"folder",path:`/fileShares/${t}`,info:{datastoreConnectionType:"shared",path:e.publisherFolderPath,hostName:e.publisherFolderPathHostname}};return"newPath"===e.serverFolderPath?(r.clientPath=e.publisherFolderPath,r.info.path=e.newServerFolderPath,r.info.datastoreConnectionType="replicated"):"nfsHostAndPath"===e.serverFolderPath&&(r.clientPath=e.publisherFolderPath,r.provider="UserManaged",r.info.datastoreConnectionType="replicated",r.info.fileServerPath=e.nfsSharePath,r.info.fileServerHost=e.nfsHostName,r.info.fileServerType="nfs"),r}function i(e,t){const r={type:"egdb",path:"/enterpriseDatabases/"+t,info:{dataStoreConnectionType:"shared"}};return"newConnection"===e.serverDatabaseOption?(r.info.connectionString=e.serverConnectionString,r.info.clientConnectionString=e.publisherConnectionString,r.info.dataStoreConnectionType="replicated"):"bigQuery"===e.databaseProvider||"snowflake"===e.databaseProvider?r.info.JDBCConnection=e.jdbcConnection:r.info.connectionString=e.publisherConnectionString,r}const c=async(e,t,r,o)=>{let a,s;if((null==r?void 0:r.length)>0){try{s=JSON.parse(r)}catch(e){return{error:{code:"invalidJSON"}}}a=function(e,t){const{type:r,project_id:o,private_key_id:a,private_key:s,client_email:n,client_id:i,auth_uri:c,token_uri:l,auth_provider_x509_cert_url:d,client_x509_cert_url:u}=t,p={oAuthType:0,projectId:e,url:"jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443",oAuthPvtKeyFile:{type:r,project_id:o,private_key_id:a,private_key:s,client_email:n,client_id:i,auth_uri:c,token_uri:l,auth_provider_x509_cert_url:d,client_x509_cert_url:u}};return p}(e,s)}else(null==o?void 0:o.length)>0&&(a=function(e,t,r){const o={name:"BigqueryArcgisPlatform_RefreshToken",className:"com.esri.sds.bigquery.jdbc.GBQDataSource",oAuthType:2,projectId:e,defaultDataset:t,url:"jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443",oAuthRefreshToken:r};return o}(e,t,o));return{result:{type:"egdb",path:"/enterpriseDatabases/bigQuerySvrDevDataJdbc",id:null,clientPath:null,info:{JDBCConnection:a}}}};function l(e){const{user:t,password:r,database:o,role:a,server:s,warehouse:n,schema:i}=e;return{path:"/enterpriseDatabases/snowflakeJdbc",type:"egdb",info:{JDBCConnection:{user:t,password:r,database:o,role:a,connectionUrl:`jdbc:snowflake://${s}`,warehouse:n,schema:i}}}}function d(e,t){if("Arango"===e.noSqlProvider){const t={type:"nosql",path:"/nosqlDatabases/Arango_enterprise",info:{systemManaged:!1,dsFeature:"graphStore",isManagedData:!1,category:"database",factory:"nosql",provider:"ArangoDB",implementation:"ArangoDB",purposes:["knowledge-graph"],connectionProperties:{hosts:[],useSsl:e.useSsl,username:e.username,password:e.password,database:e.database}}};return""!==e.hosts?t.info.connectionProperties.hosts=e.hosts.split(","):delete t.info.connectionProperties.hosts,t}const r={type:"nosql",path:`/nosqlDatabases/${t}`,info:{provider:"Neo4J",isManaged:!1,dsFeature:"graphStore",factory:"nosql",implementation:"Neo4j",category:"database",systemManaged:!1,isManagedData:!1,purposes:["knowledge-graph"],connectionProperties:{connectionUri:e.connectionUri,username:e.username,password:e.password,database:e.database,fallbackServerAddresses:[]}}};return""!==e.fallBackServers?r.info.connectionProperties.fallbackServerAddresses.push(e.fallBackServers.split(",")):delete r.info.connectionProperties.fallbackServerAddresses,r}function u(e,t){const r=e.provider,o={info:{}},a={credentialType:"accesskey"};return"amazon"===r&&("accessKey"===e.credentialType?(a.accessKeyId=e.accessKey,a.secretAccessKey=e.secretKey):a.credentialType=e.credentialType,"custom"===e.selectedRegion.id?a.regionEndpointUrl=e.storageURL:(a.regionEndpointUrl=p(e.regions,e.selectedRegion),a.region=e.selectedRegion.id),o.info.objectStore=e.bucketName,o.provider="amazon"),"google"===r&&(a.accessKeyId=e.accessKey,a.secretAccessKey=e.secretKey,a.regionEndpointUrl="https://storage.googleapis.com",o.info.objectStore=e.bucketName,o.provider="Google"),"azure"!==r&&"azuredatalakegen2store"!==r||("sharedKey"===e.azureAuthenticationType?(a.credentialType="accessKey",a.accountKey=e.accountKey):"activeDirectory"===e.azureAuthenticationType?(a.credentialType=e.azureIdentityType,"servicePrincipal"===e.azureIdentityType?(a.tenantId=e.tenantId,a.clientId=e.clientId,a.clientSecret=e.clientSecret,a.authorityHost=e.authorityHost):"userAssignedIdentity"===e.azureIdentityType&&(a.managedIdentityClientId=e.clientId)):"sasToken"===e.azureAuthenticationType?(a.credentialType=e.azureAuthenticationType,a.sasToken=e.token):"anonymous"===e.azureAuthenticationType&&(a.credentialType=e.azureAuthenticationType),"other"===e.environment.id||"anonymous"===e.azureAuthenticationType?a.regionEndpointUrl=e.endpoint:a.accountEndpoint=p(e.regions,e.environment),a.accountName=e.accountName,"azure"===r?(o.info.objectStore=e.containerName,o.provider="azure"):(o.info.folder=e.cloudFolder?`${e.containerName}/${(0,s.j)(e.cloudFolder)}`:e.containerName,o.provider="azureDataLakeStore")),"alibaba"===r&&(a.accessKeyId=e.accessKey,a.secretAccessKey=e.secretKey,o.info.objectStore=e.bucketName,o.provider="Alibaba",a.regionEndpointUrl="custom"===e.selectedRegion.id?e.storageURL:p(e.regions,e.selectedRegion)),a.defaultEndpointsProtocol="https",e.cloudFolder&&"azuredatalakegen2store"!==r&&(o.info.objectStore=o.info.objectStore+"/"+(0,s.j)(e.cloudFolder)),o.type="cloudStore",o.path="/cloudStores/"+t,o.info.connectionString=JSON.stringify(a),o}function p(e,t){let r;return e.forEach((function(e){e.id===t.id&&(r=e.blobStoreEndpoint||e.storageEndpointSuffix)})),r}const y=async(e,t)=>{const r=e.results.out_connectionString.paramUrl,a=`${t}/Get%20Database%20Connection%20String/jobs/${e.jobId}/${r}`,s=await(0,o.r)(a);return v(s)},v=e=>{const t=e.value;return{connectionStringProps:h(t),connectionString:t}},h=e=>{let t=[];return e&&e.split(";").forEach((e=>{const r=e.split("=");2!==r.length||g(t,r[0])||t.push({key:r[0],value:r[1]})})),t},g=(e,t)=>e.some((e=>e.key===t)),m=()=>{var e;const t=a.c.portal,r=t.portalDeploymentType||(null===(e=t.sourceJSON)||void 0===e?void 0:e.portalDeploymentType);return t.isPortal&&"ArcGISEnterpriseOnKubernetes"===r},f=e=>{if(!e)return"";return`${e}/rest/services/System/PublishingTools/GPServer`}},41011:(e,t,r)=>{r.d(t,{a:()=>k,b:()=>j,c:()=>I,d:()=>b,e:()=>T,f:()=>f,g:()=>v,h:()=>g,i:()=>h,p:()=>y,v:()=>S});var o=r(38973),a=r(85781),s=r(44090),n=r(66301),i=r(5152),c=r(64243),l=r(67914),d=r(25972),u=r(1391);const p=async(e,t)=>{var r;const a=s.c.portal,n=`${`${(0,o.g)(a)}portals/${a.id}`}/jobs/${encodeURIComponent(e)}/?key=${encodeURIComponent(t)}`;try{return{result:await(0,d.p)(n,{pendingStatuses:["processing","submitted"],successStatuses:["succeeded"]},"post")}}catch(e){console.error(e);const t=null===(r=e.messages)||void 0===r?void 0:r[0];return(null==t?void 0:t.includes("ERROR 000623"))?{error:{code:"invalidDataStorePublishType"}}:{error:{code:"unhandledError",message:JSON.stringify(e)}}}},y=async(e,t,r)=>{var a,n,c,v,h;try{const{folder:g,type:m,cacheStoreId:f,serviceName:S,pathInCachedStore:b,description:w,serverId:T,tags:P}=e;let D;switch(m){case"i3sRestCache":case"extractedScenePackage":D="SceneServer";break;case"vectorCacheDataset":D="VectorTileServer";break;case"cacheDataset":D=r?"ImageServer":"MapServer";break;case"3DTilesDataset":D="3DTilesServer"}const k={serviceConfiguration:JSON.stringify({type:D,serviceName:S,properties:{pathInCachedStore:b,cacheStoreId:f}}),serverId:T,tags:P,f:"json"},j=`${(0,o.g)()}portals/self/datastores/publish`,{jobId:I,key:N}=await(0,d.r)(j,k,{},"post"),{error:_,result:C}=await p(I,N);if("invalidDataStorePublishType"===(null==_?void 0:_.code))return"cacheDataset"===e.type?y(e,t,!0):{error:{code:"invalidDataStorePublishType",message:JSON.stringify(_.message)}};if(_)return{error:{code:"failToPublishFromDataStore",message:JSON.stringify(_.message)}};const O=null===(a=null==C?void 0:C.result)||void 0===a?void 0:a.services[0];let J;if((0,i.a)(g)||await(0,l.m)(O.serviceItemId,g.id),(null===(c=null===(n=s.c.portal)||void 0===n?void 0:n.sourceJSON)||void 0===c?void 0:c.hasClassificationSchema)&&(u.a.classification.createdUser=s.c.user.username,u.a.classification.createdDate=Date.now()),"3DTilesServer"===D){const{result:e}=await(0,l.a)(O.serviceItemId),t=[...e.typeKeywords];"3dTiles"===u.a.tileLayerPublishType&&t.push(u.a.tilesLayer3dTilesLayerType),J=null==t?void 0:t.join(",")}let $=Object.assign(Object.assign(Object.assign({},"3DTilesServer"===D&&{typeKeywords:J}),{snippet:w,f:"json"}),(null===(h=null===(v=s.c.portal)||void 0===v?void 0:v.sourceJSON)||void 0===h?void 0:h.hasClassificationSchema)?{classification:JSON.stringify(u.a.classification)}:{});return await(0,l.u)(O.serviceItemId,$),{result:O}}catch(e){return console.error(e),{error:{code:"failToPublishFromDataStore",message:JSON.stringify(e)}}}},v=async(e,t,r,a)=>{const n=s.c.portal,i=`${`${(0,o.g)(n)}portals/${n.id}`}/datastores/describe`,c={datastoreId:e,serverId:a,path:t,type:r,f:"json"};try{const{jobId:e,key:t}=await(0,d.r)(i,c,{},"post"),{result:r}=await p(e,t);return{result:r.result}}catch(e){return console.error(e),{error:{code:"failToListDataStoreContents",message:JSON.stringify(e)}}}},h=async(e,t)=>{const r=s.c.portal,a=`${`${(0,o.g)(r)}portals/${r.id}`}/datastores/validate`,n={datastoreId:t,serverId:e.id,f:"json"};try{const{status:e}=await(0,d.r)(a,n,{},"post");return{result:e}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},g=async(e,t,r)=>{let o;try{const{result:a}=await(0,d.a)(e,t,{useProxy:!0},"post").then((e=>{if("success"===e.status)return o=e.item.itemName,m(e.item,r)}));return{result:Object.assign(Object.assign({},a),{itemName:o})}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},m=async(e,t)=>{const r=(0,n.e)(t),o=`${r}/Get%20Database%20Connection%20String/submitJob`,a={in_inputData:e.itemID,in_connDataType:"UPLOADED_CONNECTION_FILE_ID"};try{const{jobId:e,jobStatus:t}=await(0,d.r)(o,a,{useProxy:!0},"post");if("esriJobSubmitted"===(t||"")){const o=`${r}/Get%20Database%20Connection%20String/jobs/${e}`,a=await(0,d.p)(o,{requestParams:{jobId:e,jobStatus:t},pendingStatuses:["esriJobNew","esriJobSubmitted","esriJobWaiting","esriJobExecuting"],successStatuses:["esriJobSucceeded"]});return{result:await(0,n.g)(a,r)}}return{result:null}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},f=async e=>{const t={useProxy:!0};try{const r=await(0,d.r)("https://esriresources.s3.amazonaws.com/1140/regionsforcloudstorage.dat",{},t);let o;return"amazon"===e?o=r.Amazon.regions:"azure"===e||"azuredatalakegen2store"===e?o=r.environments:"alibaba"===e?o=r.Alibaba.regions:"google"===e&&(o=r.Google.regions),{result:o}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},S=async(e,t,r)=>{var o;const s=`${t.helperServices.datastoreManagement.url}/${e}/data/validateDataItem`,n=JSON.stringify(r);try{return{result:await(0,a.r)(s,t,{body:{item:n,f:"json"},usePost:!0})}}catch(e){console.error("Data Store validation error",e);const t=[["incorrect username or password","invalidUsernameOrPassword"],["connectionUrl is invalid","invalidSnowflakeServer"],["The requested warehouse does not exist or not authorized","invalidSnowflakeWarehouse"],["The requested database does not exist or not authorized","invalidSnowflakeDatabase"],["The requested schema does not exist or not authorized","invalidSnowflakeSchema"],["specified in the connect string does not exist or not authorized","invalidSnowflakeRole"],["has not enabled BigQuery","invalidBigQueryProjectId"],["private_key must be specified","invalidCredentials"],["JDBCConnection is invalid","invalidConnection"],["AWS Access Key ID you provided does not exist","invalidCredentials"],["The request signature we calculated does not match the signature you provided.","invalidCredentials"],["The specified bucket does not exist","invalidAWSBucket"],["No such host is known","invalidConnection"],["Server failed to authenticate the request","invalidCredentials"],["accountEndpoint must be specified","invalidConnection"],["Container","invalidAzureContainer"]];let r=(null===(o=JSON.stringify(e))||void 0===o?void 0:o.toLowerCase())||"",a=Array.isArray(null==e?void 0:e.details)&&e.details.length>0?e.details:void 0;for(const[e,o]of t)if(r.includes(e.toLowerCase()))return{error:{code:o,details:a}};return{error:{code:"unhandledError",details:a}}}},b=async({item:e,serverList:t,datastoreType:r,portal:o})=>{const a=await Promise.all(t.map((t=>w({item:e,server:t,datastoreType:r,portal:o}))));return t.map(((e,t)=>{var r,o,s,n,i,c;const l=a[t],d=null===(r=null==l?void 0:l.machines)||void 0===r?void 0:r[0],u=null===(o=null==d?void 0:d.dataItems)||void 0===o?void 0:o[0];return!(null==l?void 0:l.status)||"success"!==(null==l?void 0:l.status)&&(null==d?void 0:d.machine.toLowerCase())!==e.name.toLowerCase().split(":")[0]?Object.assign(Object.assign({},e),{serverStatus:"error",errorMsg:(null===(c=null==l?void 0:l.error)||void 0===c?void 0:c.message)&&JSON.parse(l.error.message).message||(null==u?void 0:u.message),error:null==u?void 0:u.error}):Object.assign(Object.assign({},e),{serverStatus:(null==l?void 0:l.status)||(null===(s=null==l?void 0:l.machines[0])||void 0===s?void 0:s.status),errorMsg:"error"===(null==d?void 0:d.status)&&(null===(n=null==l?void 0:l.error)||void 0===n?void 0:n.message)&&JSON.parse(null===(i=null==l?void 0:l.error)||void 0===i?void 0:i.message).message||(null==u?void 0:u.message),error:null==u?void 0:u.error})}))},w=async({item:e,server:t,datastoreType:r,portal:a})=>{let s,i=null;"folder"===r?s=(0,n.c)(e):"database"===r?s=(0,n.a)(e):"cloud"===r?s=(0,n.b)(e):"nosql"===r&&(s=(0,n.d)(e)),s.info.isManaged=!1;const c=`${`${(0,o.g)(a)}portals/${a.id}`}/datastores/validate`;i=!i&&e.allowServicesRestart?{datastore:JSON.stringify(s),serverId:t.id,options:JSON.stringify({allowServicesRestart:!0}),f:"json"}:Object.assign({serverId:t.id,f:"json"},{datastore:JSON.stringify(s)});try{const{status:e,machines:t}=await(0,d.r)(c,i,{},"post");return{status:e,machines:t}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},T=async e=>{let t=[],r=e;if((0,n.i)()){const e=[];r.forEach((r=>{if(r.isHosted){const e={name:r.adminUrl,type:"Linux"};t.push(e)}else"FEDERATED_SERVER"===r.serverRole&&e.push(r)}));const o=await Promise.allSettled(e.map((e=>{const t=`${e.adminUrl}/admin/machines?f=json`;return(0,d.r)(t,{},{useProxy:!0},"post")})));await Promise.allSettled(o.map((e=>{var o;return D(null===(o=null==e?void 0:e.value)||void 0===o?void 0:o.machines,r).then((e=>{t=[...t,...e]}))})))}else{const e=await Promise.allSettled(r.map((e=>{const t=`${e.adminUrl}/admin/machines?f=json`;return(0,d.r)(t,{},{useProxy:!0},"post")})));await Promise.allSettled(e.map((e=>{var o;return P(null===(o=null==e?void 0:e.value)||void 0===o?void 0:o.machines,r).then((e=>{r=[...e.serverList],t=e.serverTypes}))})))}return{servers:r,serverTypes:t}},P=async(e,t)=>{let r=[];t.map(((t,r)=>{(null==e?void 0:e[r])?t.shouldFilter=!1:t.shouldFilter=!0})),t.filter((e=>!e.shouldFilter));for(let o=0;o<t.length;o++){const a=e[0].machineName,s=`${e[0].adminURL}/machines/${a}?f=json`;await(0,d.r)(s,{},{useProxy:!0},"post").then((e=>{if(e){const a={name:t[o].adminUrl,type:e.platform.indexOf("Windows")>-1?"Windows":"Linux"};r.push(a)}}))}return{serverTypes:r,serverList:t}},D=async(e,t)=>{let r=[];return await Promise.all(t.map(((o,a)=>{if(!o.isHosted){const o=e[0].machineName,s=`${e[0].adminURL}/machines/${o}?f=json`;return(0,d.r)(s,{},{},"post").then((e=>{if(!e.isHosted){const o={name:t[a].adminUrl,type:e.platform.indexOf("Windows")>-1?"Windows":"Linux"};r.push(o)}}))}}))),r},k=async(e,t,r,a,i)=>{const l=e.addDataStoreType,u={type:"Data Store",title:t,tags:r,categories:a,snippet:i,text:"",typeKeywords:e.typeKeywords};let p;"folder"===l?p=(0,n.c)(e,t):"database"===l?p=(0,n.a)(e,t):"cloud"===l?p=(0,n.b)(e,t):"nosql"===l&&(p=(0,n.d)(e,t)),p.info.isManaged=!1,u.text=JSON.stringify(p);let y=await(0,c.x)(u,null);return y.success&&s.c.portal.isPortal&&(y=await(async(e,t)=>{const{portal:r}=s.c,a=`${(0,o.g)(r)}portals/${r.id}`,i=t.dataStoreSelectedServers,c=await Promise.all(i.map((r=>{const o={serverId:r,datastoreId:e.id};(0,n.i)()&&"folder"===t.addDataStoreType&&t.allowServicesRestart&&(o.options=JSON.stringify({allowServicesRestart:!0}));const s=`${a}/datastores/addToServer`;return(0,d.r)(s,o,{},"post")})));let l={success:!1,id:null,folder:null};for(const r of c)r.success&&["folder","database","nosql","cloud"].includes(t.addDataStoreType)&&(l={success:!0,id:e.id,folder:e.id});return l})(y,e)),y},j=async e=>{const t=`${(0,o.g)(e)}search?q=type%3A'Data+Store'&bbox=&sortField=&sortOrder=`;let r=[],a=[];try{const s=await(0,d.r)(t);return(null==s?void 0:s.total)&&(r=s.results),Promise.all(r.map((async t=>{const r=`${(0,o.g)(e)}content/items/${t.id}/data`;await(0,d.r)(r).then((e=>{a.push(e)}))}))),{result:a}}catch(e){return console.error(e),{error:{code:"unhandledError",message:JSON.stringify(e)}}}},I=(e,t,r,o)=>o.some((o=>{const a=o.info.connectionProperties;if(a)return a.connectionUri===e&&a.database===t&&a.username===r}))},85781:(e,t,r)=>{r.d(t,{r:()=>s});var o=r(25972),a=r(44090);const s=async(e,t,r={})=>{const{body:s,usePost:n,addTokenManually:i,api:c=(null===a.c||void 0===a.c?void 0:a.c.api),customToken:l}=r,d=new URLSearchParams;s&&Object.entries(s).forEach((([e,t])=>{void 0!==t&&d.append(e,t)}));const u=new URL(e);if(u.searchParams.append("f","json"),l)u.searchParams.append("token",l);else{const e=!1===i?null:await(0,o.g)(t,c);e&&u.searchParams.append("token",e)}const p=await fetch(u.toString(),{body:n?d:void 0,method:n?"POST":"GET"}),y=await p.json(),v=y.error;if(v)throw"string"==typeof v?new Error(v):v;return y}}}]);