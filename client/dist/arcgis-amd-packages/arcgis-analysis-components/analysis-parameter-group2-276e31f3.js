define(["exports","./index-60d8a971","./index2-31657c04","./primitiveFactory-642234d0","./utils-c381fe27","./analysis-areal-unit-input2-9ceb8348","./analysis-attribute-expression2-5251ae6f","./analysis-boolean-input2-a0db9269","./analysis-chip-group2-3b7294c8","./analysis-data-file-input2-68b023f4","./analysis-dataset-input2-77abd4cf","./analysis-dataset-input-popover2-13d82070","./analysis-date-input2-37fdaf39","./analysis-expression-group2-c43af168","./analysis-field-input2-d81e7661","./analysis-field-select2-d08f3f3d","./analysis-folder-input2-09c578a5","./analysis-geoenrichment-databrowser2-3b8d96ff","./analysis-geoenrichment-input2-f90aaac7","./analysis-help-popover2-2306cbe6","./analysis-item-browser2-326c174c","./analysis-item-input2-fe9e764d","./analysis-label2-5082e9b8","./analysis-layer-input2-25808e07","./analysis-layer-input-popover2-6f865570","./analysis-linear-unit-input2-46cd6e1e","./analysis-multiple-input2-4cf30ddf","./analysis-number-input2-b2684230","./analysis-overwrite2-ccd6b26e","./analysis-query-builder2-d6563e02","./analysis-query-entry2-6efeefcb","./analysis-query-input2-5b2823aa","./analysis-query-modal2-ef038098","./analysis-query-target-select2-d19b2afa","./analysis-sketch2-e4a035bf","./analysis-spatial-expression2-00a2b684","./analysis-spatial-reference-input2-222f4953","./analysis-spatial-reference-selector2-7ee3390b","./analysis-string-input2-ef684699","./analysis-summary-fields2-4f53abcb","./analysis-summary-fields-popover2-89ee90ce","./analysis-traffic-time-input2-a2781b31","./analysis-tree2-ccbef938","./analysis-unsupported-input2-35d6cead","./analysis-workflow-select2-d920e56b","./analysis-workflow-select-popover2-9dff6cd7","./isEqual-9b8f87d3"],(function(e,a,t,s,i,l,n,r,o,p,y,u,m,c,d,h,f,g,T,b,v,C,E,D,P,L,k,V,M,A,I,G,w,U,q,S,x,F,B,R,H,O,_,N,W,j,z){"use strict";const Y={[s.AnalysisToolParamDataType.GPString]:{icon:"string"},[s.AnalysisToolParamDataType.GPMultiValueString]:{icon:"string"},[s.AnalysisToolParamDataType.GPBoolean]:{icon:"boolean"},[s.AnalysisToolParamDataType.GPMultiValueBoolean]:{icon:"boolean"},[s.AnalysisToolParamDataType.GPDouble]:{icon:"number"},[s.AnalysisToolParamDataType.GPMultiValueDouble]:{icon:"number"},[s.AnalysisToolParamDataType.GPLong]:{icon:"number"},[s.AnalysisToolParamDataType.GPMultiValueLong]:{icon:"number"},[s.AnalysisToolParamDataType.GPDate]:{icon:"calendar"},[s.AnalysisToolParamDataType.GPMultiValueDate]:{icon:"calendar"},[s.AnalysisToolParamDataType.GPLinearUnit]:{icon:"line-straight"},[s.AnalysisToolParamDataType.GPArealUnit]:{icon:"polygon-area"},[s.AnalysisToolParamDataType.GPMultiValueArealUnit]:{icon:"polygon-area"},[s.AnalysisToolParamDataType.GPMultiValueLinearUnit]:{icon:"line-straight"},[s.AnalysisToolParamDataType.GPFeatureRecordSetLayer]:{icon:"feature-layer"},[s.AnalysisToolParamDataType.GPMultiValueFeatureRecordSetLayer]:{icon:"feature-layer"},[s.AnalysisToolParamDataType.GPRecordSet]:{icon:"table"},[s.AnalysisToolParamDataType.GPMultiValueRecordSet]:{icon:"tables"},[s.AnalysisToolParamDataType.GPRasterDataLayer]:{icon:"image-layer"},[s.AnalysisToolParamDataType.GPMultiValueRasterDataLayer]:{icon:"image-layer"},[s.AnalysisToolParamDataType.GPDataFile]:{icon:"data"},[s.AnalysisToolParamDataType.GPMultiValueDataFile]:{icon:"data"},[s.AnalysisToolParamDataType.GPField]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPMultiValueField]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPValueTable]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPMultiValueValueTable]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPComposite]:{icon:"brackets-curly"},[s.AnalysisToolParamDataType.GPMultiValueComposite]:{icon:"brackets-curly"}},J="NEVER_SET",K=new Set([s.AnalysisToolParamDataType.GPFeatureRecordSetLayer,s.AnalysisToolParamDataType.GPRecordSet]),Q=a.proxyCustomElement(class extends a.H{constructor(){super(),this.__registerHost(),this.__attachShadow(),this.analysisParameterGroupInputChange=a.createEvent(this,"analysisParameterGroupInputChange",7),this.analysisHelpClick=a.createEvent(this,"analysisHelpClick",7),this.selectionOptionChange=()=>{const e=this.pickerElement;this.updateDataType(e.selectedOption.value)},this.selectedChipsChange=()=>{const e=this.pickerElement,[a]=e.selectedChips,t=a;void 0!==t?this.updateDataType(t,this.selectedDataType):void 0!==this.selectedDataType&&(e.selectedChips=[this.activeDataType])},this.parameterValueChanged=()=>{if(void 0!==this.mappedElement){const e=this.mappedElement.value;if(void 0!==e&&this.isSupportedGPLayerValue(e)){if("selectedLayers"in this.mappedElement){const e=this.mappedElement.selectedLayers,a=Array.isArray(e)?e[0]:e;void 0!==a&&(this.selectedLayersMap.set(this.activeDataType,a),this.selectedLayers=e,this.trackLayerInstance(a))}}else"selectedLayers"in this.mappedElement&&(this.selectedLayersMap.set(this.activeDataType,void 0),this.selectedLayers=void 0,this.trackLayerInstance(void 0));this.updateAndEmitValue(e,this.value,this.layerCreationMode)}},this.setAnalysisRef=e=>{null!=e&&(this.mappedElement=e,this.selectedLayers=this.selectedLayersMap.get(this.activeDataType))},this.groupLabel=void 0,this.value=void 0,this.doCalciteInputChangeOnCommit=void 0,this.dataType=void 0,this.required=void 0,this.visibleTypes=[],this.UIparameterInfos=void 0,this.portal=void 0,this.mapView=void 0,this.mapLayers=void 0,this.modelVariableLayers=void 0,this.selectedLayers=void 0,this.supportsUpload=!1,this.serviceUrl=void 0,this.hideAddToMap=!1,this.paramGroupFilterLayersByChip=!1,this.pickerElement=void 0,this.mappedElement=void 0,this.UIparameterMap=new Map,this.data=new Map,this.layerIdMap=new Map,this.selectedLayersMap=new Map,this.externalBrowsedLayers=[]}onValueChange(){this.dataType===s.AnalysisToolParamDataType.GPComposite?(this.selectedDataType=this.getCompositeDataType(this.value),this.saveValue(this.selectedDataType,this.value)):this.updateSelectedLayerMap(this.activeDataType)}onDataTypeChange(e,a){e!==a&&(a===s.AnalysisToolParamDataType.GPComposite&&(this.dataType=s.AnalysisToolParamDataType.GPComposite),this.updateDataType(e,this.selectedDataType))}onVisibleTypesChange(e){this.visibleTypes=e??[]}onUIparameterInfosChange(e,a){z.isEqual(e,a)||(this.updateWithUIParameterInfos(e),this.updateAndEmitValue(this.data.get(this.activeDataType),this.value,this.layerCreationMode))}async componentWillLoad(){({strings:this.strings,dir:this.dir}=await t.fetchComponentLocaleStrings(this.hostElement,a.getAssetPath("."))),this.updateWithUIParameterInfos(this.UIparameterInfos),this.applyAllDefaultValues(),this.updateAndEmitValue(this.data.get(this.activeDataType),this.value,this.layerCreationMode)}async checkValidity(){return Promise.resolve(this.validate())}async validate(){const e=this.isGPComposite(this.value)?void 0!==this.value.value:void 0!==this.value;let a=!0!==this.required||!1!==e;try{void 0!==this.mappedElement&&"checkValidity"in this.mappedElement&&(a=await this.mappedElement.checkValidity())}catch(e){}return a}saveValue(e,a){const t=this.isGPComposite(a)?a.dataType:e;if(void 0!==t){const e=this.data.get(t);this.data.set(t,a),z.isEqual(a,e)||this.updateSelectedLayerMap(t)}}updateAndEmitValue(e,a,t){if(!z.isEqual(e,a)){const a=this.formatCompositeValue(this.activeDataType,e);this.saveValue(this.activeDataType,a),this.value=a,this.selectedDataType=this.getCompositeDataType(a)??this.activeDataType,this.analysisParameterGroupInputChange.emit({data:a,creationMode:t})}}updateDataType(e,a=this.activeDataType){null!=e&&e!==a&&(this.saveValue(a,this.value),this.selectedDataType=e,this.dataType!==s.AnalysisToolParamDataType.GPComposite&&(this.dataType=e),this.applyDefaultValue(e),this.updateAndEmitValue(this.data.get(e),this.value,this.layerCreationMode))}getNewLayerIdState(e,a){return void 0!==e?e:a===J?J:"NO_LAYER"}updateLayerIdMap(e,a){const t=this.layerIdMap.get(e)??J,s=a?.id,i=this.getNewLayerIdState(s,t);this.layerIdMap.set(e,i),i!==t&&t!==J&&(this.saveValue(e,void 0),this.applyDefaultValue(e))}updateUIParameterMap(e){const{dataType:a,...t}=e;this.UIparameterMap.set(a,t)}updateDataMap(e){const{dataType:a,value:t,mapLayer:s}=e;void 0!==a&&this.updateLayerIdMap(a,s);const i=this.formatCompositeValue(a,t??this.data.get(a));this.saveValue(a,i)}updateSelectedLayerMap(e){if(void 0!==e){const a=this.data.get(e),s=t.valueHasVariable(a)?{variable:a.variable}:void 0,i=this.isGPComposite(a)?a.value??s:a,l=t.valueHasVariable(a)&&a.variable===this.selectedLayersMap.get(e)?.id;K.has(e)&&this.isSupportedGPLayerValue(i)&&!l&&this.fetchEligibleLayerInstance(i).then((a=>{this.selectedLayersMap.set(e,a),this.selectedLayers=a,this.trackLayerInstance(a),e===this.activeDataType&&(this.selectedLayersMap=new Map(this.selectedLayersMap))}))}}formatCompositeValue(e,a){const i=t.valueHasVariable(a);return this.dataType===s.AnalysisToolParamDataType.GPComposite&&!1===this.isGPComposite(a)?{dataType:e,...i?{}:{value:a},...i?{variable:a.variable}:{}}:a}getCompositeDataType(e){return this.isGPComposite(e)?e.dataType:void 0}getCompositeValue(e){const a=t.valueHasVariable(e);return this.isGPComposite(e)&&!a?e.value:e}isGPComposite(e){return"object"==typeof e&&null!==e&&"dataType"in e&&t.isNotEmpty(e.dataType)&&("value"in e||"variable"in e)}applyAllDefaultValues(){this.UIparameterMap.forEach(((e,a)=>{this.applyDefaultValue(a)}))}applyDefaultValue(e){const{defaultValue:a}=this.UIparameterMap.get(e)??{},t=this.data.get(e),s=this.getCompositeValue(t),i=this.getCompositeValue(a);if(null==s&&null!=i){const a=this.formatCompositeValue(e,i);this.saveValue(e,a)}}updateWithUIParameterInfos(e){this.dataType===s.AnalysisToolParamDataType.GPComposite?this.selectedDataType=this.getCompositeDataType(this.value):this.selectedDataType=this.dataType,this.saveValue(this.selectedDataType??this.dataType,this.value),this.UIparameterMap.clear();const a=e??[];for(const e of a)this.updateUIParameterMap(e),this.updateDataMap(e)}get dataTypes(){return[...this.UIparameterMap.keys()].filter((e=>0===this.visibleTypes.length||this.visibleTypes.includes(e)))}get activeDataType(){let e=this.selectedDataType;if(void 0===e||!1===this.dataTypes.includes(e)){const a=this.dataTypes[0];e=a,this.selectedDataType=a,this.dataType!==s.AnalysisToolParamDataType.GPComposite&&(this.dataType=a)}return e}get allLayers(){return[this.mapLayers,this.externalBrowsedLayers,this.modelVariableLayers].flat().filter((e=>Boolean(e)))}get layerCreationMode(){let e;return void 0!==this.mappedElement&&"creationMode"in this.mappedElement&&(e=this.mappedElement.creationMode),e}get allLayerIds(){const e=this.allLayers.map((e=>e.id)).filter(Boolean);return new Set(e)}getChipGroupData(){return this.dataTypes.reduce(((e,a)=>{const t=this.UIparameterMap.get(a),s=Y[a]?.icon??"circle-disallowed",i=t?.parameterGroupDataTypeLabel??this.strings[a]??a;return e.labels.push(i),e.icons.push(s),e}),{labels:[],icons:[]})}renderChipGroup(){const e=this.dataTypes,t=this.getChipGroupData();return a.h("analysis-chip-group",{ref:e=>{this.pickerElement=e},selectionMode:"single",value:e,chipLabel:t.labels,selectedChips:[this.activeDataType],iconLabel:t.icons,label:this.groupLabel,required:!0,onAnalysisChipGroupSelectionChange:this.selectedChipsChange})}renderSelect(){return a.h("calcite-select",{ref:e=>{this.pickerElement=e},label:this.strings.gpSelection,onCalciteSelectChange:this.selectionOptionChange,scale:i.UIDefaults.Scale},a.h("calcite-option-group",{label:this.strings.gpTypes},this.dataTypes.map((e=>a.h("calcite-option",{key:e,value:e,selected:e===this.activeDataType},this.strings[e]??e)))))}renderDefaultComponent(){const e=this.activeDataType,t=this.getCompositeValue(this.data.get(e)),l=void 0===Y[e],n=Array.isArray(this.selectedLayers)?this.selectedLayers[0]:this.selectedLayers;let r;e===s.AnalysisToolParamDataType.GPRecordSet&&(r=i.LayerFilterType.Feature_Table);const o={...this.UIparameterMap.get(e)??{},selectedLayers:this.selectedLayers,selectedLayerIds:void 0!==n?.id?[n.id]:[],layerFilterType:this.paramGroupFilterLayersByChip?r:this.UIparameterMap.get(e)?.layerFilterType};return a.h(s.AnalysisPrimitiveParameter,{key:e,name:e,dataType:e,portal:this.portal,user:this.portal?.user,mapView:this.mapView,mapLayers:this.mapLayers,modelVariableLayers:this.modelVariableLayers,externalBrowsedLayers:this.externalBrowsedLayers,supportsUpload:this.supportsUpload,serviceUrl:this.serviceUrl,...o,value:t,hideLabel:l,required:this.required,onSetRef:this.setAnalysisRef,onValueChange:this.parameterValueChanged,doCalciteInputChangeOnCommit:this.doCalciteInputChangeOnCommit,hideAddToMap:this.hideAddToMap})}render(){const e=this.UIparameterMap.get(this.activeDataType)??{},t=!0===this.required&&(void 0===e.label||""===e.label);return a.h(a.Host,{key:"b6500f29426af11c0196faedf9520853d7ce17a0",dir:this.dir},a.h("analysis-label",{key:"dff31fa766f89184080200ca3ccd7ff4397f87a1",label:this.groupLabel,required:t,onAnalysisLabelHelpActionClick:()=>this.analysisHelpClick.emit()}),a.h("div",{key:"d6dc66fdeb8987073038a6ae25bec3eada879b9b",class:"data-type-selector"},this.dataTypes.length<=2?this.renderChipGroup():this.renderSelect()),this.renderDefaultComponent())}trackLayerInstance(e){void 0!==e&&!1===this.allLayerIds.has(e.id)&&(this.externalBrowsedLayers=[...this.externalBrowsedLayers,e])}isSupportedGPLayerValue(e){return"object"==typeof e&&null!==e&&("url"in e||"itemId"in e||"layerDefinition"in e||"variable"in e)}async fetchEligibleLayerInstance(e){const a=await t.getLayer(e,this.allLayers);return this.trackLayerInstance(a),a}static get assetsDirs(){return["t9n"]}get hostElement(){return this}static get watchers(){return{value:["onValueChange"],dataType:["onDataTypeChange"],visibleTypes:["onVisibleTypesChange"],UIparameterInfos:["onUIparameterInfosChange"]}}static get style(){return":root{--analysis-quarter-spacing:0.25rem;--analysis-half-spacing:0.5rem;--analysis-three-quarter-spacing:0.75rem;--analysis-full-spacing:1rem;--analysis-component-default-width:100%;--analysis-ui-border-input:#d4d4d4;--analysis-label-font-size:var(--calcite-font-size--2);--analysis-popover-content-min-height-s:7.5rem;--analysis-popover-content-min-height-m:8.75rem;--analysis-popover-content-max-height:60vh;--analysis-popover-content-height:45vh}:host{--calcite-color-border-input:var(--analysis-ui-border-input);margin-bottom:var(--analysis-half-spacing)}.data-type-selector{margin-bottom:var(--analysis-quarter-spacing)}"}},[1,"analysis-parameter-group",{groupLabel:[513,"group-label"],value:[1032],doCalciteInputChangeOnCommit:[4,"do-calcite-input-change-on-commit"],dataType:[1537,"data-type"],required:[516],visibleTypes:[16],UIparameterInfos:[16],portal:[16],mapView:[16],mapLayers:[16],modelVariableLayers:[16],selectedLayers:[16],supportsUpload:[4,"supports-upload"],serviceUrl:[1,"service-url"],hideAddToMap:[4,"hide-add-to-map"],paramGroupFilterLayersByChip:[4,"param-group-filter-layers-by-chip"],pickerElement:[32],mappedElement:[32],UIparameterMap:[32],data:[32],layerIdMap:[32],selectedLayersMap:[32],externalBrowsedLayers:[32],checkValidity:[64]},void 0,{value:["onValueChange"],dataType:["onDataTypeChange"],visibleTypes:["onVisibleTypesChange"],UIparameterInfos:["onUIparameterInfosChange"]}]);function X(){"undefined"!=typeof customElements&&["analysis-parameter-group","analysis-areal-unit-input","analysis-attribute-expression","analysis-boolean-input","analysis-chip-group","analysis-data-file-input","analysis-dataset-input","analysis-dataset-input-popover","analysis-date-input","analysis-expression-group","analysis-field-input","analysis-field-select","analysis-folder-input","analysis-geoenrichment-databrowser","analysis-geoenrichment-input","analysis-help-popover","analysis-item-browser","analysis-item-input","analysis-label","analysis-layer-input","analysis-layer-input-popover","analysis-linear-unit-input","analysis-multiple-input","analysis-number-input","analysis-overwrite","analysis-query-builder","analysis-query-entry","analysis-query-input","analysis-query-modal","analysis-query-target-select","analysis-sketch","analysis-spatial-expression","analysis-spatial-reference-input","analysis-spatial-reference-selector","analysis-string-input","analysis-summary-fields","analysis-summary-fields-popover","analysis-traffic-time-input","analysis-tree","analysis-unsupported-input","analysis-workflow-select","analysis-workflow-select-popover"].forEach((e=>{switch(e){case"analysis-parameter-group":customElements.get(e)||customElements.define(e,Q);break;case"analysis-areal-unit-input":customElements.get(e)||l.defineCustomElement();break;case"analysis-attribute-expression":customElements.get(e)||n.defineCustomElement();break;case"analysis-boolean-input":customElements.get(e)||r.defineCustomElement();break;case"analysis-chip-group":customElements.get(e)||o.defineCustomElement();break;case"analysis-data-file-input":customElements.get(e)||p.defineCustomElement();break;case"analysis-dataset-input":customElements.get(e)||y.defineCustomElement();break;case"analysis-dataset-input-popover":customElements.get(e)||u.defineCustomElement();break;case"analysis-date-input":customElements.get(e)||m.defineCustomElement();break;case"analysis-expression-group":customElements.get(e)||c.defineCustomElement();break;case"analysis-field-input":customElements.get(e)||d.defineCustomElement();break;case"analysis-field-select":customElements.get(e)||h.defineCustomElement();break;case"analysis-folder-input":customElements.get(e)||f.defineCustomElement();break;case"analysis-geoenrichment-databrowser":customElements.get(e)||g.defineCustomElement();break;case"analysis-geoenrichment-input":customElements.get(e)||T.defineCustomElement();break;case"analysis-help-popover":customElements.get(e)||b.defineCustomElement();break;case"analysis-item-browser":customElements.get(e)||v.defineCustomElement();break;case"analysis-item-input":customElements.get(e)||C.defineCustomElement();break;case"analysis-label":customElements.get(e)||E.defineCustomElement();break;case"analysis-layer-input":customElements.get(e)||D.defineCustomElement();break;case"analysis-layer-input-popover":customElements.get(e)||P.defineCustomElement();break;case"analysis-linear-unit-input":customElements.get(e)||L.defineCustomElement();break;case"analysis-multiple-input":customElements.get(e)||k.defineCustomElement();break;case"analysis-number-input":customElements.get(e)||V.defineCustomElement();break;case"analysis-overwrite":customElements.get(e)||M.defineCustomElement();break;case"analysis-query-builder":customElements.get(e)||A.defineCustomElement();break;case"analysis-query-entry":customElements.get(e)||I.defineCustomElement();break;case"analysis-query-input":customElements.get(e)||G.defineCustomElement();break;case"analysis-query-modal":customElements.get(e)||w.defineCustomElement();break;case"analysis-query-target-select":customElements.get(e)||U.defineCustomElement();break;case"analysis-sketch":customElements.get(e)||q.defineCustomElement();break;case"analysis-spatial-expression":customElements.get(e)||S.defineCustomElement();break;case"analysis-spatial-reference-input":customElements.get(e)||x.defineCustomElement();break;case"analysis-spatial-reference-selector":customElements.get(e)||F.defineCustomElement();break;case"analysis-string-input":customElements.get(e)||B.defineCustomElement();break;case"analysis-summary-fields":customElements.get(e)||R.defineCustomElement();break;case"analysis-summary-fields-popover":customElements.get(e)||H.defineCustomElement();break;case"analysis-traffic-time-input":customElements.get(e)||O.defineCustomElement();break;case"analysis-tree":customElements.get(e)||_.defineCustomElement();break;case"analysis-unsupported-input":customElements.get(e)||N.defineCustomElement();break;case"analysis-workflow-select":customElements.get(e)||W.defineCustomElement();break;case"analysis-workflow-select-popover":customElements.get(e)||j.defineCustomElement()}}))}X(),e.AnalysisParameterGroup=Q,e.defineCustomElement=X}));