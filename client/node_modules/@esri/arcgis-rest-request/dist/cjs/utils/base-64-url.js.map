{"version":3,"file":"base-64-url.js","sourceRoot":"","sources":["../../../src/utils/base-64-url.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,SAAgB,eAAe,CAAC,KAAU,EAAE,GAAG,GAAG,MAAM;IACtD,kGAAkG;IAClG,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE;QAClB,GAAG,GAAG,MAAM,CAAC;KACd;IACD,OAAO,GAAG;SACP,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC5C,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,mBAAmB;SACvC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,mBAAmB;SACvC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,kBAAkB;AAC3C,CAAC;AAVD,0CAUC","sourcesContent":["/**\n * Encodes a `Uint8Array` to base 64. Used internally for hashing the `code_verifier` and `code_challenge` for PKCE.\n */\nexport function base64UrlEncode(value: any, win = window) {\n  /* istanbul ignore next: must pass in a mockwindow for tests so we can't cover the other branch */\n  if (!win && window) {\n    win = window;\n  }\n  return win\n    .btoa(String.fromCharCode.apply(null, value))\n    .replace(/\\+/g, \"-\") // replace + with -\n    .replace(/\\//g, \"_\") // replace / with _\n    .replace(/=+$/, \"\"); // trim trailing =\n}\n"]}