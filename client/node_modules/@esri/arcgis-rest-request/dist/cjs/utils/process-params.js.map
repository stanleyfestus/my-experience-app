{"version":3,"file":"process-params.js","sourceRoot":"","sources":["../../../src/utils/process-params.ts"],"names":[],"mappings":"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","sourcesContent":["/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * Checks parameters to see if we should use FormData to send the request\n * @param params The object whose keys will be encoded.\n * @return A boolean indicating if FormData will be required.\n */\nexport function requiresFormData(params: any) {\n  return Object.keys(params).some((key) => {\n    let value = params[key];\n\n    if (!value) {\n      return false;\n    }\n\n    if (value && value.toParam) {\n      value = value.toParam();\n    }\n\n    const type = value.constructor.name;\n\n    switch (type) {\n      case \"Array\":\n        return false;\n      case \"Object\":\n        return false;\n      case \"Date\":\n        return false;\n      case \"Function\":\n        return false;\n      case \"Boolean\":\n        return false;\n      case \"String\":\n        return false;\n      case \"Number\":\n        return false;\n      default:\n        return true;\n    }\n  });\n}\n\n/**\n * Converts parameters to the proper representation to send to the ArcGIS REST API.\n * @param params The object whose keys will be encoded.\n * @return A new object with properly encoded values.\n */\nexport function processParams(params: any): any {\n  const newParams: any = {};\n\n  Object.keys(params).forEach((key) => {\n    let param = params[key];\n\n    if (param && param.toParam) {\n      param = param.toParam();\n    }\n\n    if (\n      !param &&\n      param !== 0 &&\n      typeof param !== \"boolean\" &&\n      typeof param !== \"string\"\n    ) {\n      return;\n    }\n\n    const type = param.constructor.name;\n\n    let value: any;\n\n    // properly encodes objects, arrays and dates for arcgis.com and other services.\n    // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30\n    // also see https://github.com/Esri/arcgis-rest-js/issues/18:\n    // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string \"\".\n    switch (type) {\n      case \"Array\":\n        // Based on the first element of the array, classify array as an array of arrays, an array of objects\n        // to be stringified, or an array of non-objects to be comma-separated\n        // eslint-disable-next-line no-case-declarations\n        const firstElementType = param[0]?.constructor?.name;\n        value =\n          firstElementType === \"Array\"\n            ? param // pass thru array of arrays\n            : firstElementType === \"Object\"\n            ? JSON.stringify(param) // stringify array of objects\n            : param.join(\",\"); // join other types of array elements\n        break;\n      case \"Object\":\n        value = JSON.stringify(param);\n        break;\n      case \"Date\":\n        value = param.valueOf();\n        break;\n      case \"Function\":\n        value = null;\n        break;\n      case \"Boolean\":\n        value = param + \"\";\n        break;\n      default:\n        value = param;\n        break;\n    }\n    if (\n      value ||\n      value === 0 ||\n      typeof value === \"string\" ||\n      Array.isArray(value)\n    ) {\n      newParams[key] = value;\n    }\n  });\n\n  return newParams;\n}\n"]}