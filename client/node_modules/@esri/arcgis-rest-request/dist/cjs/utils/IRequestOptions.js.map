{"version":3,"file":"IRequestOptions.js","sourceRoot":"","sources":["../../../src/utils/IRequestOptions.ts"],"names":[],"mappings":"","sourcesContent":["import { HTTPMethods } from \"./HTTPMethods.js\";\nimport { IParams } from \"./IParams.js\";\nimport { IAuthenticationManager } from \"./IAuthenticationManager.js\";\n\n/**\n * Options for the `request()` method.\n */\nexport interface IRequestOptions {\n  /**\n   * Additional parameters to pass in the request.\n   */\n  params?: IParams;\n  /**\n   * The HTTP method to send the request with.\n   */\n  httpMethod?: HTTPMethods;\n  /**\n   * Return the raw [response](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n   */\n  rawResponse?: boolean;\n  /**\n   * The instance of {@linkcode ApiKey}, {@linkcode ArcGISIdentityManager} or {@linkcode ApplicationSession} to use to authenticate this request. A token may also be passed directly as a string however using the built in authentication managers is encouraged.\n   */\n  authentication?: IAuthenticationManager | string;\n  /**\n   * Prevents the token from being passed in a URL Query param that is saved in browser history.\n   * Instead, the token will be passed in POST request body or through X-Esri-Authorization header.\n   * NOTE: This will force POST requests in browsers since auth header is not yet supported by preflight OPTIONS check with CORS.\n   */\n  hideToken?: boolean;\n  /**\n   * Base url for the portal you want to make the request to. Defaults to authentication.portal if authentication\n   * exists, otherwise to 'https://www.arcgis.com/sharing/rest'.\n   */\n  portal?: string;\n  /**\n   * The implementation of `fetch` to use. Defaults to a global `fetch`.\n   */\n  // fetch?: (input: RequestInfo, init?) => Promise<Response>;\n  /**\n   * A string indicating whether credentials (cookies) will be sent with the request. Used internally for authentication workflows.\n   */\n  credentials?: RequestCredentials;\n  /**\n   * If the length of a GET request's URL exceeds `maxUrlLength` the request will use POST instead.\n   */\n  maxUrlLength?: number;\n  /**\n   * Additional [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) to pass into the request.\n   */\n  headers?: {\n    [key: string]: any;\n  };\n  /**\n   * An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) object instance; allows you to abort a request and via an [AbortController](https://developer.mozilla.org/en-US/docs/Web/API/AbortController).\n   */\n  signal?: AbortSignal;\n\n  /**\n   * Suppress any ArcGIS REST JS related warnings for this request.\n   */\n  suppressWarnings?: boolean;\n}\n"]}