{"version":3,"file":"revoke-token.js","sourceRoot":"","sources":["../../src/revoke-token.ts"],"names":[],"mappings":";;;AAAA,yCAMoB;AA0BpB;;;;GAIG;AACH,SAAgB,WAAW,CACzB,cAAmC;IAEnC,MAAM,GAAG,GAAG,GAAG,IAAA,mBAAQ,EACrB,cAAc,CAAC,MAAM,IAAI,qCAAqC,CAC/D,sBAAsB,CAAC;IAExB,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;IACnC,MAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;IAEzC,OAAO,cAAc,CAAC,MAAM,CAAC;IAC7B,OAAO,cAAc,CAAC,QAAQ,CAAC;IAC/B,OAAO,cAAc,CAAC,KAAK,CAAC;IAE5B,MAAM,OAAO,mCACR,cAAc,KACjB,UAAU,EAAE,MAAM,EAClB,MAAM,EAAE;YACN,SAAS,EAAE,QAAQ;YACnB,UAAU,EAAE,KAAK;SAClB,GACF,CAAC;IAEF,OAAO,IAAA,kBAAO,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACrB,MAAM,IAAI,6BAAkB,CAC1B,wBAAwB,EACxB,GAAG,EACH,QAAQ,EACR,GAAG,EACH,OAAO,CACR,CAAC;SACH;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC;AAnCD,kCAmCC","sourcesContent":["import {\n  IRequestOptions,\n  request,\n  cleanUrl,\n  ArcGISRequestError,\n  appendCustomParams\n} from \"./index.js\";\n\nexport interface IRevokeTokenOptions extends IRequestOptions {\n  /**\n   * The token or refresh token to revoke. If a refresh token is passed all access tokens generated with that refresh token are also revoked.\n   */\n  token: string;\n\n  /**\n   * The portal of the tokens to revoke. Defaults to `https://www.arcgis.com/sharing/rest`.\n   */\n  portal?: string;\n\n  /**\n   * The client id fo the application that generated the tokens. Applications can only revoke tokens they created.\n   */\n  clientId: string;\n}\n\nexport interface IRevokeTokenResponse {\n  /**\n   * Indicates if the token was revoked. A success response will also returned for invalid tokens, expired tokens or of an unsupported type of token to prevent leaking information about the provided token.\n   */\n  success: boolean;\n}\n\n/**\n * Revokes a token generated via any oAuth 2.0 method. `token` can be either a refresh token OR an access token. If you are using  {@linkcode ArcGISIdentityManager} you should use  {@linkcode ArcGISIdentityManager.destroy} instead. Cannot revoke API keys or tokens generated by {@linkcode ApplicationCredentialsManager}.\n *\n * See [`revokeToken`](https://developers.arcgis.com/rest/users-groups-and-items/revoke-token.htm) on the ArcGIS REST API for more details.\n */\nexport function revokeToken(\n  requestOptions: IRevokeTokenOptions\n): Promise<IRevokeTokenResponse> {\n  const url = `${cleanUrl(\n    requestOptions.portal || \"https://www.arcgis.com/sharing/rest\"\n  )}/oauth2/revokeToken/`;\n\n  const token = requestOptions.token;\n  const clientId = requestOptions.clientId;\n\n  delete requestOptions.portal;\n  delete requestOptions.clientId;\n  delete requestOptions.token;\n\n  const options: IRequestOptions = {\n    ...requestOptions,\n    httpMethod: \"POST\",\n    params: {\n      client_id: clientId,\n      auth_token: token\n    }\n  };\n\n  return request(url, options).then((response) => {\n    if (!response.success) {\n      throw new ArcGISRequestError(\n        \"Unable to revoke token\",\n        500,\n        response,\n        url,\n        options\n      );\n    }\n    return response;\n  });\n}\n"]}