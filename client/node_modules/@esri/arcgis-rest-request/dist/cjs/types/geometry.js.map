{"version":3,"file":"geometry.js","sourceRoot":"","sources":["../../../src/types/geometry.ts"],"names":[],"mappings":";AAAA;gBACgB","sourcesContent":["/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n/**\n * `IHasZM` can also be imported from the following packages:\n *\n * ```js\n * import { IHasZM } from \"@esri/arcgis-rest-feature-service\";\n * ```\n */\nexport interface IHasZM {\n  hasZ?: boolean;\n  hasM?: boolean;\n}\n\n/**\n * Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n *\n * `ISpatialReference` can also be imported from the following packages:\n *\n * ```js\n * import { ISpatialReference } from \"@esri/arcgis-rest-geocoding\";\n * import { ISpatialReference } from \"@esri/arcgis-rest-service-admin\";\n * import { ISpatialReference } from \"@esri/arcgis-rest-feature-service\";\n * ```\n */\nexport interface ISpatialReference {\n  wkid?: number;\n  latestWkid?: number;\n  vcsWkid?: number;\n  latestVcsWkid?: number;\n  wkt?: string;\n  latestWkt?: string;\n}\n\n/**\n * a building block for discrete geometries\n *\n * `IGeometry` can also be imported from the following packages:\n *\n * ```js\n * import { IGeometry } from \"@esri/arcgis-rest-feature-service\";\n * ```\n */\nexport interface IGeometry {\n  spatialReference?: ISpatialReference;\n}\n\n/**\n * A simple point geometry, with spatial reference defined.\n *\n * `IPoint` can also be imported from the following packages:\n *\n * ```js\n * import { IPoint } from \"@esri/arcgis-rest-routing\";\n * import { IPoint } from \"@esri/arcgis-rest-geocoding\";\n * ```\n */\nexport interface IPoint extends IHasZM, IGeometry {\n  x: number;\n  y: number;\n  z?: number;\n}\n\n/**\n * `ILocation` can also be imported from the following packages:\n *\n * ```js\n * import { ILocation } from \"@esri/arcgis-rest-routing\";\n * import { ILocation } from \"@esri/arcgis-rest-geocoding\";\n * ```\n */\nexport interface ILocation {\n  latitude?: number;\n  longitude?: number;\n  lat?: number;\n  long?: number;\n  z?: number;\n}\n\n/**\n * A polyline geometry.\n *\n * `IPolyLine` can also be imported from the following packages:\n *\n * ```\n * import { IPolyLine } from \"@esri/arcgis-rest-routing\";\n * ```\n */\nexport interface IPolyline extends IHasZM, IGeometry {\n  paths: Position[][];\n}\n\n/**\n *\n */\nexport interface IPolylineWithCurves extends IHasZM, IGeometry {\n  curvePaths: Array<Array<Position | JsonCurve>>;\n}\n\n/**\n *\n */\nexport interface IPolygon extends IHasZM, IGeometry {\n  rings: Position[][];\n}\n\n/**\n *\n */\nexport interface IPolygonWithCurves extends IHasZM, IGeometry {\n  curveRings: Array<Array<Position | JsonCurve>>;\n}\n\n/**\n *\n */\nexport type Position =\n  | Position2D\n  | [number, number, number]\n  | [number, number, number, number];\n\n/**\n * `Position2D` can also be imported from the following packages:\n *\n * ```\n * import { Position2D } from \"@esri/arcgis-rest-routing\";\n * ```\n */\nexport type Position2D = [number, number];\n\n/**\n * An arc can be represented as a JSON curve object\n */\nexport interface IArc {\n  a: [\n    Position, // End point: x, y, <z>, <m>\n    Position2D, // Center point: center_x, center_y\n    number, // minor\n    number, // clockwise\n    number, // rotation\n    number, // axis\n    number // ratio\n  ];\n}\n\n/**\n * a bezier curve can be represented as a JSON curve object\n */\nexport interface IBezierCurve {\n  b: [Position, Position2D, Position2D];\n}\n\n/**\n * a circular arc can be represented as a JSON curve object\n */\nexport interface ICircularArc {\n  c: [Position, Position2D];\n}\n\n/**\n *\n */\nexport type ElipticArc = IArc;\n\n/**\n * `GeometryType` can also be imported from the following packages:\n *\n * ```js\n * import { GeometryType } from \"@esri/arcgis-rest-feature-service\";\n * ```\n */\nexport type GeometryType =\n  | \"esriGeometryPoint\"\n  | \"esriGeometryMultipoint\"\n  | \"esriGeometryPolyline\"\n  | \"esriGeometryPolygon\"\n  | \"esriGeometryEnvelope\"\n  | \"esriGeometryMultiPatch\";\n\n/**\n * Extents are used to define rectangles and bounding boxes.\n *\n * `IExtent` can also be imported from the following packages:\n *\n * ```js\n * import { IExtent } from \"@esri/arcgis-rest-demographics\";\n * import { IExtent } from \"@esri/arcgis-rest-feature-service\";\n * import { IExtent } from \"@esri/arcgis-rest-geocoding\";\n * import { IExtent } from \"@esri/arcgis-rest-service-admin\";\n * ```\n */\nexport interface IExtent {\n  xmin: number;\n  ymin: number;\n  zmin?: number;\n  xmax: number;\n  ymax: number;\n  zmax?: number;\n  spatialReference?: ISpatialReference;\n}\n\n/**\n *\n */\nexport type JsonCurve = ICircularArc | IArc | IOldCircularArc | IBezierCurve;\n\n/**\n *\n */\nexport interface IOldCircularArc {\n  a: [\n    Position, // End point: x, y, <z>, <m>\n    Position2D, // Center point: center_x, center_y\n    number, // minor\n    number // clockwise\n  ];\n}\n\n/**\n * A multipoint contains an array of points.\n */\nexport interface IMultipoint extends IHasZM, IGeometry {\n  points: Position[];\n}\n\n/**\n * `Units` can also be imported from the following packages:\n *\n * ```js\n * import { Units } from \"@esri/arcgis-rest-feature-service\";\n * ```\n */\nexport type Units =\n  | \"esriSRUnit_Meter\"\n  | \"esriSRUnit_StatuteMile\"\n  | \"esriSRUnit_Foot\"\n  | \"esriSRUnit_Kilometer\"\n  | \"esriSRUnit_NauticalMile\"\n  | \"esriSRUnit_USNauticalMile\";\n"]}