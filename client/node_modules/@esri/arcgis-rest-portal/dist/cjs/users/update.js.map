{"version":3,"file":"update.js","sourceRoot":"","sources":["../../../src/users/update.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,mEAAgF;AAEhF,iEAAyD;AAczD;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,SAAgB,UAAU,CACxB,cAAmC;IAEnC,qFAAqF;IACrF,MAAM,QAAQ,GACZ,cAAc,CAAC,IAAI,CAAC,QAAQ,IAAI,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC;IAEzE,MAAM,SAAS,GAAG,GAAG,IAAA,gCAAY,EAC/B,cAAc,CACf,oBAAoB,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC;IAE3D,wEAAwE;IACxE,cAAc,CAAC,MAAM,mCAChB,cAAc,CAAC,IAAI,GACnB,cAAc,CAAC,MAAM,CACzB,CAAC;IAEF,OAAO,cAAc,CAAC,IAAI,CAAC;IAE3B,mBAAmB;IACnB,OAAO,IAAA,6BAAO,EAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC5C,CAAC;AArBD,gCAqBC","sourcesContent":["/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request, IUserRequestOptions, IUser } from \"@esri/arcgis-rest-request\";\n\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\n\nexport interface IUpdateUserOptions extends IUserRequestOptions {\n  /**\n   * The user properties to be updated.\n   */\n  user: IUser;\n}\n\nexport interface IUpdateUserResponse {\n  success: boolean;\n  username: string;\n}\n\n/**\n * Update a user profile. The username will be extracted from the authentication session unless it is provided explicitly. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-user.htm) for more information.\n *\n * ```js\n * import { updateUser } from '@esri/arcgis-rest-portal';\n *\n * // any user can update their own profile\n * updateUser({\n *   authentication,\n *   user: { description: \"better than the last one\" }\n * })\n *   .then(response)\n *\n * // org administrators must declare the username that will be updated explicitly\n * updateUser({\n *   authentication,\n *   user: { username: \"c@sey\", description: \"\" }\n * })\n *   .then(response)\n * // => { \"success\": true, \"username\": \"c@sey\" }\n * ```\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with metadata about the user\n */\nexport function updateUser(\n  requestOptions?: IUpdateUserOptions\n): Promise<IUpdateUserResponse> {\n  // default to the authenticated username unless another username is provided manually\n  const username =\n    requestOptions.user.username || requestOptions.authentication.username;\n\n  const updateUrl = `${getPortalUrl(\n    requestOptions\n  )}/community/users/${encodeURIComponent(username)}/update`;\n\n  // mixin custom params and the user information, then drop the user info\n  requestOptions.params = {\n    ...requestOptions.user,\n    ...requestOptions.params\n  };\n\n  delete requestOptions.user;\n\n  // send the request\n  return request(updateUrl, requestOptions);\n}\n"]}