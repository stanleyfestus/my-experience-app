{"version":3,"file":"get-subscription-info.js","sourceRoot":"","sources":["../../../src/util/get-subscription-info.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,mEAAqE;AAErE,2DAAmD;AAOnD;;;;;;;;;;;;;GAaG;AACH,SAAgB,mBAAmB,CACjC,EAAW,EACX,cAAgC;IAEhC,2BAA2B;IAC3B,MAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;IAClC,MAAM,GAAG,GAAG,GAAG,IAAA,gCAAY,EACzB,cAAc,CACf,YAAY,QAAQ,mBAAmB,CAAC;IAEzC,2BAA2B;IAC3B,MAAM,OAAO,iBACR,EAAE,UAAU,EAAE,KAAK,EAAE,EACrB,cAAc,CAClB,CAAC;IAEF,mBAAmB;IACnB,OAAO,IAAA,6BAAO,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC/B,CAAC;AAlBD,kDAkBC","sourcesContent":["/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request, IRequestOptions } from \"@esri/arcgis-rest-request\";\n\nimport { getPortalUrl } from \"./get-portal-url.js\";\n\nexport interface ISubscriptionInfo {\n  id: string;\n  [key: string]: any;\n}\n\n/**\n * Fetch subscription information about the current portal by id. If no id is passed, portals/self/subscriptionInfo will be called\n *\n * ```js\n * import { getSubscriptionInfo } from \"@esri/arcgis-rest-portal\";\n *\n * getSubscriptionInfo()\n * getSubscriptionInfo(\"fe8\")\n * getSubscriptionInfo(null, { portal: \"https://custom.maps.arcgis.com/sharing/rest/\" })\n * ```\n *\n * @param id\n * @param requestOptions\n */\nexport function getSubscriptionInfo(\n  id?: string,\n  requestOptions?: IRequestOptions\n): Promise<ISubscriptionInfo> {\n  // construct the search url\n  const idOrSelf = id ? id : \"self\";\n  const url = `${getPortalUrl(\n    requestOptions\n  )}/portals/${idOrSelf}/subscriptionInfo`;\n\n  // default to a GET request\n  const options: IRequestOptions = {\n    ...{ httpMethod: \"GET\" },\n    ...requestOptions\n  };\n\n  // send the request\n  return request(url, options);\n}\n"]}