{"version":3,"file":"search.js","sourceRoot":"","sources":["../../../src/items/search.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAKhB,iEAA0D;AAE1D;;;;;;;;;;;;GAYG;AACH,SAAgB,WAAW,CACzB,MAAoD;IAEpD,OAAO,IAAA,iCAAa,EAAQ,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9C,CAAC;AAJD,kCAIC","sourcesContent":["/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { IItem } from \"../helpers.js\";\nimport { SearchQueryBuilder } from \"../util/SearchQueryBuilder.js\";\nimport { ISearchOptions, ISearchResult } from \"../util/search.js\";\nimport { genericSearch } from \"../util/generic-search.js\";\n\n/**\n * Search a portal for items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/search.htm) for more information.\n *\n * ```js\n * import { searchItems } from \"@esri/arcgis-rest-portal\";\n *\n * searchItems('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param search - A string or RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchItems(\n  search: string | ISearchOptions | SearchQueryBuilder\n): Promise<ISearchResult<IItem>> {\n  return genericSearch<IItem>(search, \"item\");\n}\n"]}