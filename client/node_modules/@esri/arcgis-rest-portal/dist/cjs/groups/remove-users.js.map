{"version":3,"file":"remove-users.js","sourceRoot":"","sources":["../../../src/groups/remove-users.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,mEAImC;AACnC,iEAAyD;AACzD,+CAAyC;AAwBzC;;;;;;;;;;;;;;;;GAgBG;AACH,SAAgB,gBAAgB,CAC9B,cAAwC;IAExC,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,cAAc,CAAC;IACpD,MAAM,GAAG,GAAG,GAAG,IAAA,gCAAY,EACzB,cAAc,CACf,qBAAqB,EAAE,cAAc,CAAC;IACvC,MAAM,QAAQ,GAAG,CAAC,KAAe,EAAE,EAAE;QACnC,MAAM,OAAO,mCACR,cAAc,KACjB,KAAK,EACL,MAAM,EAAE,EAAE,KAAK,EAAE,GAClB,CAAC;QACF,OAAO,IAAA,6BAAO,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC;IACF,4EAA4E;IAC5E,4FAA4F;IAC5F,MAAM,QAAQ,GAAG,IAAA,gBAAK,EAAC,aAAa,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CAC3D,QAAQ,CAAC,UAAU,CAAC,CACrB,CAAC;IACF,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;QAC5C,MAAM,QAAQ,GAAG,CAAC,QAAgB,EAAE,EAAE,CACpC,OAAO;aACJ,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACpC,MAAM,CACL,CAAC,UAAU,EAAE,MAAM,EAAE,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAC3D,EAAE,CACH,CAAC;QACN,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAClC,MAAM,YAAY,GAA4B;YAC5C,UAAU,EAAE,QAAQ,CAAC,YAAY,CAAC;SACnC,CAAC;QACF,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,iCAAM,YAAY,KAAE,MAAM,IAAG,CAAC,CAAC,YAAY,CAAC;IACpE,CAAC,CAAC,CAAC;AACL,CAAC;AAlCD,4CAkCC","sourcesContent":["/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport {\n  request,\n  IRequestOptions,\n  ArcGISRequestError\n} from \"@esri/arcgis-rest-request\";\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nimport { chunk } from \"../util/array.js\";\n\nexport interface IRemoveGroupUsersOptions extends IRequestOptions {\n  /**\n   * Group ID\n   */\n  id: string;\n  /**\n   * An array of usernames to be removed from the group\n   */\n  users?: string[];\n}\n\nexport interface IRemoveGroupUsersResult {\n  /**\n   * An array of usernames that were not removed\n   */\n  notRemoved?: string[];\n  /**\n   * An array of request errors\n   */\n  errors?: ArcGISRequestError[];\n}\n\n/**\n * Add users to a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/remove-users-from-group.htm) for more information.\n *\n * ```js\n * import { removeGroupUsers } from \"@esri/arcgis-rest-portal\";\n *\n * removeGroupUsers({\n *   id: groupId,\n *   users: [\"username1\", \"username2\"],\n *   authentication\n * })\n * .then(response);\n * ```\n *\n * @param requestOptions  - Options for the request\n * @returns A Promise\n */\nexport function removeGroupUsers(\n  requestOptions: IRemoveGroupUsersOptions\n): Promise<IRemoveGroupUsersResult> {\n  const { id, users: usersToRemove } = requestOptions;\n  const url = `${getPortalUrl(\n    requestOptions\n  )}/community/groups/${id}/removeUsers`;\n  const safeSend = (users: string[]) => {\n    const options: IRemoveGroupUsersOptions = {\n      ...requestOptions,\n      users,\n      params: { users }\n    };\n    return request(url, options).catch((error) => ({ errors: [error] }));\n  };\n  // the ArcGIS REST API only allows to add no more than 25 users per request,\n  // see https://developers.arcgis.com/rest/users-groups-and-items/remove-users-from-group.htm\n  const promises = chunk(usersToRemove, 25).map((usersChunk) =>\n    safeSend(usersChunk)\n  );\n  return Promise.all(promises).then((results) => {\n    const filtered = (propName: string) =>\n      results\n        .filter((result) => result[propName])\n        .reduce(\n          (collection, result) => collection.concat(result[propName]),\n          []\n        );\n    const errors = filtered(\"errors\");\n    const consolidated: IRemoveGroupUsersResult = {\n      notRemoved: filtered(\"notRemoved\")\n    };\n    return errors.length ? { ...consolidated, errors } : consolidated;\n  });\n}\n"]}