{"version":3,"file":"get-unique-service-name.js","sourceRoot":"","sources":["../../../src/services/get-unique-service-name.ts"],"names":[],"mappings":"AAAA;gBACgB;AAGhB,OAAO,EAAE,sBAAsB,EAAE,MAAM,gCAAgC,CAAC;AAExE;;;;;;;;;GASG;AACH,MAAM,UAAU,oBAAoB,CAClC,IAAY,EACZ,IAAY,EACZ,OAA8B,EAC9B,IAAY;IAEZ,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,IAAI,IAAI,EAAE;QACR,WAAW,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,CAAC;KACjC;IACD,OAAO,sBAAsB,CAAC,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC1E,IAAI,QAAQ,CAAC,SAAS,EAAE;YACtB,OAAO,WAAW,CAAC;SACpB;aAAM;YACL,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;YAChB,OAAO,oBAAoB,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;SACxD;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { ArcGISIdentityManager } from \"@esri/arcgis-rest-request\";\nimport { isServiceNameAvailable } from \"./is-service-name-available.js\";\n\n/**\n * Given a starting name, return a service name that is unique within\n * the current users organization\n *\n * @export\n * @param {string} name\n * @param {ArcGISIdentityManager} session\n * @param {number} step\n * @return {*}  {Promise<string>}\n */\nexport function getUniqueServiceName(\n  name: string,\n  type: string,\n  session: ArcGISIdentityManager,\n  step: number\n): Promise<string> {\n  let nameToCheck = name;\n  if (step) {\n    nameToCheck = `${name}_${step}`;\n  }\n  return isServiceNameAvailable(nameToCheck, type, session).then((response) => {\n    if (response.available) {\n      return nameToCheck;\n    } else {\n      step = step + 1;\n      return getUniqueServiceName(name, type, session, step);\n    }\n  });\n}\n"]}