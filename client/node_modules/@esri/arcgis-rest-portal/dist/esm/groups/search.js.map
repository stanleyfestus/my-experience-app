{"version":3,"file":"search.js","sourceRoot":"","sources":["../../../src/groups/search.ts"],"names":[],"mappings":"AAAA;gBACgB;AAUhB,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAE1D;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,YAAY,CAC1B,MAAoD;IAEpD,OAAO,aAAa,CAAS,MAAM,EAAE,OAAO,CAAC,CAAC;AAChD,CAAC;AAED;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,kBAAkB,CAChC,OAAmC;IAEnC,OAAO,aAAa,CAAQ,OAAO,EAAE,cAAc,CAAC,CAAC;AACvD,CAAC","sourcesContent":["/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { IGroup } from \"@esri/arcgis-rest-request\";\nimport { IItem } from \"../helpers.js\";\nimport { SearchQueryBuilder } from \"../util/SearchQueryBuilder.js\";\nimport {\n  ISearchOptions,\n  ISearchGroupContentOptions,\n  ISearchResult\n} from \"../util/search.js\";\nimport { genericSearch } from \"../util/generic-search.js\";\n\n/**\n * Search a portal for groups. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-search.htm) for more information.\n *\n * ```js\n * import { searchGroups } from \"@esri/arcgis-rest-portal\";\n *\n * searchGroups('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param search - A string or RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchGroups(\n  search: string | ISearchOptions | SearchQueryBuilder\n): Promise<ISearchResult<IGroup>> {\n  return genericSearch<IGroup>(search, \"group\");\n}\n\n/**\n * Search a portal for items in a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-content-search.htm) for more information.\n *\n * ```js\n * import { searchGroupContent } from \"@esri/arcgis-rest-portal\";\n *\n * searchGroupContent('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param options - RequestOptions object amended with search parameters.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchGroupContent(\n  options: ISearchGroupContentOptions\n): Promise<ISearchResult<IItem>> {\n  return genericSearch<IItem>(options, \"groupContent\");\n}\n"]}