{"version":3,"file":"join.js","sourceRoot":"","sources":["../../../src/groups/join.ts"],"names":[],"mappings":"AAAA;gBACgB;AAEhB,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AAEpD,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AAGzD;;;;;;;;;;;;;;;GAeG;AACH,MAAM,UAAU,SAAS,CACvB,cAAiC;IAEjC,MAAM,GAAG,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,qBACzC,cAAc,CAAC,EACjB,OAAO,CAAC;IAER,OAAO,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACtC,CAAC;AAED;;;;;;;;;;;;;;;GAeG;AACH,MAAM,UAAU,UAAU,CACxB,cAAiC;IAEjC,MAAM,GAAG,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,qBACzC,cAAc,CAAC,EACjB,QAAQ,CAAC;IAET,OAAO,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACtC,CAAC","sourcesContent":["/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request } from \"@esri/arcgis-rest-request\";\n\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nimport { IUserGroupOptions } from \"./helpers.js\";\n\n/**\n * Make a request as the authenticated user to join a Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/join-group.htm) for more information.\n *\n * ```js\n * import { joinGroup } from '@esri/arcgis-rest-portal';\n * //\n * joinGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request and the groupId.\n */\nexport function joinGroup(\n  requestOptions: IUserGroupOptions\n): Promise<{ success: boolean; groupId: string }> {\n  const url = `${getPortalUrl(requestOptions)}/community/groups/${\n    requestOptions.id\n  }/join`;\n\n  return request(url, requestOptions);\n}\n\n/**\n * Make a request as the authenticated user to leave a Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/leave-group.htm) for more information.\n *\n * ```js\n * import { leaveGroup } from '@esri/arcgis-rest-portal';\n *\n * leaveGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request and the groupId.\n */\nexport function leaveGroup(\n  requestOptions: IUserGroupOptions\n): Promise<{ success: boolean; groupId: string }> {\n  const url = `${getPortalUrl(requestOptions)}/community/groups/${\n    requestOptions.id\n  }/leave`;\n\n  return request(url, requestOptions);\n}\n"]}