{"version":3,"file":"protect.js","sourceRoot":"","sources":["../../../src/groups/protect.ts"],"names":[],"mappings":"AAAA;gBACgB;AAEhB,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AAEpD,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AAGzD;;;;;;;;;;;;;;;GAeG;AACH,MAAM,UAAU,YAAY,CAC1B,cAAiC;IAEjC,MAAM,GAAG,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,qBACzC,cAAc,CAAC,EACjB,UAAU,CAAC;IAEX,OAAO,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACtC,CAAC;AAED;;;;;;;;;;;;;;;GAeG;AACH,MAAM,UAAU,cAAc,CAC5B,cAAiC;IAEjC,MAAM,GAAG,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,qBACzC,cAAc,CAAC,EACjB,YAAY,CAAC;IAEb,OAAO,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACtC,CAAC","sourcesContent":["/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request } from \"@esri/arcgis-rest-request\";\n\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nimport { IUserGroupOptions } from \"./helpers.js\";\n\n/**\n * Protect a group to avoid accidental deletion. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/protect-group.htm) for more information.\n *\n * ```js\n * import { protectGroup } from '@esri/arcgis-rest-portal';\n *\n * protectGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function protectGroup(\n  requestOptions: IUserGroupOptions\n): Promise<{ success: boolean }> {\n  const url = `${getPortalUrl(requestOptions)}/community/groups/${\n    requestOptions.id\n  }/protect`;\n\n  return request(url, requestOptions);\n}\n\n/**\n * Unprotect a Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/unprotect-group.htm) for more information.\n *\n * ```js\n * import { unprotectGroup } from '@esri/arcgis-rest-portal';\n *\n * unprotectGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function unprotectGroup(\n  requestOptions: IUserGroupOptions\n): Promise<{ success: boolean }> {\n  const url = `${getPortalUrl(requestOptions)}/community/groups/${\n    requestOptions.id\n  }/unprotect`;\n\n  return request(url, requestOptions);\n}\n"]}