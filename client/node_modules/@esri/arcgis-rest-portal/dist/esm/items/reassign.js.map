{"version":3,"file":"reassign.js","sourceRoot":"","sources":["../../../src/items/reassign.ts"],"names":[],"mappings":"AAAA;gBACgB;AAChB,OAAO,EAAE,OAAO,EAAuB,MAAM,2BAA2B,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAcnD;;;;;;;;;;;;;;;GAeG;AACH,MAAM,UAAU,YAAY,CAC1B,eAAqC;IAErC,OAAO,UAAU,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;QAClD,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,KAAK,CACT,QAAQ,eAAe,CAAC,EAAE,mFAAmF,CAC9G,CAAC;SACH;QACD,kCAAkC;QAClC,MAAM,GAAG,GAAG,GAAG,YAAY,CAAC,eAAe,CAAC,kBAC1C,eAAe,CAAC,YAClB,UAAU,eAAe,CAAC,EAAE,WAAW,CAAC;QAExC,MAAM,IAAI,GAAG;YACX,MAAM,EAAE;gBACN,cAAc,EAAE,eAAe,CAAC,cAAc;gBAC9C,gBAAgB,EAAE,eAAe,CAAC,gBAAgB;aACnD;YACD,cAAc,EAAE,eAAe,CAAC,cAAc;SAC/C,CAAC;QACF,OAAO,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request, IUserRequestOptions } from \"@esri/arcgis-rest-request\";\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nimport { isOrgAdmin } from \"../sharing/helpers.js\";\n\ninterface IReassignItemOptions extends IUserRequestOptions {\n  id: string;\n  currentOwner: string;\n  targetUsername: string;\n  targetFolderName?: string;\n}\n\ninterface IReassignItemResponse {\n  success: boolean;\n  itemId: string;\n}\n\n/**\n * Reassign an item from one user to another. Caller must be an org admin or the request will fail. `currentOwner` and `targetUsername` must be in the same organization or the request will fail\n *\n * ```js\n * import { reassignItem } from '@esri/arcgis-rest-portal';\n *\n * reassignItem({\n *   id: \"abc123\",\n *   currentOwner: \"charles\",\n *   targetUsername: \"leslie\",\n *   authentication\n * })\n * ```\n *\n * @param reassignOptions - Options for the request\n */\nexport function reassignItem(\n  reassignOptions: IReassignItemOptions\n): Promise<IReassignItemResponse> {\n  return isOrgAdmin(reassignOptions).then((isAdmin) => {\n    if (!isAdmin) {\n      throw Error(\n        `Item ${reassignOptions.id} can not be reassigned because current user is not an organization administrator.`\n      );\n    }\n    // we're operating as an org-admin\n    const url = `${getPortalUrl(reassignOptions)}/content/users/${\n      reassignOptions.currentOwner\n    }/items/${reassignOptions.id}/reassign`;\n\n    const opts = {\n      params: {\n        targetUsername: reassignOptions.targetUsername,\n        targetFolderName: reassignOptions.targetFolderName\n      },\n      authentication: reassignOptions.authentication\n    };\n    return request(url, opts);\n  });\n}\n"]}