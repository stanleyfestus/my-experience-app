{"version":3,"file":"protect.js","sourceRoot":"","sources":["../../../src/items/protect.ts"],"names":[],"mappings":"AAAA;gBACgB;AAEhB,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AAEpD,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAoB,cAAc,EAAE,MAAM,cAAc,CAAC;AAEhE;;;;;GAKG;AACH,MAAM,UAAU,WAAW,CACzB,cAAgC;IAEhC,OAAO,cAAc,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACnD,MAAM,GAAG,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,kBAAkB,KAAK,UAChE,cAAc,CAAC,EACjB,UAAU,CAAC;QACX,OAAO,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,aAAa,CAC3B,cAAgC;IAEhC,OAAO,cAAc,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACnD,MAAM,GAAG,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,kBAAkB,KAAK,UAChE,cAAc,CAAC,EACjB,YAAY,CAAC;QACb,OAAO,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request } from \"@esri/arcgis-rest-request\";\n\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nimport { IUserItemOptions, determineOwner } from \"./helpers.js\";\n\n/**\n * Protect an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/protect.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to protect an item.\n */\nexport function protectItem(\n  requestOptions: IUserItemOptions\n): Promise<{ success: boolean }> {\n  return determineOwner(requestOptions).then((owner) => {\n    const url = `${getPortalUrl(requestOptions)}/content/users/${owner}/items/${\n      requestOptions.id\n    }/protect`;\n    return request(url, requestOptions);\n  });\n}\n\n/**\n * Unprotect an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/unprotect.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to unprotect an item.\n */\nexport function unprotectItem(\n  requestOptions: IUserItemOptions\n): Promise<{ success: boolean }> {\n  return determineOwner(requestOptions).then((owner) => {\n    const url = `${getPortalUrl(requestOptions)}/content/users/${owner}/items/${\n      requestOptions.id\n    }/unprotect`;\n    return request(url, requestOptions);\n  });\n}\n"]}