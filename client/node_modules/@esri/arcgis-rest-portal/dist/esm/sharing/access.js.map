{"version":3,"file":"access.js","sourceRoot":"","sources":["../../../src/sharing/access.ts"],"names":[],"mappings":"AAAA;gBACgB;AAEhB,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AAEpD,OAAO,EAGL,WAAW,EACX,aAAa,EACb,UAAU,EACX,MAAM,cAAc,CAAC;AAStB;;;;;;;;;;;;;;;GAeG;AACH,MAAM,UAAU,aAAa,CAC3B,cAAiC;IAEjC,MAAM,GAAG,GAAG,aAAa,CAAC,cAAc,CAAC,CAAC;IAE1C,IAAI,WAAW,CAAC,cAAc,CAAC,EAAE;QAC/B,qCAAqC;QACrC,OAAO,gBAAgB,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;KAC9C;SAAM;QACL,sEAAsE;QACtE,OAAO,UAAU,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/C,IAAI,KAAK,EAAE;gBACT,OAAO,gBAAgB,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;aAC9C;iBAAM;gBACL,iDAAiD;gBACjD,MAAM,KAAK,CACT,kCAAkC,cAAc,CAAC,cAAc,CAAC,QAAQ,8DAA8D,CACvI,CAAC;aACH;QACH,CAAC,CAAC,CAAC;KACJ;AACH,CAAC;AAED,SAAS,gBAAgB,CACvB,GAAW,EACX,cAAiC;IAEjC,cAAc,CAAC,MAAM,mBACnB,GAAG,EAAE,KAAK,EACV,QAAQ,EAAE,KAAK,IACZ,cAAc,CAAC,MAAM,CACzB,CAAC;IAEF,kGAAkG;IAClG,IAAI,cAAc,CAAC,MAAM,KAAK,SAAS,EAAE;QACvC,cAAc,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;KACpC;IACD,IAAI,cAAc,CAAC,MAAM,KAAK,KAAK,EAAE;QACnC,cAAc,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC;KAClC;IACD,wEAAwE;IACxE,IAAI,cAAc,CAAC,MAAM,KAAK,QAAQ,EAAE;QACtC,4DAA4D;QAC5D,2EAA2E;QAC3E,cAAc,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;QACrC,cAAc,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;KACvC;IACD,OAAO,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACtC,CAAC","sourcesContent":["/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request } from \"@esri/arcgis-rest-request\";\n\nimport {\n  ISharingOptions,\n  ISharingResponse,\n  isItemOwner,\n  getSharingUrl,\n  isOrgAdmin\n} from \"./helpers.js\";\n\nexport interface ISetAccessOptions extends ISharingOptions {\n  /**\n   * \"private\" indicates that the item can only be accessed by the user. \"public\" means accessible to anyone. An item shared to the organization has an access level of \"org\".\n   */\n  access: \"private\" | \"org\" | \"public\";\n}\n\n/**\n * Change who is able to access an item.\n *\n * ```js\n * import { setItemAccess } from \"@esri/arcgis-rest-portal\";\n *\n * setItemAccess({\n *   id: \"abc123\",\n *   access: \"public\", // 'org' || 'private'\n *   authentication: session\n * })\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function setItemAccess(\n  requestOptions: ISetAccessOptions\n): Promise<ISharingResponse> {\n  const url = getSharingUrl(requestOptions);\n\n  if (isItemOwner(requestOptions)) {\n    // if the user owns the item, proceed\n    return updateItemAccess(url, requestOptions);\n  } else {\n    // otherwise we need to check to see if they are an organization admin\n    return isOrgAdmin(requestOptions).then((admin) => {\n      if (admin) {\n        return updateItemAccess(url, requestOptions);\n      } else {\n        // if neither, updating the sharing isnt possible\n        throw Error(\n          `This item can not be shared by ${requestOptions.authentication.username}. They are neither the item owner nor an organization admin.`\n        );\n      }\n    });\n  }\n}\n\nfunction updateItemAccess(\n  url: string,\n  requestOptions: ISetAccessOptions\n): Promise<any> {\n  requestOptions.params = {\n    org: false,\n    everyone: false,\n    ...requestOptions.params\n  };\n\n  // if the user wants to make the item private, it needs to be unshared from any/all groups as well\n  if (requestOptions.access === \"private\") {\n    requestOptions.params.groups = \" \";\n  }\n  if (requestOptions.access === \"org\") {\n    requestOptions.params.org = true;\n  }\n  // if sharing with everyone, share with the entire organization as well.\n  if (requestOptions.access === \"public\") {\n    // this is how the ArcGIS Online Home app sets public access\n    // setting org = true instead of account = true will cancel out all sharing\n    requestOptions.params.account = true;\n    requestOptions.params.everyone = true;\n  }\n  return request(url, requestOptions);\n}\n"]}