{"version":3,"file":"get-user.js","sourceRoot":"","sources":["../../../src/users/get-user.ts"],"names":[],"mappings":"AAAA;gBACgB;AAEhB,OAAO,EACL,OAAO,EAIR,MAAM,2BAA2B,CAAC;AAEnC,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AAazD;;;;;;;;;;;;;GAaG;AACH,MAAM,UAAU,OAAO,CACrB,cAAyC;IAEzC,IAAI,GAAG,CAAC;IACR,IAAI,OAAO,GAAG,EAAE,UAAU,EAAE,KAAK,EAAqB,CAAC;IAEvD,gDAAgD;IAChD,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;QACtC,GAAG,GAAG,uDAAuD,cAAc,EAAE,CAAC;KAC/E;SAAM;QACL,kHAAkH;QAClH,MAAM,QAAQ,GACZ,cAAc,CAAC,QAAQ,IAAI,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC;QACpE,GAAG,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,oBAAoB,kBAAkB,CACzE,QAAQ,CACT,EAAE,CAAC;QACJ,OAAO,mCACF,cAAc,GACd,OAAO,CACX,CAAC;KACH;IACD,mBAAmB;IACnB,OAAO,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport {\n  request,\n  IRequestOptions,\n  ArcGISIdentityManager,\n  IUser\n} from \"@esri/arcgis-rest-request\";\n\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\n\nexport interface IGetUserOptions extends IRequestOptions {\n  /**\n   * A session representing a logged in user.\n   */\n  authentication?: ArcGISIdentityManager;\n  /**\n   * Supply a username if you'd like to fetch information about a different user than is being used to authenticate the request.\n   */\n  username?: string;\n}\n\n/**\n * Get information about a user. This method has proven so generically useful that you can also call {@linkcode ArcGISIdentityManager.getUser}.\n *\n * ```js\n * import { getUser } from '@esri/arcgis-rest-portal';\n * //\n * getUser(\"jsmith\")\n *   .then(response)\n * // => { firstName: \"John\", lastName: \"Smith\",tags: [\"GIS Analyst\", \"City of Redlands\"] }\n * ```\n *\n * @param requestOptions - options to pass through in the request\n * @returns A Promise that will resolve with metadata about the user\n */\nexport function getUser(\n  requestOptions?: string | IGetUserOptions\n): Promise<IUser> {\n  let url;\n  let options = { httpMethod: \"GET\" } as IGetUserOptions;\n\n  // if a username is passed, assume ArcGIS Online\n  if (typeof requestOptions === \"string\") {\n    url = `https://www.arcgis.com/sharing/rest/community/users/${requestOptions}`;\n  } else {\n    // if an authenticated session is passed, default to that user/portal unless another username is provided manually\n    const username =\n      requestOptions.username || requestOptions.authentication.username;\n    url = `${getPortalUrl(requestOptions)}/community/users/${encodeURIComponent(\n      username\n    )}`;\n    options = {\n      ...requestOptions,\n      ...options\n    };\n  }\n  // send the request\n  return request(url, options);\n}\n"]}