{"version":3,"file":"search-users.js","sourceRoot":"","sources":["../../../src/users/search-users.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAa1D;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,WAAW,CACzB,MAA+C;IAE/C,OAAO,aAAa,CAAQ,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9C,CAAC;AAED;;;;;;;;;;;GAWG;AACH,MAAM,UAAU,oBAAoB,CAClC,MAA+C;IAE/C,OAAO,aAAa,CAAQ,MAAM,EAAE,eAAe,CAAC,CAAC;AACvD,CAAC","sourcesContent":["/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { IAuthenticationManager, IUser } from \"@esri/arcgis-rest-request\";\nimport { SearchQueryBuilder } from \"../util/SearchQueryBuilder.js\";\nimport { ISearchOptions, ISearchResult } from \"../util/search.js\";\nimport { genericSearch } from \"../util/generic-search.js\";\n\n// export interface IUserSearchOptions extends IAuthenticatedRequestOptions, IPagingParams {\n//   q: string | SearchQueryBuilder;\n//   sortField?: string;\n//   sortOrder?: string;\n//   [key: string]: any;\n// }\n\nexport interface IUserSearchOptions extends ISearchOptions {\n  authentication: IAuthenticationManager;\n}\n\n/**\n * Search a portal for users.\n *\n * ```js\n * import { searchUsers } from \"@esri/arcgis-rest-portal\";\n * //\n * searchUsers({ q: 'tommy', authentication })\n *   .then(response) // response.total => 355\n * ```\n *\n * @param search - A RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchUsers(\n  search: IUserSearchOptions | SearchQueryBuilder\n): Promise<ISearchResult<IUser>> {\n  return genericSearch<IUser>(search, \"user\");\n}\n\n/**\n * ```js\n * import { searchCommunityUsers } from \"@esri/arcgis-rest-portal\";\n * //\n * searchCommunityUsers({ q: 'tommy', authentication })\n *   .then(response) // response.total => 355\n * ```\n * Search all portals for users.\n *\n * @param search - A RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchCommunityUsers(\n  search: IUserSearchOptions | SearchQueryBuilder\n): Promise<ISearchResult<IUser>> {\n  return genericSearch<IUser>(search, \"communityUser\");\n}\n"]}