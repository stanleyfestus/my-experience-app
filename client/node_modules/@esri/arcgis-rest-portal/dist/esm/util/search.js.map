{"version":3,"file":"search.js","sourceRoot":"","sources":["../../../src/util/search.ts"],"names":[],"mappings":"AAAA;gBACgB","sourcesContent":["/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { IRequestOptions, IGroup, IUser } from \"@esri/arcgis-rest-request\";\nimport { IItem, IPagingParams } from \"../helpers.js\";\nimport { SearchQueryBuilder } from \"./SearchQueryBuilder.js\";\n\nexport interface ISearchOptions extends IRequestOptions, IPagingParams {\n  /** The query string to search against. */\n  q: string | SearchQueryBuilder;\n\n  /** Field to sort by. */\n  sortField?: string;\n\n  /** Describes whether order returns in ascending or descending order. The default is ascending. */\n  sortOrder?: \"asc\" | \"desc\";\n\n  /** A comma-separated list of fields to count. The maximum count fields allowed per request is three. Supported count fields are tags, type, access, contentstatus, and categories. */\n  countFields?: string;\n\n  /** The maximum number of field values to count for each `countFields`. The default value is 10, and the maximum number allowed is 200. */\n  countSize?: number;\n\n  /** Structured filtering is accomplished by specifying a field name followed by a colon and the term you are searching for with double quotation marks. It allows the passing in of application-level filters based on the context. Use an exact keyword match of the expected value for the specified field. Partially matching the filter keyword will not return meaningful results. */\n  filter?: string;\n\n  /** A JSON array or comma-separated list of up to eight org content categories to search items. */\n  categories?: string | Array<string>;\n\n  /** A comma-separated list of up to three category terms to search for items that have matching categories. */\n  categoryFilters?: string;\n\n  [key: string]: any;\n}\n\nexport interface ISearchGroupContentOptions extends ISearchOptions {\n  groupId: string;\n}\n\n/**\n * Results from an item or group search.\n */\nexport interface ISearchResult<T extends IItem | IGroup | IUser> {\n  query: string; // matches the api's form param\n  total: number;\n  start: number;\n  num: number;\n  nextStart: number;\n  results: T[];\n  nextPage?: () => Promise<ISearchResult<T>>;\n  /**\n   * Aggregations will only be present on item searches when [`fieldCounts`](https://developers.arcgis.com/rest/users-groups-and-items/search.htm#GUID-1C625F8A-4A12-45BB-B537-74C82315759A) are requested.\n   */\n  aggregations?: {\n    counts: Array<{\n      fieldName: string;\n      fieldValues: Array<{\n        value: any;\n        count: number;\n      }>;\n    }>;\n  };\n}\n"]}