{"version":3,"file":"get-portal-settings.js","sourceRoot":"","sources":["../../../src/util/get-portal-settings.ts"],"names":[],"mappings":"AAAA;gBACgB;AAEhB,OAAO,EAAE,OAAO,EAA4B,MAAM,2BAA2B,CAAC;AAE9E,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAUnD;;;;;;;;;;;;;GAaG;AACH,MAAM,UAAU,iBAAiB,CAC/B,EAAW,EACX,cAAgC;IAEhC,2BAA2B;IAC3B,MAAM,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;IAClC,MAAM,GAAG,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,YAAY,QAAQ,WAAW,CAAC;IAE3E,2BAA2B;IAC3B,MAAM,OAAO,iBACR,EAAE,UAAU,EAAE,KAAK,EAAE,EACrB,cAAc,CAClB,CAAC;IAEF,mBAAmB;IACnB,OAAO,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["/* Copyright (c) 2017-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request, IRequestOptions, IExtent } from \"@esri/arcgis-rest-request\";\n\nimport { getPortalUrl } from \"./get-portal-url.js\";\n\nexport interface IPortalSettings {\n  allowedRedirectUris: string[];\n  defaultExtent: IExtent;\n  helperServices: { [key: string]: any };\n  informationalBanner: { [key: string]: any };\n  [key: string]: any;\n}\n\n/**\n * Fetch the settings for the current portal by id. If no id is passed, portals/self/settings will be called\n *\n * ```js\n * import { getPortalSettings } from \"@esri/arcgis-rest-portal\";\n *\n * getPortalSettings()\n * getPortalSettings(\"fe8\")\n * getPortalSettings(null, { portal: \"https://custom.maps.arcgis.com/sharing/rest/\" })\n * ```\n *\n * @param id\n * @param requestOptions\n */\nexport function getPortalSettings(\n  id?: string,\n  requestOptions?: IRequestOptions\n): Promise<IPortalSettings> {\n  // construct the search url\n  const idOrSelf = id ? id : \"self\";\n  const url = `${getPortalUrl(requestOptions)}/portals/${idOrSelf}/settings`;\n\n  // default to a GET request\n  const options: IRequestOptions = {\n    ...{ httpMethod: \"GET\" },\n    ...requestOptions\n  };\n\n  // send the request\n  return request(url, options);\n}\n"]}