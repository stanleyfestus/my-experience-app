{"version":3,"file":"SearchQueryBuilder.js","sourceRoot":"","sources":["../../../src/util/SearchQueryBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["/* Copyright (c) 2018-2021 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { IParamBuilder, warn } from \"@esri/arcgis-rest-request\";\n\n/**\n * `SearchQueryBuilder` can be used to construct the `q` param for {@linkcode searchItems} or {@linkcode searchGroups}.\n *\n * By chaining methods, it helps build complex search queries.\n *\n * ```js\n * const startDate = new Date(\"2020-01-01\");\n * const endDate = new Date(\"2020-09-01\");\n * const query = new SearchQueryBuilder()\n *  .match(\"Patrick\")\n *  .in(\"owner\")\n *  .and()\n *  .from(startDate)\n *  .to(endDate)\n *  .in(\"created\")\n *  .and()\n *  .startGroup()\n *    .match(\"Web Mapping Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Mobile Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Application\")\n *    .in(\"type\")\n *  .endGroup()\n *  .and()\n *  .match(\"Demo App\");\n *\n * searchItems(query).then((res) => {\n *   console.log(res.results);\n * });\n * ```\n *\n * Will search for items matching\n * ```\n * \"owner: Patrick AND created:[1577836800000 TO 1598918400000] AND (type:\"Web Mapping Application\" OR type:\"Mobile Application\" OR type:Application) AND Demo App\"\n * ```\n */\nexport class SearchQueryBuilder implements IParamBuilder {\n  private termStack: any[] = [];\n  private rangeStack: any[] = [];\n  private q: string;\n  private openGroups = 0;\n  private currentModifer: string;\n\n  /**\n   * @param q An existing query string to start building from.\n   */\n  constructor(q = \"\") {\n    this.q = q;\n  }\n\n  /**\n   * Defines strings to search for.\n   *\n   * ```js\n   * const query = new SearchQueryBuilder()\n   *   .match(\"My Layer\")\n   * ```\n   *\n   * @param terms strings to search for.\n   */\n  public match(this: SearchQueryBuilder, ...terms: string[]) {\n    this.termStack = this.termStack.concat(terms);\n    return this;\n  }\n\n  /**\n   * Defines fields to search in. You can pass `\"*\"` or call this method without arguments to search a default set of fields\n   *\n   * ```js\n   * const query = new SearchQueryBuilder()\n   *   .match(\"My Layer\")\n   *   .in(\"title\")\n   * ```\n   *\n   * @param field The field to search for the previous match in.\n   */\n  public in(this: SearchQueryBuilder, field?: string) {\n    const fn = `\\`in(${field ? `\"${field}\"` : \"\"})\\``;\n\n    if (!this.hasRange && !this.hasTerms) {\n      warn(\n        // apparently-p-rettier-ignore causes some\n        `${fn} was called with no call to \\`match(...)\\` or \\`from(...)\\`/\\`to(...)\\`. Your query was not modified.`\n      );\n      return this;\n    }\n\n    if (field && field !== \"*\") {\n      this.q += `${field}:`;\n    }\n\n    return this.commit();\n  }\n\n  /**\n   * Starts a new search group.\n   *\n   * ```js\n   * const query = new SearchQueryBuilder()\n   *   .startGroup()\n   *     .match(\"Lakes\")\n   *     .in(\"title\")\n   *   .endGroup()\n   *   .or()\n   *   .startGroup()\n   *     .match(\"Rivers\")\n   *     .in(\"title\")\n   *   .endGroup()\n   * ```\n   */\n  public startGroup(this: SearchQueryBuilder) {\n    this.commit();\n    if (this.openGroups > 0) {\n      this.q += \" \";\n    }\n    this.openGroups++;\n    this.q += \"(\";\n    return this;\n  }\n\n  /**\n   * Ends a search group.\n   *\n   * ```js\n   * const query = new SearchQueryBuilder()\n   *   .startGroup()\n   *     .match(\"Lakes\")\n   *     .in(\"title\")\n   *   .endGroup()\n   *   .or()\n   *   .startGroup()\n   *     .match(\"Rivers\")\n   *     .in(\"title\")\n   *   .endGroup()\n   * ```\n   */\n  public endGroup(this: SearchQueryBuilder) {\n    if (this.openGroups <= 0) {\n      warn(\n        `\\`endGroup(...)\\` was called without calling \\`startGroup(...)\\` first. Your query was not modified.`\n      );\n      return this;\n    }\n    this.commit();\n    this.openGroups--;\n    this.q += \")\";\n    return this;\n  }\n\n  /**\n   * Joins two sets of queries with an `AND` clause.\n   *\n   * ```js\n   * const query = new SearchQueryBuilder()\n   *   .match(\"Lakes\")\n   *   .in(\"title\")\n   *   .and()\n   *   .match(\"Rivers\")\n   *   .in(\"title\")\n   * ```\n   */\n  public and(this: SearchQueryBuilder) {\n    return this.addModifier(\"and\");\n  }\n\n  /**\n   * Joins two sets of queries with an `OR` clause.\n   *\n   * ```js\n   * const query = new SearchQueryBuilder()\n   *   .match(\"Lakes\")\n   *   .in(\"title\")\n   *   .or()\n   *   .match(\"Rivers\")\n   *   .in(\"title\")\n   * ```\n   */\n  public or(this: SearchQueryBuilder) {\n    return this.addModifier(\"or\");\n  }\n\n  /**\n   * Joins two sets of queries with a `NOT` clause. Another option for filtering results is the [prohibit operator '-'](https://developers.arcgis.com/rest/users-groups-and-items/search-reference.htm#ESRI_SECTION1_5C6C35DB9E4A4F4492C5B937BDA2BF67).\n   *\n   * ```js\n   * // omit results with \"Rivers\" in their title\n   * const query = new SearchQueryBuilder()\n   *   .not()\n   *   .match(\"Rivers\")\n   *   .in(\"title\")\n   *\n   * // equivalent\n   * const query = new SearchQueryBuilder()\n   *   .match(\"Rivers\")\n   *   .in(\"-title\")\n   * ```\n   */\n  public not(this: SearchQueryBuilder) {\n    return this.addModifier(\"not\");\n  }\n\n  /**\n   * Begins a new range query.\n   *\n   * ```js\n   *\n   * const NEWYEARS = new Date(\"2020-01-01\")\n   * const TODAY = new Date()\n   *\n   * const query = new SearchQueryBuilder()\n   *   .from(NEWYEARS)\n   *   .to(TODAY)\n   *   .in(\"created\")\n   * ```\n   */\n  public from(this: SearchQueryBuilder, term: number | string | Date) {\n    if (this.hasTerms) {\n      warn(\n        // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n        `\\`from(...)\\` is not allowed after \\`match(...)\\` try using \\`.from(...).to(...).in(...)\\`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\"2020-01-01\").  Your query was not modified.`\n      );\n      return this;\n    }\n    this.rangeStack[0] = term;\n    return this;\n  }\n\n  /**\n   * Ends a range query.\n   *\n   * ```js\n   * const query = new SearchQueryBuilder()\n   *   .from(yesterdaysDate)\n   *   .to(todaysDate)\n   *   .in(\"created\")\n   * ```\n   */\n  public to(this: SearchQueryBuilder, term: any) {\n    if (this.hasTerms) {\n      warn(\n        // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n        `\\`to(...)\\` is not allowed after \\`match(...)\\` try using \\`.from(...).to(...).in(...)\\`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\"2020-01-01\"). Your query was not modified.`\n      );\n      return this;\n    }\n    this.rangeStack[1] = term;\n    return this;\n  }\n\n  /**\n   * Boosts the previous term to increase its rank in the results.\n   *\n   * ```js\n   * const query = new SearchQueryBuilder()\n   *   .match(\"Lakes\")\n   *   .in(\"title\")\n   *   .or()\n   *   .match(\"Rivers\")\n   *   .in(\"title\")\n   *   .boost(3)\n   * ```\n   */\n  public boost(this: SearchQueryBuilder, num: number) {\n    this.commit();\n    this.q += `^${num}`;\n    return this;\n  }\n\n  /**\n   * Returns the current query string. Called internally when the request is made.\n   */\n  public toParam() {\n    this.commit();\n    this.cleanup();\n    return this.q;\n  }\n\n  /**\n   * Returns a new instance of `SearchQueryBuilder` based on the current instance.\n   */\n  public clone() {\n    this.commit();\n    this.cleanup();\n    return new SearchQueryBuilder(this.q + \"\");\n  }\n\n  private addModifier(modifier: string) {\n    if (this.currentModifer) {\n      warn(\n        // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n        `You have called \\`${this.currentModifer}()\\` after \\`${modifier}()\\`. Your current query was not modified.`\n      );\n      return this;\n    }\n\n    this.commit();\n\n    if (this.q === \"\" && modifier !== \"not\") {\n      warn(\n        `You have called \\`${modifier}()\\` without calling another method to modify your query first. Try calling \\`match()\\` first.`\n      );\n      return this;\n    }\n\n    this.currentModifer = modifier;\n    this.q += this.q === \"\" ? \"\" : \" \";\n    this.q += `${modifier.toUpperCase()} `;\n    return this;\n  }\n\n  private hasWhiteSpace(s: string) {\n    return /\\s/g.test(s);\n  }\n\n  private formatTerm(term: any) {\n    if (term instanceof Date) {\n      return term.getTime();\n    }\n\n    if (typeof term === \"string\" && this.hasWhiteSpace(term)) {\n      return `\"${term}\"`;\n    }\n\n    return term;\n  }\n\n  private commit() {\n    this.currentModifer = undefined;\n    if (this.hasRange) {\n      this.q += `[${this.formatTerm(this.rangeStack[0])} TO ${this.formatTerm(\n        this.rangeStack[1]\n      )}]`;\n      this.rangeStack = [undefined, undefined];\n    }\n\n    if (this.hasTerms) {\n      this.q += this.termStack\n        .map((term) => {\n          return this.formatTerm(term);\n        })\n        .join(\" \");\n      this.termStack = [];\n    }\n\n    return this;\n  }\n\n  private get hasTerms() {\n    return this.termStack.length > 0;\n  }\n\n  private get hasRange() {\n    return this.rangeStack.length && this.rangeStack[0] && this.rangeStack[1];\n  }\n\n  private cleanup() {\n    // end a group if we have started one\n    if (this.openGroups > 0) {\n      warn(\n        // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n        `Automatically closing ${this.openGroups} group(s). You can use \\`endGroup(...)\\` to remove this warning.`\n      );\n\n      while (this.openGroups > 0) {\n        this.q += \")\";\n        this.openGroups--;\n      }\n    }\n\n    const oldQ = this.q;\n    this.q = oldQ.replace(/( AND ?| NOT ?| OR ?)*$/, \"\");\n\n    if (oldQ !== this.q) {\n      warn(\n        `\\`startGroup(...)\\` was called without calling \\`endGroup(...)\\` first. Your query was not modified.`\n      );\n    }\n\n    // clear empty groups\n    this.q = this.q.replace(/(\\(\\))*/, \"\");\n  }\n}\n"]}