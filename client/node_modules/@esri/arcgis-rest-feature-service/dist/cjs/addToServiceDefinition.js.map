{"version":3,"file":"addToServiceDefinition.js","sourceRoot":"","sources":["../../src/addToServiceDefinition.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,mEAImC;AA0BnC;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAgB,sBAAsB,CACpC,GAAW,EACX,cAA8C;IAE9C,MAAM,QAAQ,GAAG,GAAG,IAAA,8BAAQ,EAAC,GAAG,CAAC,CAAC,OAAO,CACvC,gBAAgB,EAChB,sBAAsB,CACvB,kBAAkB,CAAC;IAEpB,cAAc,CAAC,MAAM,mBACnB,eAAe,EAAE,EAAE,IAChB,cAAc,CAAC,MAAM,CACzB,CAAC;IAEF,IAAI,cAAc,CAAC,MAAM,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QAC7D,cAAc,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;KACtE;IAED,IAAI,cAAc,CAAC,MAAM,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QAC7D,cAAc,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;KACtE;IAED,OAAO,IAAA,6BAAO,EAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;AAC3C,CAAC;AAvBD,wDAuBC","sourcesContent":["/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport {\n  request,\n  cleanUrl,\n  IUserRequestOptions\n} from \"@esri/arcgis-rest-request\";\n\nimport { ILayer, ITable, ILayerDefinition } from \"./helpers.js\";\n\nexport interface IAddToServiceDefinitionOptions extends IUserRequestOptions {\n  /**\n   * Layers to add\n   */\n  layers?: ILayer[] | ILayerDefinition[];\n  /**\n   * Tables to add\n   */\n  tables?: ITable[];\n}\n\nexport interface IAddToServiceDefinitionItemSummary {\n  name: string;\n  id: any;\n}\n\nexport interface IAddToServiceDefinitionResult {\n  layers?: IAddToServiceDefinitionItemSummary[];\n  tables?: IAddToServiceDefinitionItemSummary[];\n  success: boolean;\n}\n\n/**\n * Add layer(s) and/or table(s) to a hosted feature service. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/add-to-definition-feature-service-.htm) for more information.\n *\n *  ```js\n * import { addToServiceDefinition } from '@esri/arcgis-rest-service-admin';\n * //\n * addToServiceDefinition(serviceurl, {\n *   authentication: ArcGISIdentityManager,\n *   layers: [],\n *   tables: []\n * });\n * ```\n *\n * @param url - URL of feature service\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with service layer and/or table details once the definition\n * has been updated\n */\nexport function addToServiceDefinition(\n  url: string,\n  requestOptions: IAddToServiceDefinitionOptions\n): Promise<IAddToServiceDefinitionResult> {\n  const adminUrl = `${cleanUrl(url).replace(\n    `/rest/services`,\n    `/rest/admin/services`\n  )}/addToDefinition`;\n\n  requestOptions.params = {\n    addToDefinition: {},\n    ...requestOptions.params\n  };\n\n  if (requestOptions.layers && requestOptions.layers.length > 0) {\n    requestOptions.params.addToDefinition.layers = requestOptions.layers;\n  }\n\n  if (requestOptions.tables && requestOptions.tables.length > 0) {\n    requestOptions.params.addToDefinition.tables = requestOptions.tables;\n  }\n\n  return request(adminUrl, requestOptions);\n}\n"]}