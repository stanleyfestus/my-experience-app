{"version":3,"file":"getServiceAdminInfo.js","sourceRoot":"","sources":["../../src/getServiceAdminInfo.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,mEAA2E;AAG3E;;;;;;;;;;GAUG;AACH,SAAgB,mBAAmB,CACjC,UAAkB,EAClB,OAA8B;IAE9B,MAAM,eAAe,GAAG,UAAU,CAAC,OAAO,CACxC,gBAAgB,EAChB,sBAAsB,CACvB,CAAC;IAEF,OAAO,IAAA,6BAAO,EAAC,eAAe,EAAE;QAC9B,cAAc,EAAE,OAAO;QACvB,MAAM,EAAE;YACN,CAAC,EAAE,MAAM;SACV;KACF,CAAC,CAAC;AACL,CAAC;AAfD,kDAeC","sourcesContent":["/* Copyright (c) 2018-2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport { request, ArcGISIdentityManager } from \"@esri/arcgis-rest-request\";\nimport { IServiceInfo } from \"./helpers.js\";\n\n/**\n * Given a Feature Service URL, fetch the service admin information.\n *\n * The response from this call includes all the detailed information\n * for each layer/table in the service as well as some admin properties\n *\n * @export\n * @param {string} serviceUrl\n * @param {ArcGISIdentityManager} session\n * @return {*}  {Promise<IServiceInfo>}\n */\nexport function getServiceAdminInfo(\n  serviceUrl: string,\n  session: ArcGISIdentityManager\n): Promise<IServiceInfo> {\n  const serviceAdminUrl = serviceUrl.replace(\n    \"/rest/services\",\n    \"/rest/admin/services\"\n  );\n\n  return request(serviceAdminUrl, {\n    authentication: session,\n    params: {\n      f: \"json\"\n    }\n  });\n}\n"]}