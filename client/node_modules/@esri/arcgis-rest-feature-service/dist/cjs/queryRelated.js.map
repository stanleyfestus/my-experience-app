{"version":3,"file":"queryRelated.js","sourceRoot":"","sources":["../../src/queryRelated.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,mEASmC;AAkCnC;;;;;;;;;;;;;;;;GAgBG;AACH,SAAgB,YAAY,CAC1B,cAAoC;IAEpC,MAAM,OAAO,GAAG,IAAA,wCAAkB,EAChC,cAAc,EACd,CAAC,WAAW,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,WAAW,CAAC,EACpE;QACE,UAAU,EAAE,KAAK;QACjB,MAAM;YACJ,+BAA+B;YAC/B,oBAAoB,EAAE,KAAK,EAC3B,SAAS,EAAE,GAAG,EACd,cAAc,EAAE,CAAC,IACd,cAAc,CAAC,MAAM,CACzB;KACF,CACF,CAAC;IAEF,OAAO,IAAA,6BAAO,EACZ,GAAG,IAAA,8BAAQ,EAAC,cAAc,CAAC,GAAG,CAAC,sBAAsB,EACrD,OAAO,CACR,CAAC;AACJ,CAAC;AAtBD,oCAsBC","sourcesContent":["/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport {\n  request,\n  cleanUrl,\n  appendCustomParams,\n  ISpatialReference,\n  IFeature,\n  IHasZM,\n  GeometryType,\n  IField\n} from \"@esri/arcgis-rest-request\";\n\nimport { IGetLayerOptions } from \"./helpers.js\";\n\n/**\n * Related record query request options. Additional arguments can be passed via the {@linkcode IQueryRelatedOptions.params} property. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/enterprise/query-related-records-feature-service-.htm) for more information and a full list of parameters.\n */\nexport interface IQueryRelatedOptions extends IGetLayerOptions {\n  relationshipId?: number;\n  objectIds?: number[];\n  outFields?: \"*\" | string[];\n  definitionExpression?: string;\n}\n\n/**\n * Related record data structure\n */\n\nexport interface IRelatedRecordGroup {\n  objectId: number;\n  relatedRecords?: IFeature[];\n  count?: number;\n}\n\n/**\n * Related record response structure\n */\n\nexport interface IQueryRelatedResponse extends IHasZM {\n  geometryType?: GeometryType;\n  spatialReference?: ISpatialReference;\n  fields?: IField[];\n  relatedRecordGroups: IRelatedRecordGroup[];\n}\n/**\n * Query the related records for a feature service. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/query-related-records-feature-service-.htm) for more information.\n *\n * ```js\n * import { queryRelated } from '@esri/arcgis-rest-feature-service'\n *\n * queryRelated({\n *  url: \"http://services.myserver/OrgID/ArcGIS/rest/services/Petroleum/KSPetro/FeatureServer/0\",\n *  relationshipId: 1,\n *  params: { returnCountOnly: true }\n * })\n *  .then(response) // response.relatedRecords\n * ```\n *\n * @param requestOptions\n * @returns A Promise that will resolve with the query response\n */\nexport function queryRelated(\n  requestOptions: IQueryRelatedOptions\n): Promise<IQueryRelatedResponse> {\n  const options = appendCustomParams<IQueryRelatedOptions>(\n    requestOptions,\n    [\"objectIds\", \"relationshipId\", \"definitionExpression\", \"outFields\"],\n    {\n      httpMethod: \"GET\",\n      params: {\n        // set default query parameters\n        definitionExpression: \"1=1\",\n        outFields: \"*\",\n        relationshipId: 0,\n        ...requestOptions.params\n      }\n    }\n  );\n\n  return request(\n    `${cleanUrl(requestOptions.url)}/queryRelatedRecords`,\n    options\n  );\n}\n"]}