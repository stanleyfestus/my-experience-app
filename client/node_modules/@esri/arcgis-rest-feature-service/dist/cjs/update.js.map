{"version":3,"file":"update.js","sourceRoot":"","sources":["../../src/update.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,mEAKmC;AAmBnC;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAgB,cAAc,CAC5B,cAAsC;IAEtC,MAAM,GAAG,GAAG,GAAG,IAAA,8BAAQ,EAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC;IAE7D,gCAAgC;IAChC,MAAM,OAAO,GAAG,IAAA,wCAAkB,EAChC,cAAc,EACd;QACE,UAAU;QACV,YAAY;QACZ,kBAAkB;QAClB,mBAAmB;QACnB,iBAAiB;KAClB,EACD,EAAE,MAAM,oBAAO,cAAc,CAAC,MAAM,CAAE,EAAE,CACzC,CAAC;IAEF,OAAO,IAAA,6BAAO,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC/B,CAAC;AAnBD,wCAmBC","sourcesContent":["/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport {\n  request,\n  cleanUrl,\n  appendCustomParams,\n  IFeature\n} from \"@esri/arcgis-rest-request\";\n\nimport { ISharedEditOptions, IEditFeatureResult } from \"./helpers.js\";\n\n/**\n * Update features request options. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/update-features.htm) for more information.\n *\n */\nexport interface IUpdateFeaturesOptions extends ISharedEditOptions {\n  /**\n   * Array of JSON features to update.\n   */\n  features: IFeature[];\n  /**\n   * Optional parameter which is false by default is set by client to indicate to the server that client in true curve capable.\n   */\n  trueCurveClient?: boolean;\n}\n\n/**\n * Update features request. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/update-features.htm) for more information.\n *\n * ```js\n * import { updateFeatures } from '@esri/arcgis-rest-feature-service';\n * //\n * updateFeatures({\n *   url: \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/ServiceRequest/FeatureServer/0\",\n *   features: [{\n *     geometry: { x: -120, y: 45, spatialReference: { wkid: 4326 } },\n *     attributes: { status: \"alive\" }\n *   }]\n * });\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the updateFeatures response.\n */\nexport function updateFeatures(\n  requestOptions: IUpdateFeaturesOptions\n): Promise<{ updateResults: IEditFeatureResult[] }> {\n  const url = `${cleanUrl(requestOptions.url)}/updateFeatures`;\n\n  // edit operations are POST only\n  const options = appendCustomParams<IUpdateFeaturesOptions>(\n    requestOptions,\n    [\n      \"features\",\n      \"gdbVersion\",\n      \"returnEditMoment\",\n      \"rollbackOnFailure\",\n      \"trueCurveClient\"\n    ],\n    { params: { ...requestOptions.params } }\n  );\n\n  return request(url, options);\n}\n"]}