{"version":3,"names":["CSS","list","listItem","page","selected","chevron","disabled","ellipsis","ICONS","next","previous","first","last","paginationCss","CalcitePaginationStyle0","firstAndLastPageCount","ellipsisCount","maxItemBreakpoints","large","medium","small","xsmall","xxsmall","Pagination","this","resizeObserver","createObserver","entries","forEach","resizeHandler","contentRect","width","setMaxItemsToBreakpoint","firstClicked","startItem","emitUpdate","lastClicked","lastStartItem","previousClicked","async","previousPage","nextClicked","nextPage","handlePageClick","event","target","parseInt","value","onMessagesChange","handleTotalPages","pageSize","totalPages","totalItems","effectiveLocaleChange","updateMessages","effectiveLocale","numberStringFormatter","numberFormatOptions","locale","numberingSystem","useGrouping","groupSeparator","handleLastStartItemChange","Math","floor","handleIsXXSmall","isXXSmall","maxItems","connectedCallback","connectLocalized","connectMessages","observe","el","componentWillLoad","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","clientWidth","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnect","setFocus","componentFocusable","focus","min","max","goTo","ceil","breakpoints","showStartEllipsis","showEndEllipsis","calcitePaginationChange","emit","renderEllipsis","type","h","class","key","renderItems","items","push","renderPage","renderFirstPage","renderStartEllipsis","renderEndEllipsis","remainingItems","end","nextStart","i","start","displayedPage","localize","toString","onClick","renderPreviousChevron","messages","flipRtl","icon","scale","getIconScale","renderNextChevron","renderFirstChevron","renderLastChevron","render"],"sources":["src/components/pagination/resources.ts","src/components/pagination/pagination.scss?tag=calcite-pagination&encapsulation=shadow","src/components/pagination/pagination.tsx"],"sourcesContent":["export const CSS = {\n  list: \"list\",\n  listItem: \"list-item\",\n  page: \"page\",\n  selected: \"selected\",\n  chevron: \"chevron\",\n  disabled: \"disabled\",\n  ellipsis: \"ellipsis\",\n};\n\nexport const ICONS = {\n  next: \"chevron-right\",\n  previous: \"chevron-left\",\n  first: \"chevron-start\",\n  last: \"chevron-end\",\n} as const;\n",":host {\n  @apply flex;\n  writing-mode: horizontal-tb;\n}\n\n.list {\n  @apply flex list-none m-0 p-0;\n}\n\n.list-item {\n  @apply flex m-0 p-0;\n}\n\n:host([scale=\"s\"]) {\n  & .chevron,\n  & .page,\n  & .ellipsis {\n    @apply text-n2h h-6 px-1;\n    min-inline-size: theme(\"width.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & .chevron,\n  & .page,\n  & .ellipsis {\n    @apply text-n1h h-8 px-2;\n    min-inline-size: theme(\"width.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & .chevron,\n  & .page,\n  & .ellipsis {\n    @apply text-0h h-11;\n    min-inline-size: theme(\"width.11\");\n  }\n\n  & .chevron {\n    @apply px-2.5;\n  }\n\n  & .page,\n  & .ellipsis {\n    @apply px-3;\n  }\n}\n\n// focus styles\n:host button {\n  @apply focus-base;\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\n.chevron,\n.page,\n.ellipsis {\n  @apply p-0\n    m-0\n    text-0h\n    text-color-3\n    font-inherit\n    box-border\n    flex\n    items-center\n    border-none\n    border-opacity-0\n    justify-center\n    align-baseline\n    bg-transparent;\n}\n\n.chevron,\n.page {\n  @apply cursor-pointer;\n  border-block: 2px solid transparent;\n\n  &:hover {\n    @apply text-color-1 transition-default;\n  }\n}\n\n.page {\n  &:hover {\n    @apply border-b-color-2;\n  }\n  &.selected {\n    @apply text-color-1 border-b-color-brand font-medium;\n  }\n}\n\n.chevron {\n  &:hover {\n    @apply bg-foreground-2;\n    color: theme(\"backgroundColor.brand\");\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &.disabled {\n    @apply pointer-events-none bg-transparent;\n    & > calcite-icon {\n      @apply opacity-disabled;\n    }\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Scale } from \"../interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { breakpoints } from \"../../utils/responsive\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS, ICONS } from \"./resources\";\nimport { PaginationMessages } from \"./assets/pagination/t9n\";\n\nexport interface PaginationDetail {\n  start: number;\n  totalItems: number;\n  startItem: number;\n}\n\nconst firstAndLastPageCount = 2;\nconst ellipsisCount = 2;\n\nconst maxItemBreakpoints = {\n  large: 11,\n  medium: 9,\n  small: 7,\n  xsmall: 5,\n  xxsmall: 1,\n};\n\n@Component({\n  tag: \"calcite-pagination\",\n  styleUrl: \"pagination.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class Pagination\n  implements LocalizedComponent, LocalizedComponent, LoadableComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PaginationMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PaginationMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /** Specifies the number of items per page. */\n  @Prop({ mutable: true, reflect: true }) pageSize = 20;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the starting item number. */\n  @Prop({ mutable: true, reflect: true }) startItem = 1;\n\n  /** Specifies the total number of items. */\n  @Prop({ reflect: true }) totalItems = 0;\n\n  @Watch(\"totalItems\")\n  @Watch(\"pageSize\")\n  handleTotalPages(): void {\n    if (this.pageSize < 1) {\n      this.pageSize = 1;\n    }\n    this.totalPages = this.totalItems / this.pageSize;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePaginationElement;\n\n  @State() defaultMessages: PaginationMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n  }\n\n  @State() maxItems = maxItemBreakpoints.xxsmall;\n\n  @State() totalPages: number;\n\n  @State() lastStartItem: number;\n\n  @Watch(\"totalItems\")\n  @Watch(\"pageSize\")\n  @Watch(\"totalPages\")\n  handleLastStartItemChange(): void {\n    const { totalItems, pageSize, totalPages } = this;\n\n    this.lastStartItem =\n      (totalItems % pageSize === 0 ? totalItems - pageSize : Math.floor(totalPages) * pageSize) + 1;\n  }\n\n  @State() isXXSmall: boolean;\n\n  @Watch(\"maxItems\")\n  handleIsXXSmall(): void {\n    this.isXXSmall = this.maxItems === maxItemBreakpoints.xxsmall;\n  }\n\n  private resizeObserver = createObserver(\"resize\", (entries) =>\n    entries.forEach(this.resizeHandler),\n  );\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emits when the selected page changes.\n   */\n  @Event({ cancelable: false }) calcitePaginationChange: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    this.handleTotalPages();\n    this.handleLastStartItemChange();\n    this.handleIsXXSmall();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.setMaxItemsToBreakpoint(this.el.clientWidth);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  /** Go to the next page of results. */\n  @Method()\n  async nextPage(): Promise<void> {\n    this.startItem = Math.min(this.lastStartItem, this.startItem + this.pageSize);\n  }\n\n  /** Go to the previous page of results. */\n  @Method()\n  async previousPage(): Promise<void> {\n    this.startItem = Math.max(1, this.startItem - this.pageSize);\n  }\n\n  /**\n   * Set a specified page as active.\n   *\n   * @param page\n   */\n  @Method()\n  async goTo(page: number | \"start\" | \"end\"): Promise<void> {\n    switch (page) {\n      case \"start\":\n        this.startItem = 1;\n        break;\n      case \"end\":\n        this.startItem = this.lastStartItem;\n        break;\n      default: {\n        if (page >= Math.ceil(this.totalPages)) {\n          this.startItem = this.lastStartItem;\n        } else if (page <= 0) {\n          this.startItem = 1;\n        } else {\n          this.startItem = (page - 1) * this.pageSize + 1;\n        }\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setMaxItemsToBreakpoint(width: number): void {\n    if (!breakpoints || !width) {\n      return;\n    }\n\n    if (width >= breakpoints.width.medium) {\n      this.maxItems = maxItemBreakpoints.large;\n      return;\n    }\n\n    if (width >= breakpoints.width.small) {\n      this.maxItems = maxItemBreakpoints.medium;\n      return;\n    }\n\n    if (width >= breakpoints.width.xsmall) {\n      this.maxItems = maxItemBreakpoints.small;\n      return;\n    }\n\n    if (width >= breakpoints.width.xxsmall) {\n      this.maxItems = maxItemBreakpoints.xsmall;\n      return;\n    }\n\n    this.maxItems = maxItemBreakpoints.xxsmall;\n  }\n\n  private resizeHandler = ({ contentRect: { width } }: ResizeObserverEntry): void =>\n    this.setMaxItemsToBreakpoint(width);\n\n  private firstClicked = (): void => {\n    this.startItem = 1;\n    this.emitUpdate();\n  };\n\n  private lastClicked = (): void => {\n    this.startItem = this.lastStartItem;\n    this.emitUpdate();\n  };\n\n  private previousClicked = async (): Promise<void> => {\n    await this.previousPage();\n    this.emitUpdate();\n  };\n\n  private nextClicked = async (): Promise<void> => {\n    await this.nextPage();\n    this.emitUpdate();\n  };\n\n  private showStartEllipsis() {\n    return (\n      this.totalPages > this.maxItems &&\n      Math.floor(this.startItem / this.pageSize) >\n        this.maxItems - firstAndLastPageCount - ellipsisCount\n    );\n  }\n\n  private showEndEllipsis() {\n    return (\n      this.totalPages > this.maxItems &&\n      (this.totalItems - this.startItem) / this.pageSize >\n        this.maxItems - firstAndLastPageCount - (ellipsisCount - 1)\n    );\n  }\n\n  private emitUpdate() {\n    this.calcitePaginationChange.emit();\n  }\n\n  private handlePageClick = (event: Event) => {\n    const target = event.target as HTMLButtonElement;\n    this.startItem = parseInt(target.value, 10);\n    this.emitUpdate();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderEllipsis(type: \"start\" | \"end\"): VNode {\n    return (\n      <span class={CSS.ellipsis} data-test-ellipsis={type} key={type}>\n        &hellip;\n      </span>\n    );\n  }\n\n  renderItems(): VNode[] {\n    const { totalItems, pageSize, startItem, maxItems, totalPages, lastStartItem, isXXSmall } =\n      this;\n\n    const items: VNode[] = [];\n\n    if (isXXSmall) {\n      items.push(this.renderPage(startItem));\n      return items;\n    }\n\n    const renderFirstPage = totalItems > pageSize;\n    const renderStartEllipsis = this.showStartEllipsis();\n    const renderEndEllipsis = this.showEndEllipsis();\n\n    if (renderFirstPage) {\n      items.push(this.renderPage(1));\n    }\n\n    if (renderStartEllipsis) {\n      items.push(this.renderEllipsis(\"start\"));\n    }\n\n    const remainingItems =\n      maxItems -\n      firstAndLastPageCount -\n      (renderEndEllipsis ? 1 : 0) -\n      (renderStartEllipsis ? 1 : 0);\n\n    let end: number;\n    let nextStart: number;\n\n    // if we don't need ellipses render the whole set\n    if (totalPages - 1 <= remainingItems) {\n      nextStart = 1 + pageSize;\n      end = lastStartItem - pageSize;\n    } else {\n      // if we're within max pages of page 1\n      if (startItem / pageSize < remainingItems) {\n        nextStart = 1 + pageSize;\n        end = 1 + remainingItems * pageSize;\n      } else {\n        // if we're within max pages of last page\n        if (startItem + remainingItems * pageSize >= totalItems) {\n          nextStart = lastStartItem - remainingItems * pageSize;\n          end = lastStartItem - pageSize;\n        } else {\n          // if we're within the center pages\n          nextStart = startItem - pageSize * ((remainingItems - 1) / 2);\n          end = startItem + pageSize * ((remainingItems - 1) / 2);\n        }\n      }\n    }\n\n    for (let i = 0; i < remainingItems && nextStart <= end; i++) {\n      items.push(this.renderPage(nextStart));\n      nextStart = nextStart + pageSize;\n    }\n\n    if (renderEndEllipsis) {\n      items.push(this.renderEllipsis(\"end\"));\n    }\n\n    items.push(this.renderPage(lastStartItem));\n\n    return items;\n  }\n\n  renderPage(start: number): VNode {\n    const { pageSize } = this;\n    const page = Math.floor(start / pageSize) + (pageSize === 1 ? 0 : 1);\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    const displayedPage = numberStringFormatter.localize(page.toString());\n    const selected = start === this.startItem;\n\n    return (\n      <li class={CSS.listItem}>\n        <button\n          aria-current={selected ? \"page\" : \"false\"}\n          class={{\n            [CSS.page]: true,\n            [CSS.selected]: selected,\n          }}\n          onClick={this.handlePageClick}\n          value={start}\n        >\n          {displayedPage}\n        </button>\n      </li>\n    );\n  }\n\n  renderPreviousChevron(): VNode {\n    const { pageSize, startItem, messages } = this;\n\n    const disabled = pageSize === 1 ? startItem <= pageSize : startItem < pageSize;\n\n    return (\n      <button\n        aria-label={messages.previous}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        data-test-chevron=\"previous\"\n        disabled={disabled}\n        key=\"previous\"\n        onClick={this.previousClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.previous} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderNextChevron(): VNode {\n    const { totalItems, pageSize, startItem, messages } = this;\n\n    const disabled =\n      pageSize === 1 ? startItem + pageSize > totalItems : startItem + pageSize > totalItems;\n\n    return (\n      <button\n        aria-label={messages.next}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        data-test-chevron=\"next\"\n        disabled={disabled}\n        key=\"next-button\"\n        onClick={this.nextClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.next} scale={getIconScale(this.scale)} />\n      </button>\n    );\n  }\n\n  renderFirstChevron(): VNode {\n    const { messages, startItem, isXXSmall } = this;\n\n    const disabled = startItem === 1;\n\n    return isXXSmall ? (\n      <button\n        aria-label={messages.first}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        disabled={disabled}\n        key=\"first-button\"\n        onClick={this.firstClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.first} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  renderLastChevron(): VNode {\n    const { messages, startItem, isXXSmall, lastStartItem } = this;\n\n    const disabled = startItem === lastStartItem;\n\n    return isXXSmall ? (\n      <button\n        aria-label={messages.last}\n        class={{\n          [CSS.chevron]: true,\n          [CSS.disabled]: disabled,\n        }}\n        disabled={disabled}\n        key=\"last-button\"\n        onClick={this.lastClicked}\n      >\n        <calcite-icon flipRtl icon={ICONS.last} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  render(): VNode {\n    return (\n      <ul class={CSS.list}>\n        <li class={CSS.listItem}>{this.renderFirstChevron()}</li>\n        <li class={CSS.listItem}>{this.renderPreviousChevron()}</li>\n        {this.renderItems()}\n        <li class={CSS.listItem}>{this.renderNextChevron()}</li>\n        <li class={CSS.listItem}>{this.renderLastChevron()}</li>\n      </ul>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}