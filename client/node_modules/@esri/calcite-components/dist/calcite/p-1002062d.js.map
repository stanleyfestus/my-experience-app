{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","value","configurable","writable","_extends","assign","hasOwnProperty","call","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","version","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","visible","getChild","childNum","options","includeDragEl","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","indexOfObject","arr","Number","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","extend","dst","src","isRectEqual","rect1","rect2","Math","round","_throttleTimeout","throttle","callback","ms","args","_this","setTimeout","cancelThrottle","clearTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","getChildContainingRectFromElement","ghostEl","rect","Array","from","child","_rect$left","_rect$top","_rect$right","_rect$bottom","animated","childRect","min","Infinity","max","expando","Date","getTime","AnimationStateManager","animationStates","animationCallbackId","captureAnimationState","animation","slice","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","animateAll","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","calculateRealTime","animate","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","forRepaintDummy","repaint","easing","offsetWidth","sqrt","pow","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","p","pluginName","concat","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","dispatchEvent","_ref","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","onName","charAt","substr","CustomEvent","bubbles","cancelable","createEvent","initEvent","to","item","pullMode","lastPutMode","undefined","allEventProperties","_excluded","data","bind","dragEl","parentEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","activeGroup","awaitingDragStarted","ignoreNextClick","sortables","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","pastFirstInvertThresh","isCircumstantialInvert","targetMoveDistance","ghostRelativeParent","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_dragElInRowColumn","dragRect","targetRect","vertical","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_detectNearestEmptySortable","ret","some","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","contains","_getDirection","type","touch","pointerType","originalTarget","shadowRoot","path","composedPath","_saveInputCheckedState","button","isContentEditable","criteria","trim","_prepareDragStart","ownerDocument","dragStartFn","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDraggable","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","_nextTick","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","inserted","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","removeAttribute","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","isOwner","canSort","fromSortable","completedFired","dragOverEvent","extra","axis","completed","onMove","after","_onMove","changed","insertion","_showClone","_ignoreWhileAnimating","elLastChild","_ghostIsLast","_ghostIsFirst","firstChild","targetBeforeFirstSwap","differentLevel","differentRowCol","side1","scrolledPastTop","scrollBefore","_getSwapDirection","sibling","dragIndex","nextElementSibling","moveVector","_unsilent","_offMoveEvents","_offUpEvents","clearInterval","_cancelNextTick","removeChild","save","checked","handleEvent","_globalDragOver","toArray","order","getAttribute","_generateId","useAnimation","items","id","set","closest$1","destroy","querySelectorAll","dropEffect","willInsertAfter","onMoveFn","retVal","draggedRect","related","relatedRect","firstElRect","childContainingRect","spacer","lastElRect","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","str","href","sum","charCodeAt","root","inputs","idx","utils","is","nextTick","cancelNextTick","detectDirection","element","_len","_key","create","autoScrolls","scrollEl","scrollRootEl","scrolling","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","AutoScrollPlugin","AutoScroll","scroll","forceAutoScrollFallback","scrollSensitivity","scrollSpeed","bubbleScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","_ref2","dragOverBubble","drop","clearPointerElemChangedInterval","clearAutoScrolls","nulling","autoScroll","ogElemScroller","newElem","pid","isFallback","sens","speed","scrollThisInstance","scrollCustomFn","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","toSortable","changedTouches","onSpill","Revert","startIndex","dragStart","_ref3","Remove","_ref4","parentSortable","sortableComponentSet","Set","CSS","connectSortableComponent","component","dragActive","disconnectSortableComponent","add","handleSelector","dragSelector","canPull","canPut","onStart","dragState","onGlobalDragStart","onDragStart","onEnd","onGlobalDragEnd","onDragEnd","onSort","onDragSort","delete","dragEnabled"],"sources":["node_modules/sortablejs/modular/sortable.esm.js","src/utils/sortableComponent.ts"],"sourcesContent":["/**!\n * Sortable 1.15.3\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.15.3\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\nfunction matches( /**HTMLElement*/el, /**String*/selector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n  return false;\n}\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\nfunction closest( /**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n  return null;\n}\nvar R_SPACE = /\\s+/g;\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\nfunction css(el, prop, val) {\n  var style = el && el.style;\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n  return matrixFn && new matrixFn(appliedTransforms);\n}\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n    return list;\n  }\n  return [];\n}\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode;\n\n    // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect();\n\n          // Set relative to edges of padding box of container\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n      } while (container = container.parentNode);\n    }\n  }\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n    elSideVal = getRect(el)[elSide];\n\n  /* jshint boss:true */\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n      visible = void 0;\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n  return false;\n}\n\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n    i = 0,\n    children = el.children;\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n    i++;\n  }\n  return null;\n}\n\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n  return last || null;\n}\n\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\nfunction index(el, selector) {\n  var index = 0;\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n\n  /* jshint boss:true */\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n  return index;\n}\n\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n  return [offsetLeft, offsetTop];\n}\n\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while (elem = elem.parentNode);\n  return getWindowScrollingElement();\n}\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n  return dst;\n}\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\nvar _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n        _this = this;\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\nfunction getChildContainingRectFromElement(container, options, ghostEl) {\n  var rect = {};\n  Array.from(container.children).forEach(function (child) {\n    var _rect$left, _rect$top, _rect$right, _rect$bottom;\n    if (!closest(child, options.draggable, container, false) || child.animated || child === ghostEl) return;\n    var childRect = getRect(child);\n    rect.left = Math.min((_rect$left = rect.left) !== null && _rect$left !== void 0 ? _rect$left : Infinity, childRect.left);\n    rect.top = Math.min((_rect$top = rect.top) !== null && _rect$top !== void 0 ? _rect$top : Infinity, childRect.top);\n    rect.right = Math.max((_rect$right = rect.right) !== null && _rect$right !== void 0 ? _rect$right : -Infinity, childRect.right);\n    rect.bottom = Math.max((_rect$bottom = rect.bottom) !== null && _rect$bottom !== void 0 ? _rect$bottom : -Infinity, childRect.bottom);\n  });\n  rect.width = rect.right - rect.left;\n  rect.height = rect.bottom - rect.top;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n    animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect);\n\n        // If animating: compensate for current animation\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n      var animating = false,\n        animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n          target = state.target,\n          fromRect = target.fromRect,\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n        target.toRect = toRect;\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) &&\n          // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        }\n\n        // if fromRect != toRect: animate\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n          if (!time) {\n            time = _this.options.animation;\n          }\n          _this.animate(target, animatingRect, toRect, time);\n        }\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\nfunction repaint(target) {\n  return target.offsetWidth;\n}\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n    this.eventCanceled = false;\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return;\n      // Fire global events if it exists in this sortable\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n\n      // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized;\n\n      // Add default options from plugin\n      _extends(defaults, initialized.defaults);\n    });\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return;\n\n      // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n    rootEl = _ref.rootEl,\n    name = _ref.name,\n    targetEl = _ref.targetEl,\n    cloneEl = _ref.cloneEl,\n    toEl = _ref.toEl,\n    fromEl = _ref.fromEl,\n    oldIndex = _ref.oldIndex,\n    newIndex = _ref.newIndex,\n    oldDraggableIndex = _ref.oldDraggableIndex,\n    newDraggableIndex = _ref.newDraggableIndex,\n    originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n    options = sortable.options,\n    onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    originalEvent = _ref.evt,\n    data = _objectWithoutProperties(_ref, _excluded);\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\nvar dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [],\n  // (left, top)\n\n  _silent = false,\n  savedInputChecked = [];\n\n/** @const */\nvar documentExists = typeof document !== 'undefined',\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n  supportCssPointerEvents = function () {\n    if (!documentExists) return;\n    // false when <= IE11\n    if (IE11OrLess) {\n      return false;\n    }\n    var el = document.createElement('x');\n    el.style.cssText = 'pointer-events:auto';\n    return el.style.pointerEvents === 'auto';\n  }(),\n  _detectDirection = function _detectDirection(el, options) {\n    var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n    if (elCSS.display === 'flex') {\n      return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n    }\n    if (elCSS.display === 'grid') {\n      return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n    }\n    if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n      var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n      return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n    }\n    return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n  },\n  _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n    var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n    return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n  },\n  /**\r\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n   * @param  {Number} x      X position\r\n   * @param  {Number} y      Y position\r\n   * @return {HTMLElement}   Element of the first found nearest Sortable\r\n   */\n  _detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n    var ret;\n    sortables.some(function (sortable) {\n      var threshold = sortable[expando].options.emptyInsertThreshold;\n      if (!threshold || lastChild(sortable)) return;\n      var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n      if (insideHorizontally && insideVertically) {\n        return ret = sortable;\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function _prepareGroup(options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === 'clone') {\n          return value;\n        } else if (typeof value === 'function') {\n          return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n        } else {\n          var otherGroup = (pull ? to : from).options.group.name;\n          return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n        }\n      };\n    }\n    var group = {};\n    var originalGroup = options.group;\n    if (!originalGroup || _typeof(originalGroup) != 'object') {\n      originalGroup = {\n        name: originalGroup\n      };\n    }\n    group.name = originalGroup.name;\n    group.checkPull = toFn(originalGroup.pull, true);\n    group.checkPut = toFn(originalGroup.put);\n    group.revertClone = originalGroup.revertClone;\n    options.group = group;\n  },\n  _hideGhostForTarget = function _hideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', 'none');\n    }\n  },\n  _unhideGhostForTarget = function _unhideGhostForTarget() {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, 'display', '');\n    }\n  };\n\n// #1184 fix - Prevent click event on fallback if dragged but item not changed position\nif (documentExists && !ChromeForAndroid) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n\n/**\r\n * @class  Sortable\r\n * @param  {HTMLElement}  el\r\n * @param  {Object}       [options]\r\n */\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n  this.el = el; // root element\n  this.options = options = _extends({}, options);\n\n  // Export instance\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults);\n\n  // Set default options\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n  _prepareGroup(options);\n\n  // Bind all private methods\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  }\n\n  // Setup drag mode\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  }\n\n  // Bind events\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n  sortables.push(this.el);\n\n  // Restore sorting\n  options.store && options.store.get && this.sort(options.store.get(this) || []);\n\n  // Add animation state manager\n  _extends(this, AnimationStateManager());\n}\nSortable.prototype = /** @lends Sortable.prototype */{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart( /** Event|TouchEvent */evt) {\n    if (!evt.cancelable) return;\n    var _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n      target = (touch || evt).target,\n      originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n      filter = options.filter;\n    _saveInputCheckedState(el);\n\n    // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n    if (dragEl) {\n      return;\n    }\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    }\n\n    // cancel dnd if original target is content editable\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    // Safari ignores further event handling after mousedown\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n    target = closest(target, options.draggable, el, false);\n    if (target && target.animated) {\n      return;\n    }\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    }\n\n    // Get the index of the dragged element within its parent\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable);\n\n    // Check filter\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    }\n\n    // Prepare `dragstart`\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart( /** Event */evt, /** Touch */touch, /** HTMLElement */target) {\n    var _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        }\n        // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n        _this._disableDelayedDragEvents();\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        }\n\n        // Bind the events: dragstart/dragend\n        _this._triggerDragStart(evt, touch);\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        });\n\n        // Chosen item\n        toggleClass(dragEl, options.chosenClass, true);\n      };\n\n      // Disable \"draggable\"\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop);\n\n      // Make dragEl draggable (must be before delay for FireFox)\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n      pluginEvent('delayStart', this, {\n        evt: evt\n      });\n\n      // Delay is impossible for native DnD in Edge or IE\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler( /** TouchEvent|PointerEvent **/e) {\n    var touch = e.touches ? e.touches[0] : e;\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart( /** Event */evt, /** Touch */touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n      var options = this.options;\n\n      // Apply effect\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost();\n\n      // Drag start event\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n      _hideGhostForTarget();\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n          target = parent; // store last element\n        }\n        /* jshint boss:true */ while (parent = getParentOrHost(parent));\n      }\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove( /**TouchEvent*/evt) {\n    if (tapEvt) {\n      var options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n        dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n        dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1);\n\n      // only set the status to dragging, when we are actually dragging\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options;\n\n      // Position absolutely\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl);\n\n      // Set transform-origin\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart( /**Event*/evt, /**boolean*/fallback) {\n    var _this = this;\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n    pluginEvent('setupClone', this);\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.removeAttribute(\"id\");\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n      this._hideClone();\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    }\n\n    // #1143: IFrame support workaround\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true);\n\n    // Set proper drop events\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n      on(document, 'drop', _this);\n\n      // #1276 fix:\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver( /**Event*/evt) {\n    var el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n    if (_silent) return;\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    }\n\n    // Capture animation state\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    }\n\n    // Return invocation when dragEl is inserted (or completed)\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        }\n\n        // Animation\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      }\n\n      // Null lastTarget if it is not inside a previously swapped element\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      }\n\n      // no bubbling and not fallback\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n        // Do not detect for empty insert if already inserted\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    }\n\n    // Call when dragEl has been inserted\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n    ignoreNextClick = false;\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n      if (revert) {\n        parentEl = rootEl; // actualization\n        capture();\n        this._hideClone();\n        dragOverEvent('revert');\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n        return completed(true);\n      }\n      var elLastChild = lastChild(el, options.draggable);\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        }\n\n        // if there is a last element, it is the target\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n        if (target) {\n          targetRect = getRect(target);\n        }\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          if (elLastChild && elLastChild.nextSibling) {\n            // the last draggable element is not the last node\n            el.insertBefore(dragEl, elLastChild.nextSibling);\n          } else {\n            el.appendChild(dragEl);\n          }\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n        target = firstChild;\n        targetRect = getRect(target);\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n          side1 = vertical ? 'top' : 'left',\n          scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        }\n        // If dragEl is already beside target: Do not insert\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n          after = false;\n        after = direction === 1;\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          }\n\n          // Undo chrome's scroll adjustment (has no effect on other browsers)\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n          parentEl = dragEl.parentNode; // actualization\n\n          // must be done before animation\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n          changed();\n          return completed(true);\n        }\n      }\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop( /**Event*/evt) {\n    var el = this.el,\n      options = this.options;\n\n    // Get the index of the dragged element within its parent\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode;\n\n    // Get again after plugin event\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId);\n\n    // Unbind events\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n    css(dragEl, 'transform', '');\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n        _disableDraggable(dragEl);\n        dragEl.style['will-change'] = '';\n\n        // Remove classes\n        // ghostClass is added in dragStarted\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n        toggleClass(dragEl, this.options.chosenClass, false);\n\n        // Drag stop event\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            // Remove event\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n\n            // drag from one list and drop into another\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          });\n\n          // Save sorting\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent( /**Event*/evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n        break;\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n  /**\r\n   * Serializes the item into an array of string.\r\n   * @returns {String[]}\r\n   */\n  toArray: function toArray() {\n    var order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n    return order;\n  },\n  /**\r\n   * Sorts the elements according to the array.\r\n   * @param  {String[]}  order  order of the items\r\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n      rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n  /**\r\n   * Save the current sorting\r\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n  /**\r\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n   * @param   {HTMLElement}  el\r\n   * @param   {String}       [selector]  default: `options.draggable`\r\n   * @returns {HTMLElement|null}\r\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n  /**\r\n   * Set/get option\r\n   * @param   {string} name\r\n   * @param   {*}      [value]\r\n   * @returns {*}\r\n   */\n  option: function option(name, value) {\n    var options = this.options;\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n  /**\r\n   * Destroy\r\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    }\n    // Remove draggable attributes\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n    this._onDrop();\n    this._disableDelayedDragEvents();\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n      return;\n    }\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return;\n\n      // show clone at dragEl or original position\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\nfunction _globalDragOver( /**Event*/evt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n  evt.cancelable && evt.preventDefault();\n}\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal;\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n  return retVal;\n}\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\nfunction _unsilent() {\n  _silent = false;\n}\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var firstElRect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var childContainingRect = getChildContainingRectFromElement(sortable.el, sortable.options, ghostEl);\n  var spacer = 10;\n  return vertical ? evt.clientX < childContainingRect.left - spacer || evt.clientY < firstElRect.top && evt.clientX < firstElRect.right : evt.clientY < childContainingRect.top - spacer || evt.clientY < firstElRect.bottom && evt.clientX < firstElRect.left;\n}\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var lastElRect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var childContainingRect = getChildContainingRectFromElement(sortable.el, sortable.options, ghostEl);\n  var spacer = 10;\n  return vertical ? evt.clientX > childContainingRect.right + spacer || evt.clientY > lastElRect.bottom && evt.clientX > lastElRect.left : evt.clientY > childContainingRect.bottom + spacer || evt.clientX > lastElRect.right && evt.clientY > lastElRect.top;\n}\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n  invert = invert || invertSwap;\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n  return 0;\n}\n\n/**\r\n * Gets the direction dragEl must be swapped relative to target in order to make it\r\n * seem that dragEl has been \"inserted\" into that element's position\r\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n * @return {Number}                   Direction dragEl must be swapped\r\n */\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\r\n * Generate id\r\n * @param   {HTMLElement} el\r\n * @returns {String}\r\n * @private\r\n */\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n  return sum.toString(36);\n}\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n}\n\n// Fixed #973:\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n}\n\n// Export utils\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild,\n  expando: expando\n};\n\n/**\r\n * Get the Sortable instance of an element\r\n * @param  {HTMLElement} element The element\r\n * @return {Sortable|undefined}         The instance of Sortable\r\n */\nSortable.get = function (element) {\n  return element[expando];\n};\n\n/**\r\n * Mount a plugin to Sortable\r\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n */\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n\n/**\r\n * Create sortable instance\r\n * @param {HTMLElement}  el\r\n * @param {Object}      [options]\r\n */\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n};\n\n// Export\nSortable.version = version;\n\nvar autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt$1,\n  pointerElemChangedInterval;\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    };\n\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt;\n\n      // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback);\n\n        // Listener for pointer element change\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval();\n          // Detect for pointer elem change, emulating native DnD behaviour\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n    scrollCustomFn;\n\n  // New scroll root, set scrollEl\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n  var layersOut = 0;\n  var currentParent = scrollEl;\n  do {\n    var el = currentParent,\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX = void 0,\n      canScrollY = void 0,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n          }\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n    putSortable = _ref.putSortable,\n    dragEl = _ref.dragEl,\n    activeSortable = _ref.activeSortable,\n    dispatchSortableEvent = _ref.dispatchSortableEvent,\n    hideGhostForTarget = _ref.hideGhostForTarget,\n    unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\nfunction Revert() {}\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n      putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\nfunction Remove() {}\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n      putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n        target = _ref2.target,\n        onMove = _ref2.onMove,\n        activeSortable = _ref2.activeSortable,\n        changed = _ref2.changed,\n        cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n        putSortable = _ref3.putSortable,\n        dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect,\n  // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false,\n  // Initial multi-drag fold when drag started\n  folding = false,\n  // Folding any other time\n  dragStarted = false,\n  dragEl$1,\n  clonesFromRect,\n  clonesHidden;\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n    if (!sortable.options.avoidImplicitDeselect) {\n      if (sortable.options.supportPointer) {\n        on(document, 'pointerup', this._deselectMultiDrag);\n      } else {\n        on(document, 'mouseup', this._deselectMultiDrag);\n        on(document, 'touchend', this._deselectMultiDrag);\n      }\n    }\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      avoidImplicitDeselect: false,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n        cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n      sortable._hideClone();\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n        rootEl = _ref3.rootEl,\n        dispatchSortableEvent = _ref3.dispatchSortableEvent,\n        cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n        rootEl = _ref4.rootEl,\n        cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n      var sortable = _ref5.sortable,\n        cloneNowHidden = _ref5.cloneNowHidden,\n        cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      });\n\n      // Sort multi-drag elements\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n\n        sortable.captureAnimationState();\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        }\n\n        // Remove all auxiliary multidrag items from el, if sorting enabled\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n        completed = _ref8.completed,\n        cancel = _ref8.cancel;\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n        rootEl = _ref9.rootEl,\n        sortable = _ref9.sortable,\n        dragRect = _ref9.dragRect;\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n        isOwner = _ref10.isOwner,\n        insertion = _ref10.insertion,\n        activeSortable = _ref10.activeSortable,\n        parentEl = _ref10.parentEl,\n        putSortable = _ref10.putSortable;\n      var options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n        initialFolding = false;\n        // If leaving sort:false root, or already folding - Fold to new location\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute);\n\n            // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        }\n\n        // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable);\n\n            // Unfold animation for clones if showing from hidden\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n        isOwner = _ref11.isOwner,\n        activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n        rootEl = _ref12.rootEl,\n        parentEl = _ref12.parentEl,\n        sortable = _ref12.sortable,\n        dispatchSortableEvent = _ref12.dispatchSortableEvent,\n        oldIndex = _ref12.oldIndex,\n        putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n        children = parentEl.children;\n\n      // Multi-drag selection\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n\n          // Modifier activated, select from last to dragEl\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n              currentIndex = index(dragEl$1);\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvent: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n        }\n      }\n\n      // Multi-drag drop\n      if (dragStarted && this.isMultiDrag) {\n        folding = false;\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n            multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect;\n\n                  // Prepare unfold animation\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            }\n\n            // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            });\n\n            // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n              if (update) {\n                dispatchSortableEvent('update');\n                dispatchSortableEvent('sort');\n              }\n            }\n          }\n\n          // Must be done after capturing individual rects (scroll bar)\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n        multiDragSortable = toSortable;\n      }\n\n      // Remove clones if necessary\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n      // Only deselect if selection is in this sortable\n      if (multiDragSortable !== this.sortable) return;\n\n      // Only deselect if target is not item in this sortable\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return;\n\n      // Only deselect if left click\n      if (evt && evt.button !== 0) return;\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvent: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n      var oldIndicies = [],\n        newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        });\n\n        // multiDragElements will already be sorted if folding\n        var newIndex;\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      }\n    }\n  });\n}\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n","import Sortable from \"sortablejs\";\nconst sortableComponentSet = new Set<SortableComponent>();\n\nexport interface DragDetail {\n  toEl: HTMLElement;\n  fromEl: HTMLElement;\n  dragEl: HTMLElement;\n  newIndex: number;\n  oldIndex: number;\n}\n\nexport const CSS = {\n  ghostClass: \"calcite-sortable--ghost\",\n  chosenClass: \"calcite-sortable--chosen\",\n  dragClass: \"calcite-sortable--drag\",\n  fallbackClass: \"calcite-sortable--fallback\",\n};\n\n/**\n * Defines interface for components with sorting functionality.\n */\nexport interface SortableComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * When `true`, dragging is enabled.\n   */\n  dragEnabled: boolean;\n\n  /**\n   * Specifies which items inside the element should be draggable.\n   */\n  dragSelector?: string;\n\n  /**\n   * The list's group identifier.\n   */\n  group?: string;\n\n  /**\n   * The selector for the handle elements.\n   */\n  handleSelector: string;\n\n  /**\n   * The Sortable instance.\n   */\n  sortable: Sortable;\n\n  /**\n   * Whether the element can move from the list.\n   */\n  canPull: (detail: DragDetail) => boolean;\n\n  /**\n   * Whether the element can be added from another list.\n   */\n  canPut: (detail: DragDetail) => boolean;\n\n  /**\n   * Called when any sortable component drag starts. For internal use only. Any public drag events should emit within `onDragStart()`.\n   */\n  onGlobalDragStart: () => void;\n\n  /**\n   * Called when any sortable component drag ends. For internal use only. Any public drag events should emit within `onDragEnd()`.\n   */\n  onGlobalDragEnd: () => void;\n\n  /**\n   * Called when a component's dragging ends.\n   */\n  onDragEnd: (detail: DragDetail) => void;\n\n  /**\n   * Called when a component's dragging starts.\n   */\n  onDragStart: (detail: DragDetail) => void;\n\n  /**\n   * Called by any change to the list (add / update / remove).\n   */\n  onDragSort: (detail: DragDetail) => void;\n}\n\nexport interface SortableComponentItem {\n  /**\n   * When `true`, the item is not draggable.\n   *\n   *\n   * Notes:\n   *\n   * This property should use the @Prop decorator and reflect.\n   * This property should be used to set the `calcite-handle` disabled property.\n   */\n  dragDisabled: boolean;\n}\n\n/**\n * Helper to keep track of a SortableComponent. This should be called in the `connectedCallback` lifecycle method as well as any other method necessary to rebuild the sortable instance.\n *\n * @param {SortableComponent} component - The sortable component.\n */\nexport function connectSortableComponent(component: SortableComponent): void {\n  if (dragActive(component)) {\n    return;\n  }\n\n  disconnectSortableComponent(component);\n  sortableComponentSet.add(component);\n\n  const dataIdAttr = \"id\";\n  const { group, handleSelector: handle, dragSelector: draggable } = component;\n\n  component.sortable = Sortable.create(component.el, {\n    dataIdAttr,\n    ...CSS,\n    ...(!!draggable && { draggable }),\n    ...(!!group && {\n      group: {\n        name: group,\n        ...(!!component.canPull && {\n          pull: (to, from, dragEl, { newIndex, oldIndex }) =>\n            component.canPull({ toEl: to.el, fromEl: from.el, dragEl, newIndex, oldIndex }),\n        }),\n        ...(!!component.canPut && {\n          put: (to, from, dragEl, { newIndex, oldIndex }) =>\n            component.canPut({ toEl: to.el, fromEl: from.el, dragEl, newIndex, oldIndex }),\n        }),\n      },\n    }),\n    handle,\n    filter: `${handle}[disabled]`,\n    onStart: ({ from: fromEl, item: dragEl, to: toEl, newIndex, oldIndex }) => {\n      dragState.active = true;\n      onGlobalDragStart();\n      component.onDragStart({ fromEl, dragEl, toEl, newIndex, oldIndex });\n    },\n    onEnd: ({ from: fromEl, item: dragEl, to: toEl, newIndex, oldIndex }) => {\n      dragState.active = false;\n      onGlobalDragEnd();\n      component.onDragEnd({ fromEl, dragEl, toEl, newIndex, oldIndex });\n    },\n    onSort: ({ from: fromEl, item: dragEl, to: toEl, newIndex, oldIndex }) => {\n      component.onDragSort({ fromEl, dragEl, toEl, newIndex, oldIndex });\n    },\n  });\n}\n\n/**\n * Helper to remove track of a SortableComponent. This should be called in the `disconnectedCallback` lifecycle method.\n *\n * @param {SortableComponent} component - The sortable component.\n */\nexport function disconnectSortableComponent(component: SortableComponent): void {\n  if (dragActive(component)) {\n    return;\n  }\n\n  sortableComponentSet.delete(component);\n\n  component.sortable?.destroy();\n  component.sortable = null;\n}\n\nconst dragState: { active: boolean } = { active: false };\n\n/**\n * Helper to determine if dragging is currently active.\n *\n * @param component The sortable component.\n * @returns {boolean} a boolean value.\n */\nexport function dragActive(component: SortableComponent): boolean {\n  return component.dragEnabled && dragState.active;\n}\n\nfunction onGlobalDragStart(): void {\n  Array.from(sortableComponentSet).forEach((component) => component.onGlobalDragStart());\n}\n\nfunction onGlobalDragEnd(): void {\n  Array.from(sortableComponentSet).forEach((component) => component.onGlobalDragEnd());\n}\n"],"mappings":"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","ignoreList":[]}