{"version":3,"names":["DURATION","CSS","container","containerOverlaid","containerEdged","itemContainer","itemContainerForward","itemContainerBackward","pagination","paginationItems","paginationItem","paginationItemIndividual","paginationItemVisible","paginationItemOutOfRange","paginationItemSelected","paginationItemRangeEdge","pageNext","pagePrevious","autoplayControl","autoplayProgress","ICONS","chevronLeft","chevronRight","inactive","active","pause","play","centerItemsByBreakpoint","medium","small","xsmall","xxsmall","carouselCss","CalciteCarouselStyle0","Carousel","this","containerId","guid","slideDurationInterval","slideInterval","resizeObserver","createObserver","entries","forEach","resizeHandler","contentRect","width","setMaxItemsToBreakpoint","autoplayHandler","clearIntervals","setInterval","timer","autoplayDuration","time","slideDurationRemaining","notSuspended","suspendedDueToFocus","suspendedDueToHover","userPreventsSuspend","nextItem","handleSlotChange","event","items","slotChangeGetAssignedElements","length","activeItemIndex","findIndex","item","selected","requestedSelectedIndex","setSelectedItem","requestedIndex","emit","previousSelected","selectedIndex","el","index","match","selectedItem","playing","calciteCarouselChange","handleArrowClick","direction","target","dataset","previousItem","handleItemSelection","requestedPosition","parseInt","handlePause","toggleRotation","handlePlay","handleFocusIn","isPlaying","calciteCarouselPause","handleMouseIn","handleMouseOut","leavingComponent","contains","relatedTarget","calciteCarouselResume","handleFocusOut","composedPath","includes","containerKeyDownHandler","lastItem","key","preventDefault","autoplay","tabListKeyDownHandler","visiblePaginationEls","Array","tabList","querySelectorAll","currentEl","focusElementInGroup","storeTabListRef","storeContainerRef","storeItemContainerRef","renderRotationControl","text","messages","h","class","onClick","title","icon","scale","label","carouselItemProgress","value","renderPaginationArea","controlOverlay","onKeyDown","ref","arrowType","renderArrow","renderPaginationItems","maxItems","role","map","itemCount","first","last","endRangeStart","inStartRange","inEndRange","rangeStart","Math","floor","rangeEnd","low","high","isEdge","visible","overflowActive","id","undefined","toAriaBoolean","isPrev","dir","getElementDir","css","previous","next","flipRtl","autoplayWatcher","onMessagesChange","connectedCallback","connectLocalized","connectMessages","observe","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnect","componentWillLoad","paused","setUpLoadableComponent","setUpMessages","setFocus","componentFocusable","focus","stop","directionWatcher","whenAnimationDone","playingWatcher","suspendWatcher","suspendEnd","suspendStart","effectiveLocaleChange","updateMessages","effectiveLocale","breakpoints","clearInterval","nextIndex","getRoundRobinIndex","prevIndex","max","calciteCarouselPlay","suspendedSlideDurationRemaining","calciteCarouselStop","render","Host","InteractiveContainer","disabled","carousel","onFocusin","onFocusout","onMouseEnter","onMouseLeave","tabIndex","onSlotchange","carouselItemCss","CalciteCarouselItemStyle0","CarouselItem"],"sources":["src/components/carousel/resources.ts","src/components/carousel/carousel.scss?tag=calcite-carousel&encapsulation=shadow","src/components/carousel/carousel.tsx","src/components/carousel-item/resources.ts","src/components/carousel-item/carousel-item.scss?tag=calcite-carousel-item&encapsulation=shadow","src/components/carousel-item/carousel-item.tsx"],"sourcesContent":["export const DURATION = 6000;\n\nexport const CSS = {\n  container: \"container\",\n  containerOverlaid: \"container--overlaid\",\n  containerEdged: \"container--edged\",\n  itemContainer: \"item-container\",\n  itemContainerForward: \"item-container--forward\",\n  itemContainerBackward: \"item-container--backward\",\n  pagination: \"pagination\",\n  paginationItems: \"pagination-items\",\n  paginationItem: \"pagination-item\",\n  paginationItemIndividual: \"pagination-item--individual\",\n  paginationItemVisible: \"pagination-item--visible\",\n  paginationItemOutOfRange: \"pagination-item--out-of-range\",\n  paginationItemSelected: \"pagination-item--selected\",\n  paginationItemRangeEdge: \"pagination-item--range-edge\",\n  pageNext: \"page-next\",\n  pagePrevious: \"page-previous\",\n  autoplayControl: \"autoplay-control\",\n  autoplayProgress: \"autoplay-progress\",\n};\n\nexport const ICONS = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n  inactive: \"bullet-point\",\n  active: \"bullet-point-large\",\n  pause: \"pause-f\",\n  play: \"play-f\",\n} as const;\n\nexport const centerItemsByBreakpoint = {\n  medium: 7,\n  small: 5,\n  xsmall: 3,\n  xxsmall: 1,\n};\n","/**\n  * Local props\n  * These properties are intended for internal component use only. It is not recommended that these properties be overwritten.\n  * These should be made public and documented post-release of token work.\n  *\n  * --calcite-internal-carousel-item-background-color-active: Specifies the background color of the component's slide item while active.\n  * --calcite-internal-carousel-item-background-color-hover: Specifies the background color of the component's slide item while hovered.\n  * --calcite-internal-carousel-item-background-color-selected: Specifies the background color of the component's slide item when selected.\n  * --calcite-internal-carousel-item-background-color: Specifies the background color of the component's slide item.\n  * --calcite-internal-carousel-item-icon-color-hover: Specifies the icon color of the component's slide item while hovered.\n  * --calcite-internal-carousel-item-icon-color-selected: Specifies the icon color of the component's slide item when selected.\n  * --calcite-internal-carousel-item-icon-color: Specifies the icon color of the component's slide item.\n  * --calcite-internal-carousel-control-color-hover: Specifies the icon color of the component's slide slide arrow and autoplay button while hovered.\n  * --calcite-internal-carousel-control-color: Specifies the icon color of the component's slide arrow and autoplay button.\n  * --calcite-internal-carousel-autoplay-progress-background-color: Specifies the background color of the component's progress when `autoplay`.\n  * --calcite-internal-carousel-autoplay-progress-fill-color: Specifies the fill color of the component's progress when `autoplay`.\n  *\n*/\n\n:host {\n  @apply flex w-full;\n  --calcite-internal-internal-carousel-item-space: 1.5rem;\n  --calcite-internal-internal-carousel-item-space-wide: 3.5rem;\n  --calcite-internal-internal-carousel-item-background-color: var(\n    --calcite-internal-carousel-item-background-color,\n    var(--calcite-color-foreground-1)\n  );\n  --calcite-internal-internal-carousel-item-background-color-hover: var(\n    --calcite-internal-carousel-item-background-color-hover,\n    var(--calcite-color-foreground-2)\n  );\n  --calcite-internal-internal-carousel-item-background-color-active: var(\n    --calcite-internal-carousel-item-background-color-active,\n    var(--calcite-color-foreground-2)\n  );\n  --calcite-internal-internal-carousel-item-background-color-selected: var(\n    --calcite-internal-carousel-item-background-color-selected,\n    var(--calcite-color-foreground-1)\n  );\n  --calcite-internal-internal-carousel-item-icon-color-hover: var(\n    --calcite-internal-carousel-item-icon-color-hover,\n    var(--calcite-action-color-transparent-hover)\n  );\n  --calcite-internal-internal-carousel-item-icon-color: var(\n    --calcite-internal-carousel-item-icon-color,\n    var(--calcite-color-border-3)\n  );\n  --calcite-internal-internal-carousel-item-icon-color-selected: var(\n    --calcite-internal-carousel-item-icon-color-selected,\n    var(--calcite-color-brand)\n  );\n  --calcite-internal-internal-carousel-control-color-hover: var(\n    --calcite-internal-carousel-control-color-hover,\n    var(--calcite-internal-carousel-item-icon-color-hover)\n  );\n  --calcite-internal-internal-carousel-control-color: var(\n    --calcite-internal-carousel-item-icon-color,\n    var(--calcite-color-border-input)\n  );\n  --calcite-internal-internal-carousel-autoplay-progress-background-color: var(\n    --calcite-internal-carousel-autoplay-progress-background-color,\n    var(--calcite-color-border-3)\n  );\n  --calcite-internal-internal-carousel-autoplay-progress-fill-color: var(\n    --calcite-internal-carousel-autoplay-progress-fill-color,\n    var(--calcite-color-brand)\n  );\n}\n\n.container {\n  @apply focus-base\n   relative\n    flex\n    flex-col\n    overflow-hidden\n    text-color-2\n    text-n1h\n    w-full;\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\n.container--edged:not(.container--overlaid) {\n  padding-inline: var(--calcite-internal-internal-carousel-item-space-wide);\n  inline-size: calc(100% - var(--calcite-internal-internal-carousel-item-space-wide) * 2);\n}\n\n.item-container {\n  @apply flex\n    items-start\n    justify-center\n    overflow-auto\n    flex-auto\n    p-1;\n  animation-name: none;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.container--overlaid .item-container {\n  @apply p-0;\n}\n\n.item-container--forward {\n  animation-name: item-forward;\n}\n\n.item-container--backward {\n  animation-name: item-backward;\n}\n\ncalcite-carousel-item:not([selected]) {\n  opacity: 0;\n}\n\n.pagination {\n  @apply flex\n  flex-row\n  items-center\n  justify-center\n  m-3;\n  inline-size: auto;\n}\n\n.pagination-items {\n  @apply flex flex-row items-center;\n}\n\n.container--overlaid .pagination {\n  position: absolute;\n}\n\n.pagination-item.page-next,\n.pagination-item.page-previous {\n  color: var(--calcite-internal-internal-carousel-control-color);\n  &:hover {\n    color: var(--calcite-internal-internal-carousel-control-color-hover);\n  }\n}\n\n.container--edged {\n  .page-next,\n  .page-previous {\n    @apply h-12 w-12;\n    position: absolute;\n    inset-block-start: 50%;\n    transform: translateY(-50%);\n  }\n\n  .page-next {\n    inset-inline-end: 0;\n  }\n\n  .page-previous {\n    inset-inline-start: 0;\n  }\n}\n\n.container--overlaid .pagination {\n  inset-block-start: unset;\n  inset-block-end: 0;\n  inset-inline: 0;\n}\n\n.pagination-item.autoplay-control {\n  position: relative;\n  color: var(--calcite-internal-internal-carousel-control-color);\n  --calcite-color-brand: var(--calcite-internal-internal-carousel-autoplay-progress-fill-color);\n  --calcite-color-border-3: var(--calcite-internal-internal-carousel-autoplay-progress-background-color);\n}\n\n.autoplay-control:focus .autoplay-progress {\n  inset-block-end: 4px;\n  inset-inline: 2px;\n  inline-size: calc(100% - 4px);\n}\n\n.autoplay-progress {\n  position: absolute;\n  inset-block-end: 2px;\n  inset-inline: 0;\n  inline-size: 100%;\n}\n\n.pagination-item {\n  @apply focus-base\n    transition-default\n    m-0\n    h-8\n    w-8\n    cursor-pointer\n    items-center\n    border-none\n    bg-transparent;\n  -webkit-appearance: none;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  --calcite-color-foreground-1: var(--calcite-internal-internal-carousel-item-background-color);\n  color: var(--calcite-internal-internal-carousel-item-icon-color);\n  &:hover {\n    background-color: var(--calcite-internal-internal-carousel-item-background-color-hover);\n    color: var(--calcite-internal-internal-carousel-item-icon-color-hover);\n  }\n  &:focus {\n    background-color: var(--calcite-internal-internal-carousel-item-background-color-active);\n    @apply focus-inset;\n  }\n  &:active {\n    background-color: var(--calcite-internal-internal-carousel-item-background-color-active);\n    color: var(--calcite-internal-internal-carousel-item-icon-color-hover);\n  }\n  & calcite-icon {\n    color: inherit;\n    pointer-events: none;\n  }\n  &.pagination-item--selected {\n    --calcite-color-foreground-1: var(--calcite-internal-internal-carousel-item-background-color-selected);\n    --calcite-color-foreground-3: var(--calcite-internal-internal-carousel-item-background-color-selected);\n    color: var(--calcite-internal-internal-carousel-item-icon-color-selected);\n  }\n}\n\n.pagination-item--individual {\n  @apply w-0 p-0 opacity-0 pointer-events-none;\n  visibility: hidden;\n  transition:\n    var(--calcite-animation-timing) ease-in-out inline-size,\n    var(--calcite-animation-timing) ease-in-out padding,\n    var(--calcite-animation-timing) ease-in-out opacity;\n\n  &.pagination-item--visible {\n    @apply w-8 opacity-100 pointer-events-auto;\n    visibility: visible;\n  }\n}\n\n.pagination-item--range-edge calcite-icon {\n  scale: 0.75;\n  transition: var(--calcite-animation-timing) ease-in-out scale;\n}\n\n.container--overlaid .pagination-item {\n  background-color: var(--calcite-internal-internal-carousel-item-background-color);\n  &:hover {\n    background-color: var(--calcite-internal-internal-carousel-item-background-color-hover);\n  }\n  &:focus {\n    background-color: var(--calcite-internal-internal-carousel-item-background-color-active);\n  }\n  &:active {\n    background-color: var(--calcite-internal-internal-carousel-item-background-color-active);\n  }\n}\n\n@keyframes item-forward {\n  0% {\n    transform: translate3d(100px, 0, 0);\n  }\n  100% {\n    transform: translate3d(0, 0, 0);\n  }\n}\n@keyframes item-backward {\n  0% {\n    transform: translate3d(-100px, 0, 0);\n  }\n  100% {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n@include disabled();\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Method,\n  h,\n  Host,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  focusElementInGroup,\n  getElementDir,\n  slotChangeGetAssignedElements,\n  toAriaBoolean,\n  whenAnimationDone,\n} from \"../../utils/dom\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  updateHostInteraction,\n  InteractiveComponent,\n  InteractiveContainer,\n} from \"../../utils/interactive\";\nimport {\n  LoadableComponent,\n  componentFocusable,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { breakpoints } from \"../../utils/responsive\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { CSS, DURATION, ICONS, centerItemsByBreakpoint } from \"./resources\";\nimport { CarouselMessages } from \"./assets/carousel/t9n\";\nimport { ArrowType, AutoplayType } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding `calcite-carousel-item`s.\n */\n@Component({\n  tag: \"calcite-carousel\",\n  styleUrl: \"carousel.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Carousel\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the carousel will autoplay and controls will be displayed. When \"paused\" at time of initialization, the carousel will not autoplay, but controls will be displayed.\n   */\n  @Prop({ reflect: true }) autoplay: AutoplayType = false;\n\n  @Watch(\"autoplay\")\n  autoplayWatcher(autoplay: boolean): void {\n    if (!autoplay) {\n      this.handlePause(false);\n    }\n  }\n\n  /**\n   * Specifies how and if the \"previous\" and \"next\" arrows are displayed.\n   */\n  @Prop({ reflect: true }) arrowType: ArrowType = \"inline\";\n\n  /**\n   *  When `autoplay` is `true`, specifies in milliseconds the length of time to display each Carousel Item.\n   */\n  @Prop({ reflect: true }) autoplayDuration = DURATION;\n\n  /**\n   * Specifies if the component's controls are positioned absolutely on top of slotted Carousel Items.\n   */\n  @Prop({ reflect: true }) controlOverlay = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Accessible name for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: CarouselMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<CarouselMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) paused: boolean;\n\n  /**\n   * The component's selected `calcite-carousel-item`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItem: HTMLCalciteCarouselItemElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.clearIntervals();\n    this.resizeObserver?.disconnect();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    /* When the 'autoplay' property of type 'boolean | string' is set to true, the value is \"\". */\n    if ((this.autoplay === \"\" || this.autoplay) && this.autoplay !== \"paused\") {\n      this.handlePlay(false);\n    } else if (this.autoplay === \"paused\") {\n      this.paused = true;\n    }\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.container?.focus();\n  }\n\n  /** Play the carousel. If `autoplay` is not enabled (initialized either to `true` or `\"paused\"`), these methods will have no effect. */\n  @Method()\n  async play(): Promise<void> {\n    /* When the 'autoplay' property of type 'boolean | string' is set to true, the value is \"\". */\n    if (this.playing || (this.autoplay !== \"\" && !this.autoplay && this.autoplay !== \"paused\")) {\n      return;\n    }\n    this.handlePlay(true);\n  }\n\n  /** Stop the carousel. If `autoplay` is not enabled (initialized either to `true` or `\"paused\"`), these methods will have no effect. */\n  @Method()\n  async stop(): Promise<void> {\n    if (!this.playing) {\n      return;\n    }\n    this.handlePause(true);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteCarouselElement;\n\n  @State() selectedIndex: number;\n\n  @State() items: HTMLCalciteCarouselItemElement[] = [];\n\n  @State() direction: \"forward\" | \"backward\" | \"standby\" = \"standby\";\n\n  @Watch(\"direction\")\n  async directionWatcher(direction: string): Promise<void> {\n    if (direction === \"standby\") {\n      return;\n    }\n\n    await whenAnimationDone(\n      this.itemContainer,\n      direction === \"forward\" ? \"item-forward\" : \"item-backward\",\n    );\n    this.direction = \"standby\";\n  }\n\n  @State() defaultMessages: CarouselMessages;\n\n  @State() playing = false;\n\n  @Watch(\"playing\")\n  playingWatcher(): void {\n    this.paused = !this.playing;\n  }\n\n  @State() suspendedDueToFocus = false;\n\n  @State() suspendedDueToHover = false;\n\n  @Watch(\"suspendedDueToFocus\")\n  @Watch(\"suspendedDueToHover\")\n  suspendWatcher(): void {\n    if (!this.suspendedDueToFocus && !this.suspendedDueToHover) {\n      this.suspendEnd();\n    } else {\n      this.suspendStart();\n    }\n  }\n\n  @State() userPreventsSuspend = false;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  async effectiveLocaleChange(): Promise<void> {\n    await updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() suspendedSlideDurationRemaining = 1;\n\n  @State() slideDurationRemaining = 1;\n\n  @State() maxItems = centerItemsByBreakpoint.xxsmall;\n\n  private container: HTMLDivElement;\n\n  private containerId = `calcite-carousel-container-${guid()}`;\n\n  private itemContainer: HTMLDivElement;\n\n  private slideDurationInterval = null;\n\n  private slideInterval = null;\n\n  private tabList: HTMLDivElement;\n\n  private resizeObserver = createObserver(\"resize\", (entries) =>\n    entries.forEach(this.resizeHandler),\n  );\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /** Fires when the selected `calcite-carousel-item` changes. */\n  @Event({ cancelable: false }) calciteCarouselChange: EventEmitter<void>;\n\n  /** Fires when the carousel autoplay is invoked by the user. */\n  @Event({ cancelable: false }) calciteCarouselPlay: EventEmitter<void>;\n\n  /** Fires when the carousel autoplay state is stopped by a user. */\n  @Event({ cancelable: false }) calciteCarouselStop: EventEmitter<void>;\n\n  /** Fires when the carousel autoplay state pauses due to a user hovering over the component or focusing on the component or slotted content */\n  @Event({ cancelable: false }) calciteCarouselPause: EventEmitter<void>;\n\n  /** Fires when the carousel autoplay state resumes due to a user no longer hovering over the component or focusing on the component or slotted content */\n  @Event({ cancelable: false }) calciteCarouselResume: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setMaxItemsToBreakpoint(width: number): void {\n    if (!width) {\n      return;\n    }\n\n    if (width >= breakpoints.width.small) {\n      this.maxItems = centerItemsByBreakpoint.medium;\n      return;\n    }\n\n    if (width >= breakpoints.width.xsmall) {\n      this.maxItems = centerItemsByBreakpoint.small;\n      return;\n    }\n\n    if (width >= breakpoints.width.xxsmall) {\n      this.maxItems = centerItemsByBreakpoint.xsmall;\n      return;\n    }\n\n    this.maxItems = centerItemsByBreakpoint.xxsmall;\n  }\n\n  private resizeHandler = ({ contentRect: { width } }: ResizeObserverEntry): void => {\n    this.setMaxItemsToBreakpoint(width);\n  };\n\n  private clearIntervals() {\n    clearInterval(this.slideDurationInterval);\n    clearInterval(this.slideInterval);\n  }\n\n  private nextItem(emit: boolean) {\n    if (this.playing && emit) {\n      this.playing = false;\n    }\n    const nextIndex = getRoundRobinIndex(this.selectedIndex + 1, this.items.length);\n    this.setSelectedItem(nextIndex, emit);\n  }\n\n  private previousItem() {\n    this.playing = false;\n    const prevIndex = getRoundRobinIndex(Math.max(this.selectedIndex - 1, -1), this.items.length);\n    this.setSelectedItem(prevIndex, true);\n  }\n\n  private handlePlay(emit: boolean) {\n    this.playing = true;\n    this.autoplayHandler();\n    this.slideInterval = setInterval(this.autoplayHandler, this.autoplayDuration);\n    if (emit) {\n      this.calciteCarouselPlay.emit();\n    }\n  }\n\n  private handlePause(emit: boolean) {\n    this.playing = false;\n    this.clearIntervals();\n    this.slideDurationRemaining = 1;\n    this.suspendedSlideDurationRemaining = 1;\n    if (emit) {\n      this.calciteCarouselStop.emit();\n    }\n  }\n\n  private suspendStart() {\n    this.suspendedSlideDurationRemaining = this.slideDurationRemaining;\n  }\n\n  private suspendEnd() {\n    this.slideDurationRemaining = this.suspendedSlideDurationRemaining;\n  }\n\n  private autoplayHandler = (): void => {\n    this.clearIntervals();\n    this.slideDurationInterval = setInterval(this.timer, this.autoplayDuration / 100);\n  };\n\n  private timer = (): void => {\n    let time = this.slideDurationRemaining;\n    const notSuspended =\n      (!this.suspendedDueToFocus && !this.suspendedDueToHover) || this.userPreventsSuspend;\n    if (notSuspended) {\n      if (time <= 0.01) {\n        time = 1;\n        this.nextItem(false);\n      } else {\n        time = time - 0.01;\n      }\n    }\n    if (time > 0) {\n      this.slideDurationRemaining = time;\n    }\n  };\n\n  private handleSlotChange = (event: Event): void => {\n    const items = slotChangeGetAssignedElements<HTMLCalciteCarouselItemElement>(event);\n\n    if (items.length < 1) {\n      return;\n    }\n\n    const activeItemIndex = items.findIndex((item) => item.selected);\n    const requestedSelectedIndex = activeItemIndex > -1 ? activeItemIndex : 0;\n\n    this.items = items;\n\n    this.setSelectedItem(requestedSelectedIndex, false);\n  };\n\n  private setSelectedItem = (requestedIndex: number, emit: boolean): void => {\n    const previousSelected = this.selectedIndex;\n\n    this.items.forEach((el, index) => {\n      const match = requestedIndex === index;\n      el.selected = match;\n      if (match) {\n        this.selectedItem = el;\n        this.selectedIndex = index;\n      }\n    });\n\n    if (emit) {\n      this.playing = false;\n      if (previousSelected !== this.selectedIndex) {\n        this.calciteCarouselChange.emit();\n      }\n    }\n  };\n\n  private handleArrowClick = (event: MouseEvent): void => {\n    const direction = (event.target as HTMLDivElement).dataset.direction;\n    if (direction === \"next\") {\n      this.direction = \"forward\";\n      this.nextItem(true);\n    } else if (direction === \"previous\") {\n      this.direction = \"backward\";\n      this.previousItem();\n    }\n  };\n\n  private handleItemSelection = (event: MouseEvent): void => {\n    const item = event.target as HTMLCalciteActionElement;\n    const requestedPosition = parseInt(item.dataset.index);\n\n    if (requestedPosition === this.selectedIndex) {\n      return;\n    }\n\n    if (this.playing) {\n      this.handlePause(true);\n    }\n\n    this.direction = requestedPosition > this.selectedIndex ? \"forward\" : \"backward\";\n    this.setSelectedItem(requestedPosition, true);\n  };\n\n  private toggleRotation = (): void => {\n    this.userPreventsSuspend = true;\n    if (this.playing) {\n      this.handlePause(true);\n    } else {\n      this.handlePlay(true);\n    }\n  };\n\n  private handleFocusIn = (): void => {\n    const isPlaying = this.playing;\n\n    if (isPlaying) {\n      this.suspendedDueToFocus = true;\n    }\n    if ((!this.suspendedDueToFocus || !this.suspendedDueToHover) && isPlaying) {\n      this.calciteCarouselPause.emit();\n    }\n  };\n\n  private handleMouseIn = (): void => {\n    const isPlaying = this.playing;\n\n    if (isPlaying) {\n      this.suspendedDueToHover = true;\n    }\n    if ((!this.suspendedDueToFocus || !this.suspendedDueToHover) && isPlaying) {\n      this.calciteCarouselPause.emit();\n    }\n  };\n\n  private handleMouseOut = (event: MouseEvent): void => {\n    const leavingComponent = !this.el.contains(event.relatedTarget as HTMLElement);\n    const isPlaying = this.playing;\n\n    if (leavingComponent && isPlaying) {\n      this.suspendedDueToHover = false;\n    }\n    if (leavingComponent && isPlaying && !this.suspendedDueToFocus) {\n      this.userPreventsSuspend = false;\n      this.calciteCarouselResume.emit();\n    }\n  };\n\n  private handleFocusOut = (event: FocusEvent): void => {\n    const leavingComponent = !event.composedPath().includes(event.relatedTarget as HTMLElement);\n    const isPlaying = this.playing;\n\n    if (leavingComponent && isPlaying) {\n      this.suspendedDueToFocus = false;\n    }\n    if (leavingComponent && isPlaying && !this.suspendedDueToHover) {\n      this.userPreventsSuspend = false;\n      this.calciteCarouselResume.emit();\n    }\n  };\n\n  private containerKeyDownHandler = (event: KeyboardEvent): void => {\n    if (event.target !== this.container) {\n      return;\n    }\n\n    const lastItem = this.items.length - 1;\n\n    switch (event.key) {\n      case \" \":\n      case \"Enter\":\n        event.preventDefault();\n        if (this.autoplay === \"\" || this.autoplay || this.autoplay === \"paused\") {\n          this.toggleRotation();\n        }\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.direction = \"forward\";\n        this.nextItem(true);\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.direction = \"backward\";\n        this.previousItem();\n        break;\n      case \"Home\":\n        event.preventDefault();\n        if (this.selectedIndex === 0) {\n          return;\n        }\n        this.direction = \"backward\";\n        this.setSelectedItem(0, true);\n        break;\n      case \"End\":\n        event.preventDefault();\n        if (this.selectedIndex === lastItem) {\n          return;\n        }\n        this.direction = \"forward\";\n        this.setSelectedItem(lastItem, true);\n        break;\n    }\n  };\n\n  private tabListKeyDownHandler = (event: KeyboardEvent): void => {\n    const visiblePaginationEls = Array(\n      ...this.tabList.querySelectorAll(`button:not(.${CSS.paginationItemOutOfRange})`),\n    );\n    const currentEl = event.target as HTMLCalciteActionElement;\n    switch (event.key) {\n      case \"ArrowRight\":\n        focusElementInGroup(visiblePaginationEls, currentEl, \"next\");\n        break;\n      case \"ArrowLeft\":\n        focusElementInGroup(visiblePaginationEls, currentEl, \"previous\");\n        break;\n      case \"Home\":\n        event.preventDefault();\n        focusElementInGroup(visiblePaginationEls, currentEl, \"first\");\n        break;\n      case \"End\":\n        event.preventDefault();\n        focusElementInGroup(visiblePaginationEls, currentEl, \"last\");\n        break;\n    }\n  };\n\n  private storeTabListRef = (el: HTMLDivElement): void => {\n    this.tabList = el;\n  };\n\n  private storeContainerRef = (el: HTMLDivElement): void => {\n    this.container = el;\n  };\n\n  private storeItemContainerRef = (el: HTMLDivElement): void => {\n    this.itemContainer = el;\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderRotationControl = (): VNode => {\n    const text = this.playing ? this.messages.pause : this.messages.play;\n    return (\n      <button\n        aria-label={text}\n        class={{\n          [CSS.paginationItem]: true,\n          [CSS.autoplayControl]: true,\n        }}\n        onClick={this.toggleRotation}\n        title={text}\n      >\n        <calcite-icon icon={this.playing ? ICONS.pause : ICONS.play} scale=\"s\" />\n        {this.playing && (\n          <calcite-progress\n            class={CSS.autoplayProgress}\n            label={this.messages.carouselItemProgress}\n            value={this.slideDurationRemaining}\n          />\n        )}\n      </button>\n    );\n  };\n\n  renderPaginationArea = (): VNode => (\n    <div\n      class={{\n        [CSS.pagination]: true,\n        [CSS.containerOverlaid]: this.controlOverlay,\n      }}\n      onKeyDown={this.tabListKeyDownHandler}\n      ref={this.storeTabListRef}\n    >\n      {(this.playing || this.autoplay === \"\" || this.autoplay || this.autoplay === \"paused\") &&\n        this.renderRotationControl()}\n      {this.arrowType === \"inline\" && this.renderArrow(\"previous\")}\n      {this.renderPaginationItems()}\n      {this.arrowType === \"inline\" && this.renderArrow(\"next\")}\n    </div>\n  );\n\n  renderPaginationItems = (): VNode => {\n    const { selectedIndex, maxItems, items, label, handleItemSelection } = this;\n    return (\n      <div aria-label={label} class={CSS.paginationItems} role=\"tablist\">\n        {items.map((item, index) => {\n          const itemCount = items.length;\n          const match = index === selectedIndex;\n          const first = index === 0;\n          const last = index === itemCount - 1;\n          const endRangeStart = itemCount - maxItems - 1;\n          const inStartRange = selectedIndex < maxItems;\n          const inEndRange = selectedIndex >= endRangeStart;\n          const rangeStart = inStartRange ? 0 : selectedIndex - Math.floor(maxItems / 2);\n          const rangeEnd = inEndRange ? itemCount : rangeStart + maxItems;\n          const low = inStartRange ? 0 : inEndRange ? endRangeStart : rangeStart;\n          const high = inStartRange ? maxItems + 1 : rangeEnd;\n          const isEdge = !first && !last && !match && (index === low - 1 || index === high);\n          const visible = match || (index <= high && index >= low - 1);\n          const overflowActive = itemCount - 1 <= maxItems;\n          const icon = match ? ICONS.active : ICONS.inactive;\n\n          return (\n            <button\n              aria-controls={!match ? item.id : undefined}\n              aria-selected={toAriaBoolean(match)}\n              class={{\n                [CSS.paginationItem]: true,\n                [CSS.paginationItemIndividual]: true,\n                [CSS.paginationItemSelected]: match,\n                [CSS.paginationItemRangeEdge]: itemCount - 1 > maxItems && isEdge,\n                [CSS.paginationItemOutOfRange]: !(overflowActive || visible),\n                [CSS.paginationItemVisible]: overflowActive || visible,\n              }}\n              data-index={index}\n              key={item.id}\n              onClick={handleItemSelection}\n              role=\"tab\"\n              title={item.label}\n            >\n              <calcite-icon icon={icon} scale=\"l\" />\n            </button>\n          );\n        })}\n      </div>\n    );\n  };\n\n  renderArrow = (direction: \"previous\" | \"next\"): VNode => {\n    const isPrev = direction === \"previous\";\n    const dir = getElementDir(this.el);\n    const scale = this.arrowType === \"edge\" ? \"m\" : \"s\";\n    const css = isPrev ? CSS.pagePrevious : CSS.pageNext;\n    const title = isPrev ? this.messages.previous : this.messages.next;\n    const icon = isPrev ? ICONS.chevronLeft : ICONS.chevronRight;\n    return (\n      <button\n        aria-controls={this.containerId}\n        class={{ [CSS.paginationItem]: true, [css]: true }}\n        data-direction={direction}\n        onClick={this.handleArrowClick}\n        title={title}\n      >\n        <calcite-icon flipRtl={dir === \"rtl\"} icon={icon} scale={scale} />\n      </button>\n    );\n  };\n\n  render(): VNode {\n    const { direction } = this;\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-label={this.label}\n            aria-live={this.playing ? \"off\" : \"polite\"}\n            aria-roledescription={this.messages.carousel}\n            class={{\n              [CSS.container]: true,\n              [CSS.containerOverlaid]: this.controlOverlay,\n              [CSS.containerEdged]: this.arrowType === \"edge\",\n            }}\n            onFocusin={this.handleFocusIn}\n            onFocusout={this.handleFocusOut}\n            onKeyDown={this.containerKeyDownHandler}\n            onMouseEnter={this.handleMouseIn}\n            onMouseLeave={this.handleMouseOut}\n            ref={this.storeContainerRef}\n            role=\"group\"\n            tabIndex={0}\n          >\n            <section\n              class={{\n                [CSS.itemContainer]: true,\n                [CSS.itemContainerForward]: direction === \"forward\",\n                [CSS.itemContainerBackward]: direction === \"backward\",\n              }}\n              id={this.containerId}\n              // eslint-disable-next-line react/jsx-sort-props -- auto-generated by @esri/calcite-components/enforce-ref-last-prop\n              ref={this.storeItemContainerRef}\n            >\n              <slot onSlotchange={this.handleSlotChange} />\n            </section>\n            {this.items.length > 1 && this.renderPaginationArea()}\n            {this.arrowType === \"edge\" && this.renderArrow(\"previous\")}\n            {this.arrowType === \"edge\" && this.renderArrow(\"next\")}\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","export const CSS = {\n  container: \"container\",\n  selected: \"selected\",\n};\n",":host {\n  @apply flex;\n}\n\n.container {\n  @apply hidden;\n  inline-size: var(--calcite-container-size-content-fluid);\n}\n\n:host([selected]) .container {\n  @apply block;\n}\n\n@include base-component();\n","import { Component, Element, h, Host, Prop, VNode } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding content.\n */\n@Component({\n  tag: \"calcite-carousel-item\",\n  styleUrl: \"carousel-item.scss\",\n  shadow: true,\n})\nexport class CarouselItem {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Accessible name for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ reflect: true }) selected = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteCarouselItemElement;\n\n  private guid = `calcite-carousel-item-${guid()}`;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const id = this.el.id || this.guid;\n    return (\n      <Host id={id}>\n        <div\n          aria-label={this.label}\n          class={{ [CSS.container]: true, [CSS.selected]: this.selected }}\n          role=\"tabpanel\"\n        >\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}