{"version":3,"names":["slope","p0","p1","p2","dx","dx1","dy","dy1","m","m1","p","Math","sign","min","abs","slopeSingle","bezier","m0","t","x0","y0","x1","y1","h1","join","h2","translate","width","height","max","rangeX","rangeY","point","x","y","range","data","startX","startY","reduce","area","length","minX","minY","maxX","commands","acc","i","undefined","command","last","end","graphCss","CalciteGraphStyle0","Graph","this","graphId","guid","resizeObserver","createObserver","forceUpdate","connectedCallback","observe","el","disconnectedCallback","disconnect","render","colorStops","highlightMax","highlightMin","id","clientHeight","clientWidth","h","class","preserveAspectRatio","viewBox","rangeMin","rangeMax","currentMin","currentMax","hMinX","hMaxX","areaPath","fill","x2","y2","map","offset","color","opacity","d","mask","CSS","container","containerRange","graph","handle","handleExtension","handleLabel","handleLabelMinValue","handleLabelValue","hyphen","hyphenWrap","static","thumb","thumbActive","thumbContainer","thumbMinValue","thumbPrecise","thumbValue","tick","tickActive","tickLabel","tickMax","tickMin","ticks","track","trackRange","transformed","maxTickElementThreshold","sliderCss","CalciteSliderStyle0","isRange","value","Array","isArray","Slider","handleKeyDown","event","mirror","shouldMirror","activeProp","pageStep","step","key","isActivationKey","preventDefault","adjustment","directionFactor","isNaN","fixedDecimalAdjustment","Number","toFixed","decimalPlaces","setValue","clamp","onThumbBlur","onThumbFocus","currentTarget","getAttribute","onThumbPointerDown","pointerDownDragStart","onTrackPointerDown","dragUpdate","disabled","dragProp","mapToRange","clientX","pageX","minValueDragRange","maxValueDragRange","minMaxValueRange","newMinValue","newMaxValue","minValue","maxValue","pointerUpDragEnd","isPrimaryPointerButton","dragEnd","removeDragListeners","focusActiveHandle","lastDragPropValue","emitChange","storeTrackRef","node","trackEl","storeThumbRef","valueProp","minHandle","maxHandle","formatValue","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","localize","toString","histogramWatcher","newHistogram","hasHistogram","ticksWatcher","tickValues","generateTickValues","valueHandler","setMinMaxFromValue","minMaxValueHandler","setValueFromMinMax","connectLocalized","connectLabel","connectForm","disconnectLabel","disconnectForm","disconnectLocalized","componentWillLoad","setUpLoadableComponent","snap","getClosestStep","histogram","afterConnectDefaultValueSet","componentDidLoad","setComponentLoaded","componentDidRender","labelHandles","adjustHostObscuredHandleLabel","precise","hyphenateCollidingRangeHandleLabels","hideObscuredBoundingTickLabels","updateHostInteraction","useMinValue","shouldUseMinValue","minInterval","getUnitInterval","maxInterval","valueIsRange","thumbTypes","buildThumbType","renderThumb","type","thumbPlacement","includes","minThumbTypes","minThumb","fillPlacement","trackRangePlacementStyles","left","right","Host","onKeyDown","onTouchStart","handleTouchStart","InteractiveContainer","getLabelText","scale","renderGraph","ref","onPointerDown","style","tickOffset","activeTicks","rangeStart","rangeEnd","renderTickLabel","HiddenFormInputSlot","component","isLabeled","isPrecise","isMinThumb","ariaLabel","minLabel","maxLabel","ariaValuenow","displayedValue","internalLabelFormatter","thumbStyle","thumbLabelClasses","labels","thumbContent","reverse","lastDragProp","onBlur","onFocus","role","tabIndex","histogramStops","labelTicks","isMinTickLabel","isMaxTickLabel","isAtEdge","shouldDisplayLabel","pointerDownHandler","position","prop","inRange","closerToMax","dragStart","isThumbActive","shadowRoot","querySelector","setFocus","componentFocusable","focus","thumbTypeParts","push","onLabelClick","mirrored","getTickDensity","density","tickInterval","current","window","addEventListener","valueX","getClosestHandle","emitInput","calciteSliderInput","emit","calciteSliderChange","removeEventListener","values","valueChanged","Object","keys","forEach","propName","newValue","oldValue","dragging","getBoundingClientRect","percent","clampedValue","bigDecimalString","BigDecimal","floor","multiply","add","snappedValue","getDistanceX","getFontSizeForElement","element","getComputedStyle","getPropertyValue","match","num","name","label","labelStatic","labelTransformed","labelStaticBounds","labelStaticOffset","getHostOffset","transform","leftModifier","rightModifier","leftValueLabel","leftValueLabelStatic","leftValueLabelTransformed","leftValueLabelStaticHostOffset","rightValueLabel","rightValueLabelStatic","rightValueLabelTransformed","rightValueLabelStaticHostOffset","labelFontSize","labelTransformedOverlap","getRangeLabelOverlap","hyphenLabel","labelOffset","classList","leftValueLabelTranslate","leftValueLabelTransformedHostOffset","rightValueLabelTranslate","rightValueLabelTransformedHostOffset","remove","minTickLabel","maxTickLabel","isMinTickLabelObscured","isMaxTickLabelObscured","leftBounds","rightBounds","hostBounds","buffer","leftLabel","rightLabel","leftLabelBounds","rightLabelBounds","leftLabelFontSize","rangeLabelOverlap","minLabelBounds","handleBounds","intersects","maxLabelBounds","customFormatter","labelFormatter","formattedValue"],"sources":["src/components/graph/util.ts","src/components/graph/graph.scss?tag=calcite-graph&encapsulation=shadow","src/components/graph/graph.tsx","src/components/slider/resources.ts","src/components/slider/slider.scss?tag=calcite-slider&encapsulation=shadow","src/components/slider/slider.tsx"],"sourcesContent":["import { DataSeries, Extent, Graph, Point, TranslateOptions, Translator } from \"../graph/interfaces\";\n\n/**\n * Calculate slope of the tangents\n * uses Steffen interpolation as it's monotonic\n * http://jrwalsh1.github.io/posts/interpolations/\n *\n * @param p0\n * @param p1\n * @param p2\n */\nfunction slope(p0: Point, p1: Point, p2: Point): number {\n  const dx = p1[0] - p0[0];\n  const dx1 = p2[0] - p1[0];\n  const dy = p1[1] - p0[1];\n  const dy1 = p2[1] - p1[1];\n  const m = dy / (dx || (dx1 < 0 && 0));\n  const m1 = dy1 / (dx1 || (dx < 0 && 0));\n  const p = (m * dx1 + m1 * dx) / (dx + dx1);\n  return (Math.sign(m) + Math.sign(m1)) * Math.min(Math.abs(m), Math.abs(m1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * Calculate slope for just one tangent (single-sided)\n *\n * @param p0\n * @param p1\n * @param m\n */\nfunction slopeSingle(p0: Point, p1: Point, m: number): number {\n  const dx = p1[0] - p0[0];\n  const dy = p1[1] - p0[1];\n  return dx ? ((3 * dy) / dx - m) / 2 : m;\n}\n\n/**\n * Given two points and their tangent slopes,\n * calculate the bezier handle coordinates and return draw command.\n *\n * Translates Hermite Spline to BÃ©zier curve:\n * https://stackoverflow.com/questions/42574940/\n *\n * @param p0\n * @param p1\n * @param m0\n * @param m1\n * @param t\n */\nfunction bezier(p0: Point, p1: Point, m0: number, m1: number, t: Translator): string {\n  const [x0, y0] = p0;\n  const [x1, y1] = p1;\n  const dx = (x1 - x0) / 3;\n  const h1 = t([x0 + dx, y0 + dx * m0]).join(\",\");\n  const h2 = t([x1 - dx, y1 - dx * m1]).join(\",\");\n  const p = t([x1, y1]).join(\",\");\n  return `C ${h1} ${h2} ${p}`;\n}\n\n/**\n * Generate a function which will translate a point\n * from the data coordinate space to svg viewbox oriented pixels\n *\n * @param root0\n * @param root0.width\n * @param root0.height\n * @param root0.min\n * @param root0.max\n */\nexport function translate({ width, height, min, max }: TranslateOptions): Translator {\n  const rangeX = max[0] - min[0];\n  const rangeY = max[1] - min[1];\n  return (point) => {\n    const x = ((point[0] - min[0]) / rangeX) * width;\n    const y = height - (point[1] / rangeY) * height;\n    return [x, y];\n  };\n}\n\n/**\n * Get the min and max values from the dataset\n *\n * @param data\n */\nexport function range(data: DataSeries): Extent {\n  const [startX, startY] = data[0];\n  const min: Point = [startX, startY];\n  const max: Point = [startX, startY];\n  return data.reduce(\n    ({ min, max }, [x, y]) => ({\n      min: [Math.min(min[0], x), Math.min(min[1], y)],\n      max: [Math.max(max[0], x), Math.max(max[1], y)],\n    }),\n    { min, max },\n  );\n}\n\n/**\n * Generate drawing commands for an area graph\n * returns a string can can be passed directly to a path element's `d` attribute\n *\n * @param root0\n * @param root0.data\n * @param root0.min\n * @param root0.max\n * @param root0.t\n */\nexport function area({ data, min, max, t }: Graph): string {\n  if (data.length === 0) {\n    return \"\";\n  }\n\n  // important points for beginning and ending the path\n  const [startX, startY] = t(data[0]);\n  const [minX, minY] = t(min);\n  const [maxX] = t(max);\n\n  // keep track of previous slope/points\n  let m: number;\n  let p0: Point;\n  let p1: Point;\n\n  // iterate over data points, calculating command for each\n  const commands = data.reduce((acc, point, i) => {\n    p0 = data[i - 2];\n    p1 = data[i - 1];\n    if (i > 1) {\n      const m1 = slope(p0, p1, point);\n      const m0 = m === undefined ? slopeSingle(p0, p1, m1) : m;\n      const command = bezier(p0, p1, m0, m1, t);\n      m = m1;\n      return `${acc} ${command}`;\n    }\n    return acc;\n  }, `M ${minX},${minY} L ${minX},${startY} L ${startX},${startY}`);\n\n  // close the path\n  const last = data[data.length - 1];\n  const end = bezier(p1, last, m, slopeSingle(p1, last, m), t);\n  return `${commands} ${end} L ${maxX},${minY} Z`;\n}\n",":host {\n  @apply block;\n  block-size: 100%;\n}\n\n.svg {\n  fill: currentColor;\n  stroke: transparent;\n  @apply m-0 block h-full w-full p-0;\n\n  .graph-path--highlight {\n    fill: var(--calcite-color-brand);\n    @apply opacity-50;\n  }\n}\n\n@include base-component();\n","import { Component, Element, forceUpdate, h, Prop, VNode } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { createObserver } from \"../../utils/observers\";\nimport { ColorStop, DataSeries, Point } from \"./interfaces\";\nimport { area, range, translate } from \"./util\";\n\n@Component({\n  tag: \"calcite-graph\",\n  styleUrl: \"graph.scss\",\n  shadow: true,\n})\nexport class Graph {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Array of tuples describing a single data point ([x, y])\n   * These data points should be sorted by x-axis value.\n   */\n  @Prop() data: DataSeries = [];\n\n  /**\n   * Array of values describing a single color stop ([offset, color, opacity])\n   * These color stops should be sorted by offset value.\n   */\n  @Prop() colorStops: ColorStop[];\n\n  /** Start of highlight color if highlighting range. */\n  @Prop() highlightMin: number;\n\n  /** End of highlight color if highlighting range. */\n  @Prop() highlightMax: number;\n\n  /** Lowest point of the range. */\n  @Prop({ reflect: true }) min!: number;\n\n  /** Highest point of the range. */\n  @Prop({ reflect: true }) max!: number;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.resizeObserver?.observe(this.el);\n  }\n\n  disconnectedCallback(): void {\n    this.resizeObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const { data, colorStops, el, highlightMax, highlightMin, min, max } = this;\n    const id = this.graphId;\n    const { clientHeight: height, clientWidth: width } = el;\n\n    // if we have no data, return empty svg\n    if (!data || data.length === 0) {\n      return (\n        <svg\n          aria-hidden=\"true\"\n          class=\"svg\"\n          height={height}\n          preserveAspectRatio=\"none\"\n          viewBox={`0 0 ${width} ${height}`}\n          width={width}\n        />\n      );\n    }\n\n    const { min: rangeMin, max: rangeMax } = range(data);\n\n    let currentMin: Point = rangeMin;\n    let currentMax: Point = rangeMax;\n\n    if (min < rangeMin[0] || min > rangeMin[0]) {\n      currentMin = [min, 0];\n    }\n\n    if (max > rangeMax[0] || max < rangeMax[0]) {\n      currentMax = [max, rangeMax[1]];\n    }\n\n    const t = translate({ min: currentMin, max: currentMax, width, height });\n    const [hMinX] = t([highlightMin, currentMax[1]]);\n    const [hMaxX] = t([highlightMax, currentMax[1]]);\n    const areaPath = area({ data, min: rangeMin, max: rangeMax, t });\n    const fill = colorStops ? `url(#linear-gradient-${id})` : undefined;\n    return (\n      <svg\n        aria-hidden=\"true\"\n        class=\"svg\"\n        height={height}\n        preserveAspectRatio=\"none\"\n        viewBox={`0 0 ${width} ${height}`}\n        width={width}\n      >\n        {colorStops ? (\n          <defs>\n            <linearGradient id={`linear-gradient-${id}`} x1=\"0\" x2=\"1\" y1=\"0\" y2=\"0\">\n              {colorStops.map(({ offset, color, opacity }) => (\n                <stop offset={`${offset * 100}%`} stop-color={color} stop-opacity={opacity} />\n              ))}\n            </linearGradient>\n          </defs>\n        ) : null}\n\n        {highlightMin !== undefined ? (\n          [\n            <mask height=\"100%\" id={`${id}1`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n            M 0,0\n            L ${hMinX - 1},0\n            L ${hMinX - 1},${height}\n            L 0,${height}\n            Z\n          `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <mask height=\"100%\" id={`${id}2`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n            M ${hMinX + 1},0\n            L ${hMaxX - 1},0\n            L ${hMaxX - 1},${height}\n            L ${hMinX + 1}, ${height}\n            Z\n          `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <mask height=\"100%\" id={`${id}3`} width=\"100%\" x=\"0%\" y=\"0%\">\n              <path\n                d={`\n                M ${hMaxX + 1},0\n                L ${width},0\n                L ${width},${height}\n                L ${hMaxX + 1}, ${height}\n                Z\n              `}\n                fill=\"white\"\n              />\n            </mask>,\n\n            <path class=\"graph-path\" d={areaPath} fill={fill} mask={`url(#${id}1)`} />,\n            <path class=\"graph-path--highlight\" d={areaPath} fill={fill} mask={`url(#${id}2)`} />,\n            <path class=\"graph-path\" d={areaPath} fill={fill} mask={`url(#${id}3)`} />,\n          ]\n        ) : (\n          <path class=\"graph-path\" d={areaPath} fill={fill} />\n        )}\n      </svg>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteGraphElement;\n\n  private graphId = `calcite-graph-${guid()}`;\n\n  private resizeObserver = createObserver(\"resize\", () => forceUpdate(this));\n}\n","export const CSS = {\n  container: \"container\",\n  containerRange: \"container--range\",\n  graph: \"graph\",\n  handle: \"handle\",\n  handleExtension: \"handle-extension\",\n  handleLabel: \"handle__label\",\n  handleLabelMinValue: \"handle__label--minValue\",\n  handleLabelValue: \"handle__label--value\",\n  hyphen: \"hyphen\",\n  hyphenWrap: \"hyphen--wrap\",\n  static: \"static\",\n  thumb: \"thumb\",\n  thumbActive: \"thumb--active\",\n  thumbContainer: \"thumb-container\",\n  thumbMinValue: \"thumb--minValue\",\n  thumbPrecise: \"thumb--precise\",\n  thumbValue: \"thumb--value\",\n  tick: \"tick\",\n  tickActive: \"tick--active\",\n  tickLabel: \"tick__label\",\n  tickMax: \"tick__label--max\",\n  tickMin: \"tick__label--min\",\n  ticks: \"ticks\",\n  track: \"track\",\n  trackRange: \"track__range\",\n  transformed: \"transformed\",\n};\n\nexport const maxTickElementThreshold = 250;\n",".scale--s {\n  --calcite-slider-handle-size: theme(\"spacing[2.5]\");\n  --calcite-slider-handle-extension-height: 0.4rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--3);\n  .handle__label,\n  .tick__label {\n    @apply leading-3;\n  }\n}\n\n.scale--m {\n  --calcite-slider-handle-size: theme(\"spacing[3.5]\");\n  --calcite-slider-handle-extension-height: 0.5rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--2);\n  .handle__label,\n  .tick__label {\n    @apply leading-4;\n  }\n}\n\n.scale--l {\n  --calcite-slider-handle-size: 1rem;\n  --calcite-slider-handle-extension-height: 0.65rem;\n  --calcite-slider-container-font-size: var(--calcite-font-size--1);\n  .handle__label,\n  .tick__label {\n    @apply leading-4;\n  }\n}\n\n.handle__label,\n.tick__label {\n  @apply text-color-2 font-medium;\n  font-size: var(--calcite-slider-container-font-size);\n}\n\n:host {\n  @apply block;\n}\n\n.container {\n  @apply relative block break-normal;\n  padding-inline: calc(var(--calcite-slider-handle-size) * 0.5);\n  padding-block: calc(var(--calcite-slider-handle-size) * 0.5);\n  margin-block: calc(var(--calcite-slider-handle-size) * 0.5);\n  margin-inline: 0;\n  --calcite-slider-full-handle-height: calc(\n    var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height)\n  );\n  touch-action: none;\n  // disable browser swipe navigation to prevent interference with the slide thumb following a touch gesture\n  user-select: none;\n}\n\n@include disabled() {\n  .track__range,\n  .tick--active {\n    background-color: var(--calcite-color-text-3);\n  }\n}\n\n.scale--s {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.375rem;\n  }\n}\n.scale--m {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.5rem;\n  }\n}\n.scale--l {\n  .thumb:not(.thumb--precise) {\n    --calcite-slider-thumb-y-offset: -0.55rem;\n  }\n}\n\n:host([precise]:not([has-histogram])) {\n  .container .thumb--value {\n    --calcite-slider-thumb-y-offset: calc(var(--calcite-slider-full-handle-height) * -1);\n  }\n}\n\n.thumb-container {\n  @apply relative max-w-full;\n}\n\n.thumb {\n  --calcite-slider-thumb-x-offset: calc(var(--calcite-slider-handle-size) * 0.5);\n  @apply font-inherit\n    absolute\n    m-0\n    flex\n    cursor-pointer\n    flex-col\n    items-center\n    border-none\n    bg-transparent\n    p-0\n    outline-none;\n  transform: translate(var(--calcite-slider-thumb-x-offset), var(--calcite-slider-thumb-y-offset));\n\n  .handle__label {\n    &.static,\n    &.transformed {\n      @apply absolute\n        top-0\n        bottom-0\n        opacity-0;\n    }\n    &.hyphen::after {\n      content: \"\\2014\";\n      display: inline-block;\n      inline-size: 1em;\n    }\n    &.hyphen--wrap {\n      display: flex;\n    }\n  }\n\n  .handle {\n    @apply focus-base\n      bg-foreground-1\n      box-border\n      rounded-full;\n    block-size: var(--calcite-slider-handle-size);\n    inline-size: var(--calcite-slider-handle-size);\n    box-shadow: 0 0 0 2px var(--calcite-color-text-3) inset;\n    transition:\n      border var(--calcite-internal-animation-timing-medium) ease,\n      background-color var(--calcite-internal-animation-timing-medium) ease,\n      box-shadow var(--calcite-animation-timing) ease;\n  }\n\n  .handle-extension {\n    @apply w-0.5;\n    block-size: var(--calcite-slider-handle-extension-height);\n    background-color: var(--calcite-color-text-3);\n  }\n\n  &:hover {\n    .handle {\n      box-shadow: 0 0 0 3px var(--calcite-color-brand) inset;\n    }\n    .handle-extension {\n      @apply bg-brand;\n    }\n  }\n\n  &:focus {\n    .handle {\n      @apply focus-outset;\n    }\n    .handle-extension {\n      @apply bg-brand;\n    }\n  }\n\n  &.thumb--minValue {\n    transform: translate(calc(var(--calcite-slider-thumb-x-offset) * -1), var(--calcite-slider-thumb-y-offset));\n  }\n\n  &.thumb--precise {\n    --calcite-slider-thumb-y-offset: -0.125rem;\n  }\n}\n\n:host([label-handles]) {\n  .thumb {\n    --calcite-slider-thumb-x-offset: 50%;\n  }\n  &:host(:not([has-histogram])) {\n    .scale--s {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -1.4375rem;\n      }\n    }\n    .scale--m {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -1.875rem;\n      }\n    }\n    .scale--l {\n      .thumb:not(.thumb--precise) {\n        --calcite-slider-thumb-y-offset: -2rem;\n      }\n    }\n  }\n}\n\n:host([has-histogram][label-handles]),\n:host([label-handles]:not([has-histogram])) .thumb--minValue.thumb--precise {\n  .handle__label {\n    margin-block-start: 0.5em;\n  }\n}\n:host(:not([has-histogram]):not([precise])),\n:host([label-handles]:not([has-histogram])) .thumb--value {\n  .handle__label {\n    margin-block-end: 0.5em;\n  }\n}\n\n:host([label-handles][precise]) {\n  &:host(:not([has-histogram])) .scale--s .thumb--value {\n    --calcite-slider-thumb-y-offset: -2.075rem;\n  }\n  &:host(:not([has-histogram])) .scale--m .thumb--value {\n    --calcite-slider-thumb-y-offset: -2.75rem;\n  }\n  &:host(:not([has-histogram])) .scale--l .thumb--value {\n    --calcite-slider-thumb-y-offset: -3.0625rem;\n  }\n}\n\n.thumb:focus,\n.thumb--active {\n  .handle {\n    @apply bg-brand;\n    box-shadow: 0 0 8px 0 rgb(0 0 0 / 16%); // shadow 1 press\n  }\n}\n\n.thumb:hover.thumb--precise::after,\n.thumb:focus.thumb--precise::after,\n.thumb--active.thumb--precise::after {\n  @apply bg-brand;\n}\n\n.track {\n  @apply relative h-0.5 rounded-none;\n  background-color: var(--calcite-color-border-2);\n  transition: all var(--calcite-internal-animation-timing-medium) ease-in;\n}\n\n.track__range {\n  @apply bg-brand\n  absolute\n  top-0\n  h-0.5;\n}\n.container--range {\n  .track__range {\n    &:hover {\n      cursor: ew-resize;\n    }\n    &::after {\n      @apply absolute w-full;\n      content: \"\";\n      inset-block-start: calc(calc(var(--calcite-slider-full-handle-height) * 0.5) * -1);\n      block-size: calc(var(--calcite-slider-handle-size) + var(--calcite-slider-handle-extension-height));\n    }\n  }\n}\n\n@media (forced-colors: active) {\n  .thumb {\n    outline-width: 0;\n    outline-offset: 0;\n  }\n  .handle {\n    @apply outline-none;\n  }\n  .thumb:focus .handle,\n  .thumb .handle-extension,\n  .thumb:hover .handle-extension,\n  .thumb:focus .handle-extension,\n  .thumb:active .handle-extension {\n    background-color: canvasText;\n  }\n  .track {\n    background-color: canvasText;\n  }\n  .track__range {\n    background-color: highlight;\n  }\n}\n\n.tick {\n  @apply absolute\n    h-1\n    w-0.5\n    border\n    border-solid;\n  background-color: var(--calcite-color-border-input);\n  border-color: var(--calcite-color-foreground-1);\n  inset-block-start: -2px;\n  pointer-events: none;\n  margin-inline-start: calc(-1 * theme(\"margin[0.5]\"));\n}\n\n.tick--active {\n  @apply bg-brand;\n}\n\n.tick__label {\n  @apply pointer-events-none\n    mt-3.5\n    flex\n    justify-center;\n}\n\n.tick__label--min {\n  transition: opacity var(--calcite-animation-timing);\n}\n\n.tick__label--max {\n  transition: opacity var(--calcite-internal-animation-timing-fast);\n}\n\n:host([has-histogram][label-handles]),\n:host([has-histogram][precise]) {\n  .tick__label--min,\n  .tick__label--max {\n    @apply text-color-3 font-normal;\n  }\n}\n\n.graph {\n  color: var(--calcite-color-foreground-3);\n  block-size: 48px;\n}\n\n// Ensure we have enough space on variants with text elements to prevent overlap\n:host([label-ticks][ticks]) {\n  .container {\n    // match tick__label top margin + font-size\n    padding-block-end: calc(theme(\"margin[3.5]\") + var(--calcite-slider-container-font-size));\n  }\n}\n:host([has-histogram]) {\n  &:host([precise][label-handles]) {\n    .container {\n      padding-block-end: calc(var(--calcite-slider-full-handle-height) + 1em);\n    }\n  }\n  &:host([label-handles]:not([precise])) {\n    .container {\n      padding-block-end: calc(calc(var(--calcite-slider-handle-size) * 0.5) + 1em);\n    }\n  }\n  &:host([precise]:not([label-handles])) {\n    .container {\n      padding-block-end: var(--calcite-slider-full-handle-height);\n    }\n  }\n}\n:host(:not([has-histogram])) {\n  &:host([precise]:not([label-handles])) {\n    .container {\n      padding-block-start: var(--calcite-slider-full-handle-height);\n    }\n    .container--range {\n      padding-block-end: var(--calcite-slider-full-handle-height);\n    }\n  }\n  &:host([label-handles]:not([precise])) {\n    .container {\n      padding-block-start: calc(var(--calcite-slider-full-handle-height) + 4px);\n    }\n  }\n  &:host([label-handles][precise]) {\n    .container {\n      padding-block-start: calc(\n        var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px\n      );\n    }\n    .container--range {\n      padding-block-end: calc(\n        var(--calcite-slider-full-handle-height) + var(--calcite-slider-container-font-size) + 4px\n      );\n    }\n  }\n}\n\n@include hidden-form-input();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { intersects, isPrimaryPointerButton } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { clamp, decimalPlaces } from \"../../utils/math\";\nimport { ColorStop, DataSeries } from \"../graph/interfaces\";\nimport { Scale } from \"../interfaces\";\nimport { BigDecimal } from \"../../utils/number\";\nimport { CSS, maxTickElementThreshold } from \"./resources\";\nimport { ActiveSliderProperty, SetValueProperty, SideOffset, ThumbType } from \"./interfaces\";\n\nfunction isRange(value: number | number[]): value is number[] {\n  return Array.isArray(value);\n}\n\n@Component({\n  tag: \"calcite-slider\",\n  styleUrl: \"slider.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class Slider\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Used to configure where the fill is placed along the slider track in relation to the value handle.\n   *\n   * Range mode will always display the fill between the min and max handles.\n   */\n  @Prop({ reflect: true }) fillPlacement: \"start\" | \"none\" | \"end\" = \"start\";\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /** When `true`, indicates a histogram is present. */\n  @Prop({ reflect: true, mutable: true }) hasHistogram = false;\n\n  /**\n   * A list of the histogram's x,y coordinates within the component's `min` and `max`. Displays above the component's track.\n   *\n   * @see [DataSeries](https://github.com/Esri/calcite-design-system/blob/dev/src/components/graph/interfaces.ts#L5)\n   */\n  @Prop() histogram: DataSeries;\n\n  @Watch(\"histogram\")\n  histogramWatcher(newHistogram: DataSeries): void {\n    this.hasHistogram = !!newHistogram;\n  }\n\n  /**\n   * A set of single color stops for a histogram, sorted by offset ascending.\n   */\n  @Prop() histogramStops: ColorStop[];\n\n  /** When `true`, displays label handles with their numeric value. */\n  @Prop({ reflect: true }) labelHandles = false;\n\n  /**\n   * When specified, allows users to customize handle labels.\n   */\n  @Prop() labelFormatter: (\n    value: number,\n    type: \"value\" | \"min\" | \"max\" | \"tick\",\n    defaultFormatter: (value: number) => string,\n  ) => string | undefined;\n\n  /** When `true` and `ticks` is specified, displays label tick marks with their numeric value. */\n  @Prop({ reflect: true }) labelTicks = false;\n\n  /** The component's maximum selectable value. */\n  @Prop({ reflect: true }) max = 100;\n\n  /** For multiple selections, the accessible name for the second handle, such as `\"Temperature, upper bound\"`. */\n  @Prop() maxLabel: string;\n\n  /** For multiple selections, the component's upper value. */\n  @Prop({ mutable: true }) maxValue: number;\n\n  /** The component's minimum selectable value. */\n  @Prop({ reflect: true }) min = 0;\n\n  /** Accessible name for first (or only) handle, such as `\"Temperature, lower bound\"`. */\n  @Prop() minLabel: string;\n\n  /** For multiple selections, the component's lower value. */\n  @Prop({ mutable: true }) minValue: number;\n\n  /**\n   * When `true`, the slider will display values from high to low.\n   *\n   * Note that this value will be ignored if the slider has an associated histogram.\n   */\n  @Prop({ reflect: true }) mirrored = false;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /** Specifies the interval to move with the page up, or page down keys. */\n  @Prop({ reflect: true }) pageStep: number;\n\n  /** When `true`, sets a finer point for handles. */\n  @Prop({ reflect: true }) precise = false;\n\n  /**\n   * When `true`, the component must have a value in order for the form to submit.\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /** When `true`, enables snap selection in coordination with `step` via a mouse. */\n  @Prop({ reflect: true }) snap = false;\n\n  /** Specifies the interval to move with the up, or down keys. */\n  @Prop({ reflect: true }) step = 1;\n\n  /** Displays tick marks on the number line at a specified interval. */\n  @Prop({ reflect: true }) ticks: number;\n\n  @Watch(\"ticks\")\n  ticksWatcher(): void {\n    this.tickValues = this.generateTickValues();\n  }\n\n  /** The component's value. */\n  @Prop({ reflect: true, mutable: true }) value: null | number | number[] = 0;\n\n  @Watch(\"value\")\n  valueHandler(): void {\n    this.setMinMaxFromValue();\n  }\n\n  @Watch(\"minValue\")\n  @Watch(\"maxValue\")\n  minMaxValueHandler(): void {\n    this.setValueFromMinMax();\n  }\n\n  /**\n   *  Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    this.setMinMaxFromValue();\n    this.setValueFromMinMax();\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    this.removeDragListeners();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n    if (!isRange(this.value)) {\n      this.value = this.snap ? this.getClosestStep(this.value) : this.clamp(this.value);\n    }\n    this.ticksWatcher();\n    this.histogramWatcher(this.histogram);\n    afterConnectDefaultValueSet(this, this.value);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    if (this.labelHandles) {\n      this.adjustHostObscuredHandleLabel(\"value\");\n      if (isRange(this.value)) {\n        this.adjustHostObscuredHandleLabel(\"minValue\");\n        if (!(this.precise && !this.hasHistogram)) {\n          this.hyphenateCollidingRangeHandleLabels();\n        }\n      }\n    }\n    this.hideObscuredBoundingTickLabels();\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const id = this.el.id || this.guid;\n    const value = isRange(this.value) ? this.maxValue : this.value;\n    const min = this.minValue || this.min;\n    const useMinValue = this.shouldUseMinValue();\n    const minInterval = this.getUnitInterval(useMinValue ? this.minValue : min) * 100;\n    const maxInterval = this.getUnitInterval(value) * 100;\n    const mirror = this.shouldMirror();\n    const valueIsRange = isRange(this.value);\n\n    const thumbTypes = this.buildThumbType(\"max\");\n    const thumb = this.renderThumb({\n      type: thumbTypes,\n      thumbPlacement: thumbTypes.includes(\"histogram\") ? \"below\" : \"above\",\n      maxInterval,\n      minInterval,\n      mirror,\n    });\n\n    const minThumbTypes = this.buildThumbType(\"min\");\n    const minThumb =\n      valueIsRange &&\n      this.renderThumb({\n        type: minThumbTypes,\n        thumbPlacement:\n          minThumbTypes.includes(\"histogram\") || minThumbTypes.includes(\"precise\")\n            ? \"below\"\n            : \"above\",\n        maxInterval,\n        minInterval,\n        mirror,\n      });\n\n    const fillPlacement = valueIsRange ? \"start\" : this.fillPlacement;\n    const trackRangePlacementStyles =\n      fillPlacement === \"none\"\n        ? {\n            left: `unset`,\n            right: `unset`,\n          }\n        : fillPlacement === \"end\"\n          ? {\n              left: `${mirror ? minInterval : maxInterval}%`,\n              right: `${mirror ? maxInterval : minInterval}%`,\n            }\n          : /* default */\n            {\n              left: `${mirror ? 100 - maxInterval : minInterval}%`,\n              right: `${mirror ? minInterval : 100 - maxInterval}%`,\n            };\n\n    return (\n      <Host id={id} onKeyDown={this.handleKeyDown} onTouchStart={this.handleTouchStart}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-label={getLabelText(this)}\n            class={{\n              [CSS.container]: true,\n              [CSS.containerRange]: valueIsRange,\n              [`scale--${this.scale}`]: true,\n            }}\n          >\n            {this.renderGraph()}\n            <div class={CSS.track} ref={this.storeTrackRef}>\n              <div\n                class={CSS.trackRange}\n                onPointerDown={this.onTrackPointerDown}\n                style={trackRangePlacementStyles}\n              />\n              <div class={CSS.ticks}>\n                {this.tickValues.map((tick) => {\n                  const tickOffset = `${this.getUnitInterval(tick) * 100}%`;\n\n                  let activeTicks: boolean = false;\n\n                  if (fillPlacement === \"start\" || fillPlacement === \"end\") {\n                    if (useMinValue) {\n                      activeTicks = tick >= this.minValue && tick <= this.maxValue;\n                    } else {\n                      const rangeStart = fillPlacement === \"start\" ? min : value;\n                      const rangeEnd = fillPlacement === \"start\" ? value : this.max;\n                      activeTicks = tick >= rangeStart && tick <= rangeEnd;\n                    }\n                  }\n\n                  return (\n                    <span\n                      class={{\n                        [CSS.tick]: true,\n                        [CSS.tickActive]: activeTicks,\n                      }}\n                      style={{\n                        left: mirror ? \"\" : tickOffset,\n                        right: mirror ? tickOffset : \"\",\n                      }}\n                    >\n                      {this.renderTickLabel(tick)}\n                    </span>\n                  );\n                })}\n              </div>\n            </div>\n            <div class={CSS.thumbContainer}>\n              {minThumb}\n              {thumb}\n              <HiddenFormInputSlot component={this} />\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  private renderThumb({\n    type,\n    mirror,\n    thumbPlacement,\n    minInterval,\n    maxInterval,\n  }: {\n    maxInterval: number;\n    minInterval: number;\n    mirror: boolean;\n    thumbPlacement: \"above\" | \"below\";\n    type: string;\n  }) {\n    const isLabeled = type.includes(\"labeled\");\n    const isPrecise = type.includes(\"precise\");\n    const isMinThumb = type.includes(\"min\");\n\n    const valueIsRange = isRange(this.value);\n    const value = isMinThumb\n      ? this.minValue\n      : valueIsRange\n        ? this.maxValue\n        : (this.value as number);\n    const valueProp = isMinThumb ? \"minValue\" : valueIsRange ? \"maxValue\" : \"value\";\n    const ariaLabel = isMinThumb ? this.minLabel : valueIsRange ? this.maxLabel : this.minLabel;\n    const ariaValuenow = isMinThumb ? this.minValue : value;\n    const displayedValue =\n      valueProp === \"minValue\"\n        ? this.internalLabelFormatter(this.minValue, \"min\")\n        : valueProp === \"maxValue\"\n          ? this.internalLabelFormatter(this.maxValue, \"max\")\n          : this.internalLabelFormatter(value, \"value\");\n    const thumbStyle: SideOffset = isMinThumb\n      ? { left: `${mirror ? 100 - minInterval : minInterval}%` }\n      : { right: `${mirror ? maxInterval : 100 - maxInterval}%` };\n    const thumbLabelClasses = `${CSS.handleLabel} ${\n      isMinThumb ? CSS.handleLabelMinValue : CSS.handleLabelValue\n    }`;\n\n    const labels = isLabeled\n      ? [\n          <span aria-hidden=\"true\" class={thumbLabelClasses}>\n            {displayedValue}\n          </span>,\n          <span aria-hidden=\"true\" class={`${thumbLabelClasses} ${CSS.static}`}>\n            {displayedValue}\n          </span>,\n          <span aria-hidden=\"true\" class={`${thumbLabelClasses} ${CSS.transformed}`}>\n            {displayedValue}\n          </span>,\n        ]\n      : [];\n\n    const thumbContent: VNode[] = [\n      ...labels,\n      <div class={CSS.handle} />,\n      isPrecise && <div class={CSS.handleExtension} />,\n    ];\n\n    if (thumbPlacement === \"below\") {\n      thumbContent.reverse();\n    }\n\n    return (\n      <div\n        aria-label={ariaLabel}\n        aria-orientation=\"horizontal\"\n        aria-valuemax={this.max}\n        aria-valuemin={this.min}\n        aria-valuenow={ariaValuenow}\n        class={{\n          [CSS.thumb]: true,\n          [CSS.thumbValue]: !isMinThumb,\n          [CSS.thumbActive]: this.lastDragProp !== \"minMaxValue\" && this.dragProp === valueProp,\n          [CSS.thumbPrecise]: isPrecise,\n          [CSS.thumbMinValue]: isMinThumb,\n        }}\n        data-value-prop={valueProp}\n        key={type}\n        onBlur={this.onThumbBlur}\n        onFocus={this.onThumbFocus}\n        onPointerDown={this.onThumbPointerDown}\n        ref={this.storeThumbRef}\n        role=\"slider\"\n        style={thumbStyle}\n        tabIndex={0}\n      >\n        {thumbContent}\n      </div>\n    );\n  }\n\n  private renderGraph(): VNode {\n    return this.histogram ? (\n      <calcite-graph\n        class={CSS.graph}\n        colorStops={this.histogramStops}\n        data={this.histogram}\n        highlightMax={isRange(this.value) ? this.maxValue : this.value}\n        highlightMin={isRange(this.value) ? this.minValue : this.min}\n        max={this.max}\n        min={this.min}\n      />\n    ) : null;\n  }\n\n  private renderTickLabel(tick: number): VNode {\n    const { hasHistogram, labelHandles, labelTicks, max, min, precise, value } = this;\n    const valueIsRange = isRange(value);\n    const isMinTickLabel = tick === min;\n    const isMaxTickLabel = tick === max;\n    const isAtEdge = isMinTickLabel || isMaxTickLabel;\n\n    const shouldDisplayLabel =\n      labelTicks &&\n      ((!hasHistogram && (isAtEdge || !precise || !valueIsRange)) ||\n        (hasHistogram && (isAtEdge || (!precise && !labelHandles))));\n\n    return shouldDisplayLabel ? (\n      <span\n        class={{\n          [CSS.tickLabel]: true,\n          [CSS.tickMin]: isMinTickLabel,\n          [CSS.tickMax]: isMaxTickLabel,\n        }}\n      >\n        {this.internalLabelFormatter(tick, \"tick\")}\n      </span>\n    ) : null;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  private handleKeyDown = (event: KeyboardEvent): void => {\n    const mirror = this.shouldMirror();\n    const { activeProp, max, min, pageStep, step } = this;\n    const value = this[activeProp];\n    const { key } = event;\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n      return;\n    }\n\n    let adjustment: number;\n\n    if (key === \"ArrowUp\" || key === \"ArrowRight\") {\n      const directionFactor = mirror && key === \"ArrowRight\" ? -1 : 1;\n      adjustment = value + step * directionFactor;\n    } else if (key === \"ArrowDown\" || key === \"ArrowLeft\") {\n      const directionFactor = mirror && key === \"ArrowLeft\" ? -1 : 1;\n      adjustment = value - step * directionFactor;\n    } else if (key === \"PageUp\") {\n      if (pageStep) {\n        adjustment = value + pageStep;\n      }\n    } else if (key === \"PageDown\") {\n      if (pageStep) {\n        adjustment = value - pageStep;\n      }\n    } else if (key === \"Home\") {\n      adjustment = min;\n    } else if (key === \"End\") {\n      adjustment = max;\n    }\n\n    if (isNaN(adjustment)) {\n      return;\n    }\n\n    event.preventDefault();\n    const fixedDecimalAdjustment = Number(adjustment.toFixed(decimalPlaces(step)));\n    this.setValue({\n      [activeProp as SetValueProperty]: this.clamp(fixedDecimalAdjustment, activeProp),\n    });\n  };\n\n  @Listen(\"pointerdown\")\n  pointerDownHandler(event: PointerEvent): void {\n    if (this.disabled || !isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const x = event.clientX || event.pageX;\n    const position = this.mapToRange(x);\n    let prop: ActiveSliderProperty = \"value\";\n    if (isRange(this.value)) {\n      const inRange = position >= this.minValue && position <= this.maxValue;\n      if (inRange && this.lastDragProp === \"minMaxValue\") {\n        prop = \"minMaxValue\";\n      } else {\n        const closerToMax = Math.abs(this.maxValue - position) < Math.abs(this.minValue - position);\n        prop = closerToMax || position >= this.maxValue ? \"maxValue\" : \"minValue\";\n      }\n    }\n    this.lastDragPropValue = this[prop];\n    this.dragStart(prop);\n    const isThumbActive = this.el.shadowRoot.querySelector(`.${CSS.thumb}:active`);\n    if (!isThumbActive) {\n      this.setValue({ [prop as SetValueProperty]: this.clamp(position, prop) });\n    }\n    this.focusActiveHandle(x);\n  }\n\n  handleTouchStart(event: TouchEvent): void {\n    // needed to prevent extra click at the end of a handle drag\n    event.preventDefault();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires on all updates to the component.\n   *\n   * Note: Fires frequently during drag. To perform\n   * expensive operations consider using a debounce or throttle to avoid\n   * locking up the main thread.\n   */\n  @Event({ cancelable: false }) calciteSliderInput: EventEmitter<void>;\n\n  /**\n   * Fires when the thumb is released on the component.\n   *\n   * Note: To constantly listen to the drag event,\n   * use `calciteSliderInput` instead.\n   */\n  @Event({ cancelable: false }) calciteSliderChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    const handle = this.minHandle ? this.minHandle : this.maxHandle;\n    handle?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSliderElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Slider[\"value\"];\n\n  private activeProp: ActiveSliderProperty = \"value\";\n\n  private guid = `calcite-slider-${guid()}`;\n\n  private dragProp: ActiveSliderProperty;\n\n  private lastDragProp: ActiveSliderProperty;\n\n  private lastDragPropValue: number;\n\n  private minHandle: HTMLDivElement;\n\n  private maxHandle: HTMLDivElement;\n\n  private trackEl: HTMLDivElement;\n\n  @State() effectiveLocale = \"\";\n\n  @State() private minMaxValueRange: number = null;\n\n  @State() private minValueDragRange: number = null;\n\n  @State() private maxValueDragRange: number = null;\n\n  @State() private tickValues: number[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private buildThumbType(type: \"min\" | \"max\"): ThumbType {\n    const thumbTypeParts: string[] = [type];\n\n    if (this.labelHandles) {\n      thumbTypeParts.push(\"labeled\");\n    }\n\n    if (this.precise) {\n      thumbTypeParts.push(\"precise\");\n    }\n\n    if (this.hasHistogram) {\n      thumbTypeParts.push(\"histogram\");\n    }\n\n    return thumbTypeParts.join(\"-\") as ThumbType;\n  }\n\n  setValueFromMinMax(): void {\n    const { minValue, maxValue } = this;\n\n    if (typeof minValue === \"number\" && typeof maxValue === \"number\") {\n      this.value = [minValue, maxValue];\n    }\n  }\n\n  setMinMaxFromValue(): void {\n    const { value } = this;\n\n    if (isRange(value)) {\n      this.minValue = value[0];\n      this.maxValue = value[1];\n    }\n  }\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private shouldMirror(): boolean {\n    return this.mirrored && !this.hasHistogram;\n  }\n\n  private shouldUseMinValue(): boolean {\n    if (!isRange(this.value)) {\n      return false;\n    }\n    return (\n      (this.hasHistogram && this.maxValue === 0) || (!this.hasHistogram && this.minValue === 0)\n    );\n  }\n\n  private getTickDensity(): number {\n    const density = (this.max - this.min) / this.ticks / maxTickElementThreshold;\n\n    return density < 1 ? 1 : density;\n  }\n\n  private generateTickValues(): number[] {\n    const tickInterval = this.ticks ?? 0;\n\n    if (tickInterval <= 0) {\n      return [];\n    }\n\n    const ticks: number[] = [this.min];\n    const density = this.getTickDensity();\n    const tickOffset = tickInterval * density;\n    let current = this.min;\n\n    while (current < this.max) {\n      current += tickOffset;\n      ticks.push(Math.min(current, this.max));\n    }\n\n    if (!ticks.includes(this.max)) {\n      ticks.push(this.max);\n    }\n\n    return ticks;\n  }\n\n  private onThumbBlur = () => {\n    this.activeProp = null;\n  };\n\n  private onThumbFocus = (event: FocusEvent) => {\n    const thumb = event.currentTarget as HTMLElement;\n    this.activeProp = thumb.getAttribute(\"data-value-prop\") as ActiveSliderProperty;\n  };\n\n  private onThumbPointerDown = (event: PointerEvent) => {\n    const thumb = event.currentTarget as HTMLElement;\n    this.pointerDownDragStart(event, thumb.getAttribute(\"data-value-prop\") as ActiveSliderProperty);\n  };\n\n  private onTrackPointerDown = (event: PointerEvent) => {\n    this.pointerDownDragStart(event, \"minMaxValue\");\n  };\n\n  private pointerDownDragStart(event: PointerEvent, prop: ActiveSliderProperty): void {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    this.dragStart(prop);\n  }\n\n  private dragStart(prop: ActiveSliderProperty): void {\n    this.dragProp = prop;\n    this.lastDragProp = this.dragProp;\n    this.activeProp = prop;\n    window.addEventListener(\"pointermove\", this.dragUpdate);\n    window.addEventListener(\"pointerup\", this.pointerUpDragEnd);\n    window.addEventListener(\"pointercancel\", this.dragEnd);\n  }\n\n  private focusActiveHandle(valueX: number): void {\n    if (this.dragProp === \"minValue\") {\n      this.minHandle.focus();\n    } else if (this.dragProp === \"maxValue\" || this.dragProp === \"value\") {\n      this.maxHandle.focus();\n    } else if (this.dragProp === \"minMaxValue\") {\n      this.getClosestHandle(valueX).focus();\n    }\n  }\n\n  private dragUpdate = (event: PointerEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    event.preventDefault();\n    if (this.dragProp) {\n      const value = this.mapToRange(event.clientX || event.pageX);\n      if (isRange(this.value) && this.dragProp === \"minMaxValue\") {\n        if (this.minValueDragRange && this.maxValueDragRange && this.minMaxValueRange) {\n          const newMinValue = value - this.minValueDragRange;\n          const newMaxValue = value + this.maxValueDragRange;\n          if (\n            newMaxValue <= this.max &&\n            newMinValue >= this.min &&\n            newMaxValue - newMinValue === this.minMaxValueRange\n          ) {\n            this.setValue({\n              minValue: this.clamp(newMinValue, \"minValue\"),\n              maxValue: this.clamp(newMaxValue, \"maxValue\"),\n            });\n          }\n        } else {\n          this.minValueDragRange = value - this.minValue;\n          this.maxValueDragRange = this.maxValue - value;\n          this.minMaxValueRange = this.maxValue - this.minValue;\n        }\n      } else {\n        this.setValue({ [this.dragProp as SetValueProperty]: this.clamp(value, this.dragProp) });\n      }\n    }\n  };\n\n  private emitInput(): void {\n    this.calciteSliderInput.emit();\n  }\n\n  private emitChange(): void {\n    this.calciteSliderChange.emit();\n  }\n\n  private pointerUpDragEnd = (event: PointerEvent): void => {\n    if (this.disabled || !isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    this.dragEnd(event);\n  };\n\n  private dragEnd = (event: PointerEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.removeDragListeners();\n    this.focusActiveHandle(event.clientX);\n    if (this.lastDragPropValue != this[this.dragProp]) {\n      this.emitChange();\n    }\n    this.dragProp = null;\n    this.lastDragPropValue = null;\n    this.minValueDragRange = null;\n    this.maxValueDragRange = null;\n    this.minMaxValueRange = null;\n  };\n\n  private removeDragListeners() {\n    window.removeEventListener(\"pointermove\", this.dragUpdate);\n    window.removeEventListener(\"pointerup\", this.pointerUpDragEnd);\n    window.removeEventListener(\"pointercancel\", this.dragEnd);\n  }\n\n  /**\n   * Set prop value(s) if changed at the component level\n   *\n   * @param {object} values - a set of key/value pairs delineating what properties in the component to update\n   */\n  private setValue(\n    values: Partial<{\n      [Property in keyof Pick<Slider, \"maxValue\" | \"minValue\" | \"value\">]: number;\n    }>,\n  ): void {\n    let valueChanged: boolean;\n\n    Object.keys(values).forEach((propName) => {\n      const newValue = values[propName];\n\n      if (!valueChanged) {\n        const oldValue = this[propName];\n        valueChanged = oldValue !== newValue;\n      }\n\n      this[propName] = newValue;\n    });\n\n    if (!valueChanged) {\n      return;\n    }\n\n    const dragging = this.dragProp;\n    if (!dragging) {\n      this.emitChange();\n    }\n    this.emitInput();\n  }\n\n  private storeTrackRef = (node: HTMLDivElement): void => {\n    this.trackEl = node;\n  };\n\n  private storeThumbRef = (el: HTMLDivElement): void => {\n    if (!el) {\n      return;\n    }\n\n    const valueProp = el.getAttribute(\"data-value-prop\") as ActiveSliderProperty;\n    valueProp === \"minValue\" ? (this.minHandle = el) : (this.maxHandle = el);\n  };\n\n  /**\n   * If number is outside range, constrain to min or max\n   *\n   * @param value\n   * @param prop\n   * @internal\n   */\n  private clamp(value: number, prop?: ActiveSliderProperty): number {\n    value = clamp(value, this.min, this.max);\n\n    // ensure that maxValue and minValue don't swap positions\n    if (prop === \"maxValue\") {\n      value = Math.max(value, this.minValue);\n    }\n    if (prop === \"minValue\") {\n      value = Math.min(value, this.maxValue);\n    }\n\n    return value;\n  }\n\n  /**\n   * Translate a pixel position to value along the range\n   *\n   * @param x\n   * @internal\n   */\n  private mapToRange(x: number): number {\n    const range = this.max - this.min;\n    const { left, width } = this.trackEl.getBoundingClientRect();\n    const percent = (x - left) / width;\n    const mirror = this.shouldMirror();\n    const clampedValue = this.clamp(this.min + range * (mirror ? 1 - percent : percent));\n    const value = Number(clampedValue.toFixed(decimalPlaces(this.step)));\n\n    return !(this.snap && this.step) ? value : this.getClosestStep(value);\n  }\n\n  /**\n   * Get closest allowed value along stepped values\n   *\n   * @param value\n   * @internal\n   */\n  private getClosestStep(value: number): number {\n    const { max, min, step } = this;\n\n    // prevents floating point precision issues\n    const bigDecimalString = new BigDecimal(`${Math.floor((value - min) / step)}`)\n      .multiply(`${step}`)\n      .add(`${min}`)\n      .toString();\n\n    let snappedValue = this.clamp(Number(bigDecimalString));\n\n    if (snappedValue > max) {\n      snappedValue -= step;\n    }\n\n    return snappedValue;\n  }\n\n  private getClosestHandle(valueX: number): HTMLDivElement {\n    return this.getDistanceX(this.maxHandle, valueX) > this.getDistanceX(this.minHandle, valueX)\n      ? this.minHandle\n      : this.maxHandle;\n  }\n\n  private getDistanceX(el: HTMLDivElement, valueX: number): number {\n    return Math.abs(el.getBoundingClientRect().left - valueX);\n  }\n\n  private getFontSizeForElement(element: HTMLElement): number {\n    return Number(window.getComputedStyle(element).getPropertyValue(\"font-size\").match(/\\d+/)[0]);\n  }\n\n  /**\n   * Get position of value along range as fractional value\n   *\n   * @param num\n   * @return {number} number in the unit interval [0,1]\n   * @internal\n   */\n  private getUnitInterval(num: number): number {\n    num = this.clamp(num);\n    const range = this.max - this.min;\n    return (num - this.min) / range;\n  }\n\n  private adjustHostObscuredHandleLabel(name: \"value\" | \"minValue\"): void {\n    const label: HTMLSpanElement = this.el.shadowRoot.querySelector(`.handle__label--${name}`);\n    const labelStatic: HTMLSpanElement = this.el.shadowRoot.querySelector(\n      `.handle__label--${name}.static`,\n    );\n    const labelTransformed: HTMLSpanElement = this.el.shadowRoot.querySelector(\n      `.handle__label--${name}.transformed`,\n    );\n    const labelStaticBounds = labelStatic.getBoundingClientRect();\n    const labelStaticOffset = this.getHostOffset(labelStaticBounds.left, labelStaticBounds.right);\n    label.style.transform = `translateX(${labelStaticOffset}px)`;\n    labelTransformed.style.transform = `translateX(${labelStaticOffset}px)`;\n  }\n\n  private hyphenateCollidingRangeHandleLabels(): void {\n    const { shadowRoot } = this.el;\n\n    const mirror = this.shouldMirror();\n    const leftModifier = mirror ? \"value\" : \"minValue\";\n    const rightModifier = mirror ? \"minValue\" : \"value\";\n\n    const leftValueLabel: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}`,\n    );\n    const leftValueLabelStatic: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}.static`,\n    );\n    const leftValueLabelTransformed: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${leftModifier}.transformed`,\n    );\n    const leftValueLabelStaticHostOffset = this.getHostOffset(\n      leftValueLabelStatic.getBoundingClientRect().left,\n      leftValueLabelStatic.getBoundingClientRect().right,\n    );\n\n    const rightValueLabel: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}`,\n    );\n    const rightValueLabelStatic: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}.static`,\n    );\n    const rightValueLabelTransformed: HTMLSpanElement = shadowRoot.querySelector(\n      `.handle__label--${rightModifier}.transformed`,\n    );\n    const rightValueLabelStaticHostOffset = this.getHostOffset(\n      rightValueLabelStatic.getBoundingClientRect().left,\n      rightValueLabelStatic.getBoundingClientRect().right,\n    );\n\n    const labelFontSize = this.getFontSizeForElement(leftValueLabel);\n    const labelTransformedOverlap = this.getRangeLabelOverlap(\n      leftValueLabelTransformed,\n      rightValueLabelTransformed,\n    );\n\n    const hyphenLabel = leftValueLabel;\n    const labelOffset = labelFontSize / 2;\n\n    if (labelTransformedOverlap > 0) {\n      hyphenLabel.classList.add(CSS.hyphen, CSS.hyphenWrap);\n      if (rightValueLabelStaticHostOffset === 0 && leftValueLabelStaticHostOffset === 0) {\n        // Neither handle overlaps the host boundary\n        let leftValueLabelTranslate = labelTransformedOverlap / 2 - labelOffset;\n        leftValueLabelTranslate =\n          Math.sign(leftValueLabelTranslate) === -1\n            ? Math.abs(leftValueLabelTranslate)\n            : -leftValueLabelTranslate;\n\n        const leftValueLabelTransformedHostOffset = this.getHostOffset(\n          leftValueLabelTransformed.getBoundingClientRect().left +\n            leftValueLabelTranslate -\n            labelOffset,\n          leftValueLabelTransformed.getBoundingClientRect().right +\n            leftValueLabelTranslate -\n            labelOffset,\n        );\n\n        let rightValueLabelTranslate = labelTransformedOverlap / 2;\n        const rightValueLabelTransformedHostOffset = this.getHostOffset(\n          rightValueLabelTransformed.getBoundingClientRect().left + rightValueLabelTranslate,\n          rightValueLabelTransformed.getBoundingClientRect().right + rightValueLabelTranslate,\n        );\n\n        if (leftValueLabelTransformedHostOffset !== 0) {\n          leftValueLabelTranslate += leftValueLabelTransformedHostOffset;\n          rightValueLabelTranslate += leftValueLabelTransformedHostOffset;\n        }\n\n        if (rightValueLabelTransformedHostOffset !== 0) {\n          leftValueLabelTranslate += rightValueLabelTransformedHostOffset;\n          rightValueLabelTranslate += rightValueLabelTransformedHostOffset;\n        }\n\n        leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;\n        leftValueLabelTransformed.style.transform = `translateX(${\n          leftValueLabelTranslate - labelOffset\n        }px)`;\n        rightValueLabel.style.transform = `translateX(${rightValueLabelTranslate}px)`;\n        rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelTranslate}px)`;\n      } else if (leftValueLabelStaticHostOffset > 0 || rightValueLabelStaticHostOffset > 0) {\n        // labels overlap host boundary on the left side\n        leftValueLabel.style.transform = `translateX(${\n          leftValueLabelStaticHostOffset + labelOffset\n        }px)`;\n        rightValueLabel.style.transform = `translateX(${\n          labelTransformedOverlap + rightValueLabelStaticHostOffset\n        }px)`;\n        rightValueLabelTransformed.style.transform = `translateX(${\n          labelTransformedOverlap + rightValueLabelStaticHostOffset\n        }px)`;\n      } else if (leftValueLabelStaticHostOffset < 0 || rightValueLabelStaticHostOffset < 0) {\n        // labels overlap host boundary on the right side\n        let leftValueLabelTranslate =\n          Math.abs(leftValueLabelStaticHostOffset) + labelTransformedOverlap - labelOffset;\n        leftValueLabelTranslate =\n          Math.sign(leftValueLabelTranslate) === -1\n            ? Math.abs(leftValueLabelTranslate)\n            : -leftValueLabelTranslate;\n        leftValueLabel.style.transform = `translateX(${leftValueLabelTranslate}px)`;\n        leftValueLabelTransformed.style.transform = `translateX(${\n          leftValueLabelTranslate - labelOffset\n        }px)`;\n      }\n    } else {\n      hyphenLabel.classList.remove(CSS.hyphen, CSS.hyphenWrap);\n      leftValueLabel.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;\n      leftValueLabelTransformed.style.transform = `translateX(${leftValueLabelStaticHostOffset}px)`;\n      rightValueLabel.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;\n      rightValueLabelTransformed.style.transform = `translateX(${rightValueLabelStaticHostOffset}px)`;\n    }\n  }\n\n  /**\n   * Hides bounding tick labels that are obscured by either handle.\n   */\n  private hideObscuredBoundingTickLabels(): void {\n    const valueIsRange = isRange(this.value);\n    if (!this.hasHistogram && !valueIsRange && !this.labelHandles && !this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && this.labelHandles && !this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && !this.labelHandles && this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && !valueIsRange && this.labelHandles && this.precise) {\n      return;\n    }\n    if (!this.hasHistogram && valueIsRange && !this.precise) {\n      return;\n    }\n    if (this.hasHistogram && !this.precise && !this.labelHandles) {\n      return;\n    }\n\n    const minHandle: HTMLDivElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.thumbMinValue}`,\n    );\n    const maxHandle: HTMLDivElement | null = this.el.shadowRoot.querySelector(`.${CSS.thumbValue}`);\n\n    const minTickLabel: HTMLSpanElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.tickMin}`,\n    );\n    const maxTickLabel: HTMLSpanElement | null = this.el.shadowRoot.querySelector(\n      `.${CSS.tickMax}`,\n    );\n\n    if (!minHandle && maxHandle && minTickLabel && maxTickLabel) {\n      minTickLabel.style.opacity = this.isMinTickLabelObscured(minTickLabel, maxHandle) ? \"0\" : \"1\";\n      maxTickLabel.style.opacity = this.isMaxTickLabelObscured(maxTickLabel, maxHandle) ? \"0\" : \"1\";\n    }\n\n    if (minHandle && maxHandle && minTickLabel && maxTickLabel) {\n      minTickLabel.style.opacity =\n        this.isMinTickLabelObscured(minTickLabel, minHandle) ||\n        this.isMinTickLabelObscured(minTickLabel, maxHandle)\n          ? \"0\"\n          : \"1\";\n      maxTickLabel.style.opacity =\n        this.isMaxTickLabelObscured(maxTickLabel, minHandle) ||\n        (this.isMaxTickLabelObscured(maxTickLabel, maxHandle) && this.hasHistogram)\n          ? \"0\"\n          : \"1\";\n    }\n  }\n\n  /**\n   * Returns an integer representing the number of pixels to offset on the left or right side based on desired position behavior.\n   *\n   * @param leftBounds\n   * @param rightBounds\n   * @internal\n   */\n  private getHostOffset(leftBounds: number, rightBounds: number): number {\n    const hostBounds = this.el.getBoundingClientRect();\n    const buffer = 7;\n\n    if (leftBounds + buffer < hostBounds.left) {\n      return hostBounds.left - leftBounds - buffer;\n    }\n\n    if (rightBounds - buffer > hostBounds.right) {\n      return -(rightBounds - hostBounds.right) + buffer;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Returns an integer representing the number of pixels that the two given span elements are overlapping, taking into account\n   * a space in between the two spans equal to the font-size set on them to account for the space needed to render a hyphen.\n   *\n   * @param leftLabel\n   * @param rightLabel\n   */\n  private getRangeLabelOverlap(leftLabel: HTMLSpanElement, rightLabel: HTMLSpanElement): number {\n    const leftLabelBounds = leftLabel.getBoundingClientRect();\n    const rightLabelBounds = rightLabel.getBoundingClientRect();\n    const leftLabelFontSize = this.getFontSizeForElement(leftLabel);\n    const rangeLabelOverlap = leftLabelBounds.right + leftLabelFontSize - rightLabelBounds.left;\n\n    return Math.max(rangeLabelOverlap, 0);\n  }\n\n  /**\n   * Returns a boolean value representing if the minLabel span element is obscured (being overlapped) by the given handle div element.\n   *\n   * @param minLabel\n   * @param handle\n   */\n  private isMinTickLabelObscured(minLabel: HTMLSpanElement, handle: HTMLDivElement): boolean {\n    const minLabelBounds = minLabel.getBoundingClientRect();\n    const handleBounds = handle.getBoundingClientRect();\n    return intersects(minLabelBounds, handleBounds);\n  }\n\n  /**\n   * Returns a boolean value representing if the maxLabel span element is obscured (being overlapped) by the given handle div element.\n   *\n   * @param maxLabel\n   * @param handle\n   */\n  private isMaxTickLabelObscured(maxLabel: HTMLSpanElement, handle: HTMLDivElement): boolean {\n    const maxLabelBounds = maxLabel.getBoundingClientRect();\n    const handleBounds = handle.getBoundingClientRect();\n    return intersects(maxLabelBounds, handleBounds);\n  }\n\n  /**\n   * Returns a string representing the localized label value based if the groupSeparator prop is parsed.\n   *\n   * @param value\n   */\n  private formatValue = (value: number): string => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    return numberStringFormatter.localize(value.toString());\n  };\n\n  private internalLabelFormatter(value: number, type: \"max\" | \"min\" | \"value\" | \"tick\"): string {\n    const customFormatter = this.labelFormatter;\n\n    if (!customFormatter) {\n      return this.formatValue(value);\n    }\n\n    const formattedValue = customFormatter(value, type, this.formatValue);\n\n    if (formattedValue == null) {\n      return this.formatValue(value);\n    }\n\n    return formattedValue;\n  }\n}\n"],"mappings":"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","ignoreList":[]}