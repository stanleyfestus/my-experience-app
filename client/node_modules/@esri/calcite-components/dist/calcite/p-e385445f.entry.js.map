{"version":3,"names":["cardGroupCss","CalciteCardGroupStyle0","CardGroup","this","items","udpateItemsOnSelectionModeChange","updateSlottedItems","slotRefEl","updateSelectedItems","updateItemsOnSlotChange","event","target","assignedElements","flatten","filter","el","matches","forEach","selectionMode","setSelectedItems","emit","elToMatch","matchingEl","selected","selectedItems","disabled","calciteCardGroupSelect","onSelectionModeChange","componentDidRender","updateHostInteraction","componentDidLoad","setComponentLoaded","componentWillLoad","setUpLoadableComponent","calciteInternalCardKeyEventListener","composedPath","includes","interactiveItems","detail","focusElementInGroup","calciteCardSelectListener","selectable","setFocus","componentLoaded","focusElement","render","role","h","Host","key","InteractiveContainer","label","class","onSlotchange","ref"],"sources":["src/components/card-group/card-group.scss?tag=calcite-card-group&encapsulation=shadow","src/components/card-group/card-group.tsx"],"sourcesContent":["/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-card-group-gap: [Deprecated] Use `--calcite-card-group-space`. Specifies the gap between slotted elements.\n * @prop --calcite-card-group-space: Specifies the space between slotted elements.\n */\n\n:host {\n  @apply block;\n}\n\n.container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--calcite-card-group-space, var(--calcite-card-group-gap, var(--calcite-size-md)));\n}\n\n@include base-component();\n@include disabled();\n","import {\n  Component,\n  h,\n  VNode,\n  Prop,\n  Element,\n  Listen,\n  EventEmitter,\n  Event,\n  Method,\n  Watch,\n  Host,\n} from \"@stencil/core\";\nimport { focusElement, focusElementInGroup } from \"../../utils/dom\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport {\n  LoadableComponent,\n  componentLoaded,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot - A slot for adding one or more `calcite-card`s.\n */\n\n@Component({\n  tag: \"calcite-card-group\",\n  styleUrl: \"card-group.scss\",\n  shadow: true,\n})\nexport class CardGroup implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Element\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteCardGroupElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the selection mode of the component. */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"multiple\" | \"single\" | \"single-persist\" | \"none\",\n    SelectionMode\n  > = \"none\";\n\n  @Watch(\"selectionMode\")\n  onSelectionModeChange(): void {\n    this.udpateItemsOnSelectionModeChange();\n  }\n\n  /**\n   * Specifies the component's selected items.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedItems: HTMLCalciteCardElement[] = [];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  private items: HTMLCalciteCardElement[] = [];\n\n  private slotRefEl: HTMLSlotElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Emits when the component's selection changes and the `selectionMode` is not `none`. */\n  @Event({ cancelable: false }) calciteCardGroupSelect: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalCardKeyEvent\")\n  calciteInternalCardKeyEventListener(event: KeyboardEvent): void {\n    if (event.composedPath().includes(this.el)) {\n      const interactiveItems = this.items.filter((el) => !el.disabled);\n      switch (event.detail[\"key\"]) {\n        case \"ArrowRight\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"next\");\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"previous\");\n          break;\n        case \"Home\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"first\");\n          break;\n        case \"End\":\n          focusElementInGroup(interactiveItems, event.target as HTMLCalciteCardElement, \"last\");\n          break;\n      }\n    }\n  }\n\n  @Listen(\"calciteCardSelect\")\n  calciteCardSelectListener(event: CustomEvent): void {\n    if (\n      event.composedPath().includes(this.el) &&\n      !(event.target as HTMLCalciteCardElement).selectable\n    ) {\n      this.setSelectedItems(true, event.target as HTMLCalciteCardElement);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentLoaded(this);\n    if (!this.disabled) {\n      focusElement(this.items[0]);\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private udpateItemsOnSelectionModeChange = (): void => {\n    this.updateSlottedItems(this.slotRefEl);\n    this.updateSelectedItems();\n  };\n\n  private updateItemsOnSlotChange = (event: Event): void => {\n    this.updateSlottedItems(event.target as HTMLSlotElement);\n    this.updateSelectedItems();\n  };\n\n  private updateSlottedItems = (target: HTMLSlotElement): void => {\n    this.items = target\n      .assignedElements({ flatten: true })\n      .filter((el): el is HTMLCalciteCardElement => el?.matches(\"calcite-card\"));\n  };\n\n  private updateSelectedItems = (): void => {\n    this.items.forEach((el) => {\n      el.selectionMode = this.selectionMode;\n    });\n\n    this.setSelectedItems(false);\n  };\n\n  private setSelectedItems = (emit: boolean, elToMatch?: HTMLCalciteCardElement): void => {\n    if (elToMatch) {\n      this.items.forEach((el) => {\n        const matchingEl = elToMatch === el;\n        switch (this.selectionMode) {\n          case \"multiple\":\n            if (matchingEl) {\n              el.selected = !el.selected;\n            }\n            break;\n\n          case \"single\":\n            el.selected = matchingEl ? !el.selected : false;\n            break;\n\n          case \"single-persist\":\n            el.selected = !!matchingEl;\n            break;\n        }\n      });\n    }\n\n    this.selectedItems = this.items.filter((el) => el.selected);\n\n    if (emit && this.selectionMode !== \"none\" && !this.disabled) {\n      this.calciteCardGroupSelect.emit();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const role =\n      this.selectionMode === \"none\" || this.selectionMode === \"multiple\" ? \"group\" : \"radiogroup\";\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <div aria-label={this.label} class=\"container\" role={role}>\n            <slot\n              onSlotchange={this.updateItemsOnSlotChange}\n              ref={(el) => (this.slotRefEl = el as HTMLSlotElement)}\n            />\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;gRAAA,MAAMA,EAAe,iiBACrB,MAAAC,EAAeD,E,MCmCFE,EAAS,M,wFA6CZC,KAAAC,MAAkC,GA0FlCD,KAAAE,iCAAmC,KACzCF,KAAKG,mBAAmBH,KAAKI,WAC7BJ,KAAKK,qBAAqB,EAGpBL,KAAAM,wBAA2BC,IACjCP,KAAKG,mBAAmBI,EAAMC,QAC9BR,KAAKK,qBAAqB,EAGpBL,KAAAG,mBAAsBK,IAC5BR,KAAKC,MAAQO,EACVC,iBAAiB,CAAEC,QAAS,OAC5BC,QAAQC,GAAqCA,GAAIC,QAAQ,iBAAgB,EAGtEb,KAAAK,oBAAsB,KAC5BL,KAAKC,MAAMa,SAASF,IAClBA,EAAGG,cAAgBf,KAAKe,aAAa,IAGvCf,KAAKgB,iBAAiB,MAAM,EAGtBhB,KAAAgB,iBAAmB,CAACC,EAAeC,KACzC,GAAIA,EAAW,CACblB,KAAKC,MAAMa,SAASF,IAClB,MAAMO,EAAaD,IAAcN,EACjC,OAAQZ,KAAKe,eACX,IAAK,WACH,GAAII,EAAY,CACdP,EAAGQ,UAAYR,EAAGQ,Q,CAEpB,MAEF,IAAK,SACHR,EAAGQ,SAAWD,GAAcP,EAAGQ,SAAW,MAC1C,MAEF,IAAK,iBACHR,EAAGQ,WAAaD,EAChB,M,IAKRnB,KAAKqB,cAAgBrB,KAAKC,MAAMU,QAAQC,GAAOA,EAAGQ,WAElD,GAAIH,GAAQjB,KAAKe,gBAAkB,SAAWf,KAAKsB,SAAU,CAC3DtB,KAAKuB,uBAAuBN,M,iBAxKI,M,wCAShC,O,mBAY+D,E,CATnE,qBAAAO,GACExB,KAAKE,kC,CAmCP,kBAAAuB,GACEC,EAAsB1B,K,CAGxB,gBAAA2B,GACEC,EAAmB5B,K,CAGrB,uBAAM6B,GACJC,EAAuB9B,K,CASzB,mCAAA+B,CAAoCxB,GAClC,GAAIA,EAAMyB,eAAeC,SAASjC,KAAKY,IAAK,CAC1C,MAAMsB,EAAmBlC,KAAKC,MAAMU,QAAQC,IAAQA,EAAGU,WACvD,OAAQf,EAAM4B,OAAO,QACnB,IAAK,aACHC,EAAoBF,EAAkB3B,EAAMC,OAAkC,QAC9E,MACF,IAAK,YACH4B,EAAoBF,EAAkB3B,EAAMC,OAAkC,YAC9E,MACF,IAAK,OACH4B,EAAoBF,EAAkB3B,EAAMC,OAAkC,SAC9E,MACF,IAAK,MACH4B,EAAoBF,EAAkB3B,EAAMC,OAAkC,QAC9E,M,EAMR,yBAAA6B,CAA0B9B,GACxB,GACEA,EAAMyB,eAAeC,SAASjC,KAAKY,MACjCL,EAAMC,OAAkC8B,WAC1C,CACAtC,KAAKgB,iBAAiB,KAAMT,EAAMC,O,EActC,cAAM+B,SACEC,EAAgBxC,MACtB,IAAKA,KAAKsB,SAAU,CAClBmB,EAAazC,KAAKC,MAAM,G,EAqE5B,MAAAyC,GACE,MAAMC,EACJ3C,KAAKe,gBAAkB,QAAUf,KAAKe,gBAAkB,WAAa,QAAU,aAEjF,OACE6B,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAACG,EAAoB,CAAAD,IAAA,2CAACxB,SAAUtB,KAAKsB,UACnCsB,EAAA,OAAAE,IAAA,wDAAiB9C,KAAKgD,MAAOC,MAAM,YAAYN,KAAMA,GACnDC,EAAA,QAAAE,IAAA,2CACEI,aAAclD,KAAKM,wBACnB6C,IAAMvC,GAAQZ,KAAKI,UAAYQ,M","ignoreList":[]}