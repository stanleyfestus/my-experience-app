{"version":3,"names":["CSS","loader","clearButton","editingEnabled","inlineChild","inputIcon","prefix","suffix","wrapper","inputWrapper","actionWrapper","resizeIconWrapper","IDS","validationMessage","SLOTS","action","inputTextCss","CalciteInputTextStyle0","InputText","this","previousValueOrigin","mutationObserver","createObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","key","clearInputTextValue","preventDefault","submitForm","nativeEvent","setValue","committing","origin","value","emitChangeIfUserModified","previousEmittedValue","calciteInputTextChange","emit","setPreviousEmittedValue","inputTextBlurHandler","calciteInternalInputTextBlur","element","childEl","clickHandler","composedPath","includes","inputWrapperEl","actionWrapperEl","setFocus","inputTextFocusHandler","calciteInternalInputTextFocus","inputTextInputHandler","target","inputTextKeyDownHandler","onHiddenFormInputInput","name","stopPropagation","setChildElRef","el","setInputValue","newInputValue","setPreviousValue","previousValue","calciteInputTextInputEvent","calciteInputTextInput","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","onMessagesChange","valueWatcher","newValue","updateRequestedIcon","requestedIcon","setRequestedIcon","icon","clearable","length","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectLocalized","connectMessages","inlineEditableEl","closest","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","disconnectedCallback","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","componentFocusable","focus","selectText","select","onLabelClick","syncHiddenFormInput","input","slottedActionEl","getSlotted","getAttribute","slottedActionElDisabledInternally","setAttribute","removeAttribute","render","dir","getElementDir","h","class","label","messages","loading","type","inputClearButton","clear","onClick","tabIndex","scale","getIconScale","iconEl","flipRtl","iconFlipRtl","prefixText","suffixText","toAriaBoolean","status","getLabelText","autocomplete","autofocus","defaultValue","enterKeyHint","inputMode","maxLength","minLength","onBlur","onFocus","onInput","onKeyDown","pattern","placeholder","ref","required","Host","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","Validation","validationIcon","id","message"],"sources":["src/components/input-text/resources.ts","src/components/input-text/input-text.scss?tag=calcite-input-text&encapsulation=shadow","src/components/input-text/input-text.tsx"],"sourcesContent":["export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n};\n\nexport const IDS = {\n  validationMessage: \"inputTextValidationMessage\",\n};\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-prefix-size: Specifies the component's prefix width.\n * @prop --calcite-input-suffix-size: Specifies the component's suffix width.\n */\n\n:host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input {\n    padding-inline-start: theme(\"spacing.2\");\n    padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, theme(\"spacing.2\"));\n  }\n\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6;\n  }\n\n  & .prefix,\n  & .suffix {\n    @apply px-2;\n  }\n\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input {\n    padding-inline-start: theme(\"spacing.3\");\n    padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, theme(\"spacing.3\"));\n  }\n\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8;\n  }\n\n  & .prefix,\n  & .suffix {\n    @apply px-3;\n  }\n\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input {\n    padding-inline-start: theme(\"spacing.4\");\n    padding-inline-end: var(--calcite-internal-input-text-input-padding-inline-end, theme(\"spacing.4\"));\n  }\n\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11;\n  }\n\n  & .prefix,\n  & .suffix {\n    @apply px-4;\n  }\n\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n}\n\n@include disabled();\n\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply bg-foreground-1\n    box-border\n    flex\n    flex-1\n    font-inherit\n    font-normal\n    m-0\n    max-h-full\n    max-w-full\n    relative\n    rounded-none\n    text-color-1\n    text-ellipsis\n    w-full;\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n// states\ninput {\n  @apply text-color-1\n    border-color-input\n    border\n    border-solid;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n}\ninput:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\n\ninput {\n  @apply focus-base;\n}\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input {\n    @apply border-color-danger;\n  }\n  & input:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block\n\n    z-default; // needed for firefox to display the icon properly\n}\n\n// hide browser default clear\n\ninput[type=\"text\"]::-ms-clear,\ninput[type=\"text\"]::-ms-reveal {\n  @apply hidden\n    h-0\n    w-0;\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-prefix-size, auto);\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  inline-size: var(--calcite-input-suffix-size, auto);\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & input {\n    text-align: end;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n    flex\n    cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { getElementDir, getSlotted, setRequestedIcon, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { SetValueOrigin } from \"../input/interfaces\";\nimport { Alignment, Scale, Status } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { syncHiddenFormInput, TextualInputComponent } from \"../input/common/input\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, IDS, SLOTS } from \"./resources\";\nimport { InputTextMessages } from \"./assets/input-text/t9n\";\n\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\n@Component({\n  tag: \"calcite-input-text\",\n  styleUrl: \"input-text.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class InputText\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    TextualInputComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @futureBreaking Remove boolean type as it is not supported.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** Accessible name for the component's button or hyperlink. */\n  @Prop() label: string;\n\n  /** When `true`, the component is in the loading state and `calcite-progress` is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /**\n   * Specifies a regex pattern the component's `value` must match for validation.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() pattern: string;\n\n  /** Adds text to the end of the component.  */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputTextMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputTextMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      this.setValue({\n        origin: \"direct\",\n        previousValue,\n        value: !newValue ? \"\" : newValue,\n      });\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"text\");\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputTextElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputText[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  private inputWrapperEl: HTMLDivElement;\n\n  private actionWrapperEl: HTMLDivElement;\n\n  /** keep track of the rendered child */\n  private childEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return this.clearable && this.value.length > 0;\n  }\n\n  private previousEmittedValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: InputTextMessages;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n\n    connectLabel(this);\n    connectForm(this);\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"text\");\n    await setUpMessages(this);\n\n    this.setPreviousEmittedValue(this.value);\n    this.setPreviousValue(this.value);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event() calciteInternalInputTextFocus: EventEmitter<{\n    element: HTMLInputElement;\n    value: string;\n  }>;\n\n  /**\n   * @internal\n   */\n  @Event() calciteInternalInputTextBlur: EventEmitter<{ element: HTMLInputElement; value: string }>;\n\n  /**\n   * Fires each time a new value is typed.\n   */\n  @Event({ cancelable: true }) calciteInputTextInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed and committed.\n   */\n  @Event() calciteInputTextChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childEl?.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    this.childEl?.select();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputTextValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private clearInputTextValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n      this.calciteInputTextChange.emit();\n      this.setPreviousEmittedValue(this.value);\n    }\n  };\n\n  private inputTextBlurHandler = () => {\n    this.calciteInternalInputTextBlur.emit({\n      element: this.childEl,\n      value: this.value,\n    });\n\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const composedPath = event.composedPath();\n\n    if (\n      !composedPath.includes(this.inputWrapperEl) ||\n      composedPath.includes(this.actionWrapperEl)\n    ) {\n      return;\n    }\n\n    this.setFocus();\n  };\n\n  private inputTextFocusHandler = (): void => {\n    this.calciteInternalInputTextFocus.emit({\n      element: this.childEl,\n      value: this.value,\n    });\n  };\n\n  private inputTextInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    this.setValue({\n      nativeEvent,\n      origin: \"user\",\n      value: (nativeEvent.target as HTMLInputElement).value,\n    });\n  };\n\n  private inputTextKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    if (event.key === \"Enter\") {\n      this.emitChangeIfUserModified();\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"text\", this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildElRef = (el) => {\n    this.childEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputValue = (newInputValue: string): void => {\n    if (!this.childEl) {\n      return;\n    }\n    this.childEl.value = newInputValue;\n  };\n\n  private setPreviousEmittedValue = (value: string): void => {\n    this.previousEmittedValue = value;\n  };\n\n  private setPreviousValue = (value: string): void => {\n    this.previousValue = value;\n  };\n\n  private setValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    this.setPreviousValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n    this.userChangedValue = origin === \"user\" && value !== this.value;\n    this.value = value;\n\n    if (origin === \"direct\") {\n      this.setInputValue(value);\n      this.setPreviousEmittedValue(value);\n    }\n\n    if (nativeEvent) {\n      const calciteInputTextInputEvent = this.calciteInputTextInput.emit();\n\n      if (calciteInputTextInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputTextValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const childEl = (\n      <input\n        aria-errormessage={IDS.validationMessage}\n        aria-invalid={toAriaBoolean(this.status === \"invalid\")}\n        aria-label={getLabelText(this)}\n        autocomplete={this.autocomplete}\n        autofocus={this.el.autofocus ? true : null}\n        class={{\n          [CSS.editingEnabled]: this.editingEnabled,\n          [CSS.inlineChild]: !!this.inlineEditableEl,\n        }}\n        defaultValue={this.defaultValue}\n        disabled={this.disabled ? true : null}\n        enterKeyHint={this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\")}\n        inputMode={this.el.inputMode || this.el.getAttribute(\"inputmode\")}\n        maxLength={this.maxLength}\n        minLength={this.minLength}\n        name={this.name}\n        onBlur={this.inputTextBlurHandler}\n        onFocus={this.inputTextFocusHandler}\n        onInput={this.inputTextInputHandler}\n        onKeyDown={this.inputTextKeyDownHandler}\n        pattern={this.pattern}\n        placeholder={this.placeholder || \"\"}\n        readOnly={this.readOnly}\n        ref={this.setChildElRef}\n        required={this.required ? true : null}\n        tabIndex={this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null}\n        type=\"text\"\n        value={this.value}\n      />\n    );\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}\n            ref={(el) => (this.inputWrapperEl = el)}\n          >\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper} ref={(el) => (this.actionWrapperEl = el)}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.suffixText ? suffixText : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              id={IDS.validationMessage}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}