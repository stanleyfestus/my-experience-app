{"version":3,"names":["CSS","accordion","transparent","accordionCss","CalciteAccordionStyle0","Accordion","this","mutationObserver","createObserver","updateAccordionItems","handlePropsChange","connectedCallback","observe","el","childList","disconnectedCallback","disconnect","render","appearance","h","key","class","updateActiveItemOnChange","event","calciteInternalAccordionChange","emit","requestedAccordionItem","detail","stopPropagation","querySelectorAll","forEach","item","iconPosition","iconType","scale","document","dispatchEvent","CustomEvent","SLOTS","actionsStart","actionsEnd","content","description","expandIcon","header","headerContainer","headerContent","headerText","heading","icon","iconEnd","iconStart","IDS","section","sectionToggle","accordionItemCss","CalciteAccordionItemStyle0","AccordionItem","storeHeaderEl","headerEl","itemHeaderClickHandler","emitRequestedItem","connectConditionalSlotComponent","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectConditionalSlotComponent","renderActionsStart","getSlotted","name","renderActionsEnd","iconFlipRtl","dir","getElementDir","iconStartEl","flipRtl","getIconScale","iconEndEl","Host","CSS_UTILITY","rtl","toAriaBoolean","expanded","id","onClick","ref","role","tabindex","keyDownHandler","target","preventDefault","composedPath","parent","closestElementCrossShadowBoundary","determineActiveItem","selectionMode","accordionItemSyncHandler","accordionItem","willBeSyncedByDirectParent","parentElement","closestAccordionParent","setFocus","componentFocusable","focus","requestedItem","calciteInternalAccordionItemSelect"],"sources":["src/components/accordion/resources.ts","src/components/accordion/accordion.scss?tag=calcite-accordion&encapsulation=shadow","src/components/accordion/accordion.tsx","src/components/accordion-item/resources.ts","src/components/accordion-item/accordion-item.scss?tag=calcite-accordion-item&encapsulation=shadow","src/components/accordion-item/accordion-item.tsx"],"sourcesContent":["export const CSS = {\n  accordion: \"accordion\",\n  transparent: \"accordion--transparent\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-accordion-border-color: Specifies the component's border color.\n * @prop --calcite-accordion-background-color:  Specifies the component's background color.\n*/\n\n:host {\n  @apply relative\n    block\n    max-w-full\n    leading-6;\n}\n\n.accordion {\n  @apply border border-solid border-b-0;\n  border-color: var(--calcite-accordion-border-color, theme(\"borderColor.color.2\"));\n  background-color: var(--calcite-accordion-background-color, theme(\"backgroundColor.foreground.1\"));\n}\n\n.accordion--transparent {\n  --calcite-accordion-border-color: transparent;\n  border-color: var(--calcite-color-transparent);\n  background-color: var(--calcite-color-transparent);\n}\n\n// scale variants for child\n:host([scale=\"s\"]) {\n  --calcite-internal-accordion-item-spacing-unit: theme(\"spacing.1\");\n  --calcite-internal-accordion-icon-margin: theme(\"spacing.2\");\n  --calcite-internal-accordion-item-padding: var(--calcite-internal-accordion-item-spacing-unit) theme(\"spacing.2\");\n  @apply text-n2h;\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-accordion-item-spacing-unit: theme(\"spacing.2\");\n  --calcite-internal-accordion-icon-margin: theme(\"spacing.3\");\n  --calcite-internal-accordion-item-padding: var(--calcite-internal-accordion-item-spacing-unit) theme(\"spacing.3\");\n  @apply text-n1h;\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-accordion-item-spacing-unit: theme(\"spacing.3\");\n  --calcite-internal-accordion-icon-margin: theme(\"spacing.4\");\n  --calcite-internal-accordion-item-padding: var(--calcite-internal-accordion-item-spacing-unit) theme(\"spacing.4\");\n  @apply text-0h;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { Appearance, Position, IconType, Scale, SelectionMode } from \"../interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { RequestedItem } from \"./interfaces\";\nimport { CSS } from \"./resources\";\n/**\n * @slot - A slot for adding `calcite-accordion-item`s. `calcite-accordion` cannot be nested, however `calcite-accordion-item`s can.\n */\n@Component({\n  tag: \"calcite-accordion\",\n  styleUrl: \"accordion.scss\",\n  shadow: true,\n})\nexport class Accordion {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /** Specifies the placement of the icon in the header. */\n  @Prop({ reflect: true }) iconPosition: Extract<\"start\" | \"end\", Position> = \"end\";\n\n  /** Specifies the type of the icon in the header. */\n  @Prop({ reflect: true }) iconType: Extract<\"chevron\" | \"caret\" | \"plus-minus\", IconType> =\n    \"chevron\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection, and\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"single\" | \"single-persist\" | \"multiple\",\n    SelectionMode\n  > = \"multiple\";\n\n  @Watch(\"iconPosition\")\n  @Watch(\"iconType\")\n  @Watch(\"scale\")\n  @Watch(\"selectionMode\")\n  handlePropsChange(): void {\n    this.updateAccordionItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) private calciteInternalAccordionChange: EventEmitter<RequestedItem>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.updateAccordionItems();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const transparent = this.appearance === \"transparent\";\n    return (\n      <div\n        class={{\n          [CSS.transparent]: transparent,\n          [CSS.accordion]: !transparent,\n        }}\n      >\n        <slot />\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalAccordionItemSelect\")\n  updateActiveItemOnChange(event: CustomEvent): void {\n    this.calciteInternalAccordionChange.emit({\n      requestedAccordionItem: event.detail.requestedAccordionItem,\n    });\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteAccordionElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateAccordionItems());\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private updateAccordionItems(): void {\n    this.el.querySelectorAll(\"calcite-accordion-item\").forEach((item) => {\n      item.iconPosition = this.iconPosition;\n      item.iconType = this.iconType;\n      item.scale = this.scale;\n    });\n\n    // sync props on items across shadow DOM\n    document.dispatchEvent(new CustomEvent(\"calciteInternalAccordionItemsSync\"));\n  }\n}\n","export const SLOTS = {\n  actionsStart: \"actions-start\",\n  actionsEnd: \"actions-end\",\n};\n\nexport const CSS = {\n  actionsEnd: \"actions-end\",\n  actionsStart: \"actions-start\",\n  content: \"content\",\n  description: \"description\",\n  expandIcon: \"expand-icon\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerContent: \"header-content\",\n  headerText: \"header-text\",\n  heading: \"heading\",\n  icon: \"icon\",\n  iconEnd: \"icon--end\",\n  iconStart: \"icon--start\",\n};\n\nexport const IDS = {\n  section: \"section\",\n  sectionToggle: \"section-toggle\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-accordion-border-color: [Deprecated] Use `--calcite-accordion-item-border-color`. Specifies the component's border color.\n * @prop --calcite-accordion-item-background-color: Specifies the component's background color.\n * @prop --calcite-accordion-item-border-color: Specifies the component's border color.\n * @prop --calcite-accordion-item-content-space: Specifies the component's padding.\n * @prop --calcite-accordion-item-end-icon-color: Specifies the component's `iconEnd` color. Fallback to `--calcite-accordion-item-icon-color` or current color.\n * @prop --calcite-accordion-item-expand-icon-color: Specifies the component's expand icon color.\n * @prop --calcite-accordion-item-header-background-color: Specifies the component's `heading` background color.\n * @prop --calcite-accordion-item-heading-text-color: Specifies the component's `heading` text color.\n * @prop --calcite-accordion-item-icon-color: Specifies the component's default icon color.\n * @prop --calcite-accordion-item-start-icon-color: Specifies the component's `iconStart` color. Fallback to `--calcite-accordion-item-icon-color` or current color.\n * @prop --calcite-accordion-item-text-color: Specifies the component's text color.\n * @prop --calcite-accordion-text-color-hover: [Deprecated] Use `--calcite-accordion-item-text-color-hover`. Specifies the component's main text color on hover.\n * @prop --calcite-accordion-text-color-pressed: [Deprecated] Use `--calcite-accordion-item-text-color-press`. Specifies the component's main text color when pressed.\n * @prop --calcite-accordion-text-color: [Deprecated] Use `--calcite-accordion-item-text-color`. Specifies the component's text color.\n */\n\n%icon-position {\n  /* icon rotation variables */\n  --calcite-internal-accordion-item-icon-rotation: calc(theme(\"rotate.90\") * -1);\n  --calcite-internal-accordion-item-active-icon-rotation: theme(\"rotate.0\");\n  --calcite-internal-accordion-item-icon-rotation-rtl: theme(\"rotate.90\");\n  --calcite-internal-accordion-item-active-icon-rotation-rtl: theme(\"rotate.0\");\n}\n\n:host {\n  @apply relative\n    flex\n    flex-col\n    no-underline;\n\n  color: var(--calcite-accordion-item-text-color, var(--calcite-accordion-text-color, var(--calcite-color-text-3)));\n  background-color: var(--calcite-accordion-item-background-color);\n  border-width: 0;\n\n  .header {\n    background-color: var(--calcite-accordion-item-header-background-color);\n  }\n}\n\n// icon position variants for child\n.icon-position--start {\n  @extend %icon-position;\n  --calcite-internal-accordion-item-flex-direction: row-reverse;\n  --calcite-internal-accordion-item-icon-spacing-start: 0;\n  --calcite-internal-accordion-item-icon-spacing-end: var(--calcite-internal-accordion-icon-margin);\n}\n\n.icon-position--end {\n  @extend %icon-position;\n  --calcite-internal-accordion-item-flex-direction: row;\n  --calcite-internal-accordion-item-icon-spacing-start: var(--calcite-internal-accordion-icon-margin);\n  --calcite-internal-accordion-item-icon-spacing-end: 0;\n}\n\n.icon-position--end:not(.icon-type--plus-minus) {\n  --calcite-internal-accordion-item-icon-rotation: theme(\"rotate.0\");\n  --calcite-internal-accordion-item-active-icon-rotation: theme(\"rotate.180\");\n  --calcite-internal-accordion-item-icon-rotation-rtl: theme(\"rotate.0\");\n  --calcite-internal-accordion-item-active-icon-rotation-rtl: calc(theme(\"rotate.180\") * -1);\n}\n\n// .header / content\n.content,\n.header {\n  border-block-end-width: var(--calcite-border-width-sm);\n  border-block-end-style: solid;\n  border-color: var(\n    --calcite-accordion-item-border-color,\n    var(--calcite-accordion-border-color, theme(\"borderColor.color.2\"))\n  );\n}\n\n.header-content,\n.content {\n  padding: var(\n    --calcite-accordion-item-content-space,\n    var(\n      --calcite-internal-accordion-item-padding,\n      var(--calcite-internal-accordion-item-spacing-unit, theme(\"spacing.2\") 0.75rem)\n    )\n  );\n}\n\n.header {\n  @apply flex items-stretch;\n\n  * {\n    @apply inline-flex\n      items-center\n      duration-150\n      ease-in-out;\n    @include word-break();\n  }\n}\n\n.header-content {\n  @apply focus-base flex-grow cursor-pointer;\n  flex-direction: var(--calcite-internal-accordion-item-flex-direction);\n  color: var(--calcite-accordion-item-heading-text-color, var(--calcite-accordion-text-color, inherit));\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  // Deprecated\n  &:focus,\n  &:hover,\n  &:active {\n    color: var(\n      --calcite-accordion-item-heading-text-color,\n      var(--calcite-accordion-text-color-hover, var(--calcite-color-text-2))\n    );\n\n    .heading {\n      color: var(\n        --calcite-accordion-item-heading-text-color,\n        var(--calcite-accordion-text-color-pressed, var(--calcite-color-text-1))\n      );\n    }\n  }\n}\n\n.header-container {\n  inline-size: 100%;\n}\n\n// accordion item title\n.header-text {\n  @apply my-0 flex-grow flex-col py-0;\n  text-align: initial;\n  margin-inline-end: theme(\"margin.auto\");\n}\n\n.heading,\n.description {\n  @apply flex w-full;\n}\n\n.heading {\n  @apply font-medium;\n}\n\n.actions-start,\n.actions-end {\n  @apply flex items-center;\n}\n\n.icon {\n  @apply duration-150\n    ease-in-out\n    flex\n    items-center;\n  margin-inline-end: var(--calcite-internal-accordion-item-icon-spacing-start);\n  margin-inline-start: var(--calcite-internal-accordion-item-icon-spacing-end);\n}\n\n.icon--start {\n  color: var(--calcite-accordion-item-start-icon-color, var(--calcite-accordion-item-icon-color, currentColor));\n  margin-inline-end: var(--calcite-internal-accordion-icon-margin);\n}\n\n.icon--end {\n  color: var(--calcite-accordion-item-end-icon-color, var(--calcite-accordion-item-icon-color, currentColor));\n  margin-inline-end: var(--calcite-internal-accordion-icon-margin);\n  margin-inline-start: var(--calcite-internal-accordion-icon-margin);\n}\n\n// accordion item icon\n.expand-icon {\n  color: var(\n    --calcite-accordion-item-expand-icon-color,\n    var(--calcite-accordion-item-text-color, var(--calcite-accordion-text-color, var(--calcite-color-text-3)))\n  );\n  margin-inline-start: var(--calcite-internal-accordion-item-icon-spacing-start);\n  margin-inline-end: var(--calcite-internal-accordion-item-icon-spacing-end);\n  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation));\n}\n\n.calcite--rtl .expand-icon {\n  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation-rtl));\n}\n\n.description {\n  @apply mt-1;\n}\n\n.content {\n  @apply hidden pt-0;\n  text-align: initial;\n}\n\n:host(:not(:focus):not(:hover):not([expanded])) {\n  .heading {\n    color: var(\n      --calcite-accordion-item-heading-text-color,\n      var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2))\n    );\n  }\n}\n\n:host([expanded]) {\n  color: var(\n    --calcite-accordion-item-text-color,\n    var(--calcite-accordion-text-color, var(--calcite-accordion-text-color-pressed, var(--calcite-color-text-1)))\n  );\n\n  .header {\n    border-block-end-color: transparent;\n  }\n\n  .expand-icon {\n    color: var(\n      --calcite-accordion-item-expand-icon-color,\n      var(\n        --calcite-accordion-item-text-color,\n        var(--calcite-accordion-text-color, var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2)))\n      )\n    );\n    transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation));\n  }\n  .calcite--rtl .expand-icon {\n    transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation-rtl));\n  }\n\n  .description {\n    color: var(\n      --calcite-accordion-item-text-color,\n      var(--calcite-accordion-text-color, var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2)))\n    );\n  }\n\n  .content {\n    @apply block;\n  }\n}\n\n@media (forced-colors: active) {\n  :host([expanded]) {\n    & .header {\n      border-block-end: none;\n    }\n    & .heading {\n      /** give visual indicator of expanded state since subtle color changes can't be done **/\n      font-weight: bolder;\n    }\n  }\n  .header-content:hover,\n  .header-content:focus {\n    & .heading {\n      /** give visual indicator of expandability/click-ability since subtle color changes can't be done **/\n      text-decoration: underline;\n    }\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  closestElementCrossShadowBoundary,\n  getElementDir,\n  getSlotted,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { FlipContext, Position, Scale, SelectionMode, IconType } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { SLOTS, CSS, IDS } from \"./resources\";\nimport { RequestedItem } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding custom content, including nested `calcite-accordion-item`s.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component's header.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component's header.\n */\n@Component({\n  tag: \"calcite-accordion-item\",\n  styleUrl: \"accordion-item.scss\",\n  shadow: true,\n})\nexport class AccordionItem implements ConditionalSlotComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is expanded. */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  /** Specifies heading text for the component. */\n  @Prop() heading: string;\n\n  /** Specifies a description for the component. */\n  @Prop() description: string;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: IconNameOrString;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /**\n   * Specifies the placement of the icon in the header inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() iconPosition: Extract<\"start\" | \"end\", Position>;\n\n  /** Specifies the type of the icon in the header inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() iconType: Extract<\"chevron\" | \"caret\" | \"plus-minus\", IconType>;\n\n  /**\n   * The containing `accordion` element.\n   *\n   * @internal\n   */\n  @Prop() accordionParent: HTMLCalciteAccordionElement;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAccordionItemSelect: EventEmitter<RequestedItem>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAccordionItemClose: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderActionsStart(): VNode {\n    const { el } = this;\n    return getSlotted(el, SLOTS.actionsStart) ? (\n      <div class={CSS.actionsStart}>\n        <slot name={SLOTS.actionsStart} />\n      </div>\n    ) : null;\n  }\n\n  renderActionsEnd(): VNode {\n    const { el } = this;\n    return getSlotted(el, SLOTS.actionsEnd) ? (\n      <div class={CSS.actionsEnd}>\n        <slot name={SLOTS.actionsEnd} />\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { iconFlipRtl } = this;\n    const dir = getElementDir(this.el);\n    const iconStartEl = this.iconStart ? (\n      <calcite-icon\n        class={{ [CSS.icon]: true, [CSS.iconStart]: true }}\n        flipRtl={iconFlipRtl === \"both\" || iconFlipRtl === \"start\"}\n        icon={this.iconStart}\n        key=\"icon-start\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const iconEndEl = this.iconEnd ? (\n      <calcite-icon\n        class={{ [CSS.iconEnd]: true, [CSS.icon]: true }}\n        flipRtl={iconFlipRtl === \"both\" || iconFlipRtl === \"end\"}\n        icon={this.iconEnd}\n        key=\"icon-end\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const { description } = this;\n    return (\n      <Host>\n        <div\n          class={{\n            [`icon-position--${this.iconPosition}`]: true,\n            [`icon-type--${this.iconType}`]: true,\n          }}\n        >\n          <div class={{ [CSS.header]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.renderActionsStart()}\n            <div\n              aria-controls={IDS.section}\n              aria-expanded={toAriaBoolean(this.expanded)}\n              class={CSS.headerContent}\n              id={IDS.sectionToggle}\n              onClick={this.itemHeaderClickHandler}\n              ref={this.storeHeaderEl}\n              role=\"button\"\n              tabindex=\"0\"\n            >\n              <div class={CSS.headerContainer}>\n                {iconStartEl}\n                <div class={CSS.headerText}>\n                  <span class={CSS.heading}>{this.heading}</span>\n                  {description ? <span class={CSS.description}>{description}</span> : null}\n                </div>\n                {iconEndEl}\n              </div>\n              <calcite-icon\n                class={CSS.expandIcon}\n                icon={\n                  this.iconType === \"chevron\"\n                    ? \"chevronDown\"\n                    : this.iconType === \"caret\"\n                      ? \"caretDown\"\n                      : this.expanded\n                        ? \"minus\"\n                        : \"plus\"\n                }\n                scale={getIconScale(this.scale)}\n              />\n            </div>\n            {this.renderActionsEnd()}\n          </div>\n          <section aria-labelledby={IDS.sectionToggle} class={CSS.content} id={IDS.section}>\n            <slot />\n          </section>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.emitRequestedItem();\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"calciteInternalAccordionChange\", { target: \"body\" })\n  updateActiveItemOnChange(event: CustomEvent): void {\n    const [accordion] = event.composedPath();\n    const parent = closestElementCrossShadowBoundary(this.el, \"calcite-accordion\");\n\n    if (accordion !== parent) {\n      return;\n    }\n\n    this.determineActiveItem(parent.selectionMode, event.detail.requestedAccordionItem);\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalAccordionItemsSync\", { target: \"document\" })\n  accordionItemSyncHandler(event: CustomEvent): void {\n    const [accordion] = event.composedPath();\n    const accordionItem = this.el;\n\n    // we sync with our accordion parent via event only if the item is wrapped within another component's shadow DOM,\n    // otherwise, the accordion parent will sync the item directly\n\n    const willBeSyncedByDirectParent = accordionItem.parentElement === accordion;\n    if (willBeSyncedByDirectParent) {\n      return;\n    }\n\n    const closestAccordionParent = closestElementCrossShadowBoundary(\n      accordionItem,\n      \"calcite-accordion\",\n    );\n\n    if (accordion !== closestAccordionParent) {\n      return;\n    }\n\n    this.iconPosition = closestAccordionParent.iconPosition;\n    this.iconType = closestAccordionParent.iconType;\n    this.scale = closestAccordionParent.scale;\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteAccordionItemElement;\n\n  private headerEl: HTMLDivElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.headerEl.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private storeHeaderEl = (el: HTMLDivElement): void => {\n    this.headerEl = el;\n  };\n\n  /** handle clicks on item header */\n  private itemHeaderClickHandler = (): void => this.emitRequestedItem();\n\n  private determineActiveItem(\n    selectionMode: SelectionMode,\n    requestedItem: HTMLCalciteAccordionItemElement,\n  ): void {\n    switch (selectionMode) {\n      case \"multiple\":\n        if (this.el === requestedItem) {\n          this.expanded = !this.expanded;\n        }\n        break;\n\n      case \"single\":\n        this.expanded = this.el === requestedItem ? !this.expanded : false;\n        break;\n\n      case \"single-persist\":\n        this.expanded = this.el === requestedItem;\n        break;\n    }\n  }\n\n  private emitRequestedItem(): void {\n    this.calciteInternalAccordionItemSelect.emit({\n      requestedAccordionItem: this.el,\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}