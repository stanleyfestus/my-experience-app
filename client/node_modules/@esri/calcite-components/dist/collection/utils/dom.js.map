{"version":3,"file":"dom.js","sourceRoot":"","sources":["../../../src/utils/dom.ts"],"names":[],"mappings":"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","sourcesContent":["import { tabbable } from \"tabbable\";\nimport { IconNameOrString } from \"../components/icon/interfaces\";\nimport { guid } from \"./guid\";\nimport { CSS_UTILITY } from \"./resources\";\n\n/**\n * The default `focus-trap/tabbable` options.\n *\n * See https://github.com/focus-trap/tabbable#tabbable\n */\nexport const tabbableOptions = {\n  getShadowRoot: true,\n};\n\n/**\n * This helper will guarantee an ID on the provided element.\n *\n * If it already has an ID, it will be preserved, otherwise a unique one will be generated and assigned.\n *\n * @param {Element} el An element.\n * @returns {string} The element's ID.\n */\nexport function ensureId(el: Element): string {\n  if (!el) {\n    return \"\";\n  }\n\n  return (el.id = el.id || `${el.tagName.toLowerCase()}-${guid()}`);\n}\n\n/**\n * This helper returns an array from a NodeList.\n *\n * @param {NodeList} nodeList A NodeList.\n * @returns {Element[]} An array of elements.\n */\nexport function nodeListToArray<T extends Element>(nodeList: HTMLCollectionOf<T> | NodeListOf<T> | T[]): T[] {\n  return Array.isArray(nodeList) ? nodeList : Array.from(nodeList);\n}\n\nexport type Direction = \"ltr\" | \"rtl\";\n\n/**\n * This helper returns the Calcite \"mode\" of an element.\n *\n * @param {HTMLElement} el An element.\n * @returns {\"light\"|\"dark\"} The Calcite mode.\n */\nexport function getModeName(el: HTMLElement): \"light\" | \"dark\" {\n  const closestElWithMode = closestElementCrossShadowBoundary(\n    el,\n    `.${CSS_UTILITY.darkMode}, .${CSS_UTILITY.lightMode}`,\n  );\n  return closestElWithMode?.classList.contains(\"calcite-mode-dark\") ? \"dark\" : \"light\";\n}\n\n/**\n * This helper returns the direction of a HTML element.\n *\n * @param {HTMLElement} el An element.\n * @returns {Direction} The direction.\n */\nexport function getElementDir(el: HTMLElement): Direction {\n  const prop = \"dir\";\n  const selector = `[${prop}]`;\n  const closest = closestElementCrossShadowBoundary(el, selector);\n  return closest ? (closest.getAttribute(prop) as Direction) : \"ltr\";\n}\n\n/**\n * This helper returns the value of an attribute on an element.\n *\n * @param {HTMLElement} el An element.\n * @param {string} attribute An attribute name.\n * @param {any} fallbackValue A fallback value.\n * @returns {any} The value.\n * @deprecated\n */\nexport function getElementProp(el: Element, attribute: string, fallbackValue: any): any {\n  const selector = `[${attribute}]`;\n  const closest = el.closest(selector);\n  return closest ? closest.getAttribute(attribute) : fallbackValue;\n}\n\n/**\n * This helper returns the computed width in pixels of a rendered HTMLElement.\n *\n * @param {HTMLElement} el An element.\n * @returns {number} The element's width.\n */\nexport function getElementWidth(el: HTMLElement): number {\n  if (!el) {\n    return 0;\n  }\n  return parseFloat(getComputedStyle(el).inlineSize);\n}\n\n/**\n * This helper returns the rootNode of an element.\n *\n * @param {Element} el An element.\n * @returns {Document|ShadowRoot} The element's root node.\n */\nexport function getRootNode(el: Element): Document | ShadowRoot {\n  return el.getRootNode() as Document | ShadowRoot;\n}\n\n/**\n * This helper returns the node's shadowRoot root node if it exists.\n *\n * @param {Element} el The element.\n * @returns {ShadowRoot|null} The element's root node ShadowRoot.\n */\nexport function getShadowRootNode(el: Element): ShadowRoot | null {\n  const rootNode = getRootNode(el);\n  return \"host\" in rootNode ? rootNode : null;\n}\n\n/**\n * This helper returns the computed width in pixels a given text string takes up on screen.\n *\n * See https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript\n *\n * @param {string} text The string of text to measure.\n * @param {string} font The CSS font attribute's value, which should include size and face, e.g. \"12px Arial\".\n */\nexport function getTextWidth(text: string, font: string): number {\n  if (!text) {\n    return 0;\n  }\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  return context.measureText(text).width;\n}\n/**\n * This helper returns the host of a ShadowRoot.\n *\n * @param {Document | ShadowRoot} root A root element.\n * @returns {Element | null} The host element.\n */\nexport function getHost(root: Document | ShadowRoot): Element | null {\n  return (root as ShadowRoot).host || null;\n}\n\n/**\n * This helper queries an element's rootNode and any ancestor rootNodes.\n *\n * If both an 'id' and 'selector' are supplied, 'id' will take precedence over 'selector'.\n *\n * @param {Element} el An element.\n * @param root0\n * @param root0.selector\n * @param root0.id\n * @returns {Element} An element.\n */\nexport function queryElementRoots<T extends Element = Element>(\n  el: Element,\n  {\n    selector,\n    id,\n  }: {\n    selector?: string;\n    id?: string;\n  },\n): T | null {\n  if (!el) {\n    return null;\n  }\n\n  if ((el as Slottable).assignedSlot) {\n    el = (el as Slottable).assignedSlot;\n  }\n\n  const rootNode = getRootNode(el);\n\n  const found = id\n    ? \"getElementById\" in rootNode\n      ? /*\n          Check to make sure 'getElementById' exists in cases where element is no longer connected to the DOM and getRootNode() returns the element.\n          https://github.com/Esri/calcite-design-system/pull/4280\n           */\n        (rootNode.getElementById(id) as Element as T)\n      : null\n    : selector\n      ? rootNode.querySelector<T>(selector)\n      : null;\n\n  return found || queryElementRoots<T>(getHost(rootNode), { selector, id });\n}\n\n/**\n * This helper returns the closest element matching the selector by crossing he shadow boundary if necessary.\n *\n * Based on https://stackoverflow.com/q/54520554/194216\n *\n * @param {Element} element The starting element.\n * @param {string} selector The selector.\n * @returns {Element} The targeted element.\n */\nexport function closestElementCrossShadowBoundary<TagName extends keyof HTMLElementTagNameMap>(\n  element: Element,\n  selector: TagName,\n): HTMLElementTagNameMap[TagName] | null;\nexport function closestElementCrossShadowBoundary<T extends Element = Element>(\n  element: Element,\n  selector: string,\n): T | null;\nexport function closestElementCrossShadowBoundary<T extends Element = Element>(\n  element: Element,\n  selector: string,\n): T | null {\n  return element\n    ? element.closest(selector) || closestElementCrossShadowBoundary(getHost(getRootNode(element)), selector)\n    : null;\n}\n\n/**\n * This utility helps invoke a callback as it traverses a node and its ancestors until reaching the root document.\n *\n * Returning early or undefined in `onVisit` will continue traversing up the DOM tree. Otherwise, traversal will halt with the returned value as the result of the function\n *\n * @param {Element} element An element.\n * @param {(node: Node) => Element} onVisit The callback.\n * @returns {Element} The result.\n */\nexport function walkUpAncestry<T = any>(element: Element, onVisit: (node: Node) => T): T {\n  return visit(element, onVisit);\n}\n\nfunction visit<T = any>(node: Node, onVisit: (node: Node) => T): T {\n  if (!node) {\n    return;\n  }\n\n  const result = onVisit(node);\n  if (result !== undefined) {\n    return result;\n  }\n\n  const { parentNode } = node;\n\n  return visit(parentNode instanceof ShadowRoot ? parentNode.host : parentNode, onVisit);\n}\n\n/**\n * This helper returns true when an element has the descendant in question.\n *\n * @param {Element} element The starting element.\n * @param {Element} maybeDescendant The descendant.\n * @returns {boolean} The result.\n */\nexport function containsCrossShadowBoundary(element: Element, maybeDescendant: Element): boolean {\n  return !!walkUpAncestry(maybeDescendant, (node) => (node === element ? true : undefined));\n}\n\n/**\n * An element which may contain a `setFocus` method.\n */\nexport interface FocusableElement extends HTMLElement {\n  setFocus?: () => Promise<void>;\n}\n\n/**\n * This helper returns true when an element has a setFocus method.\n *\n * @param {Element} el An element.\n * @returns {boolean} The result.\n */\nexport function isCalciteFocusable(el: FocusableElement): boolean {\n  return typeof el?.setFocus === \"function\";\n}\n\n/**\n * This helper focuses an element using the `setFocus` method if available and falls back to using the `focus` method if not available.\n *\n * @param {Element} el An element.\n */\nexport async function focusElement(el: FocusableElement): Promise<void> {\n  if (!el) {\n    return;\n  }\n\n  return isCalciteFocusable(el) ? el.setFocus() : el.focus();\n}\n\n/**\n * Helper to get the first tabbable element.\n *\n * @param {HTMLElement} element The html element containing tabbable elements.\n * @returns the first tabbable element.\n */\nexport function getFirstTabbable(element: HTMLElement): HTMLElement {\n  if (!element) {\n    return;\n  }\n\n  return (tabbable(element, tabbableOptions)[0] ?? element) as HTMLElement;\n}\n\n/**\n * Helper to focus the first tabbable element.\n *\n * @param {HTMLElement} element The html element containing tabbable elements.\n */\nexport function focusFirstTabbable(element: HTMLElement): void {\n  getFirstTabbable(element)?.focus();\n}\n\ninterface GetSlottedOptions {\n  all?: boolean;\n  direct?: boolean;\n  matches?: string;\n  selector?: string;\n}\n\nconst defaultSlotSelector = \":not([slot])\";\n\n/**\n * Gets slotted elements for a named slot.\n *\n * @param {Element} element An element.\n * @param {string} slotName The slot name.\n * @param {GetSlottedOptions & { all: true }} options The options.\n * @returns {Element | Element[] | null} returns element(s) or null.\n * @deprecated Use `onSlotchange` event instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.myElements = slotChangeGetAssignedElements(event)} />}\n * ```\n */\nexport function getSlotted<T extends Element = Element>(\n  element: Element,\n  slotName: string | string[] | (GetSlottedOptions & { all: true }),\n  options: GetSlottedOptions & { all: true },\n): T[];\nexport function getSlotted<T extends Element = Element>(\n  element: Element,\n  slotName?: string | string[] | GetSlottedOptions,\n  options?: GetSlottedOptions,\n): T | null;\nexport function getSlotted<T extends Element = Element>(\n  element: Element,\n  slotName?: string | string[] | GetSlottedOptions,\n  options?: GetSlottedOptions,\n): (T | null) | T[] {\n  if (slotName && !Array.isArray(slotName) && typeof slotName !== \"string\") {\n    options = slotName;\n    slotName = null;\n  }\n\n  const slotSelector = slotName\n    ? Array.isArray(slotName)\n      ? slotName.map((name) => `[slot=\"${name}\"]`).join(\",\")\n      : `[slot=\"${slotName}\"]`\n    : defaultSlotSelector;\n\n  if (options?.all) {\n    return queryMultiple<T>(element, slotSelector, options);\n  }\n\n  return querySingle<T>(element, slotSelector, options);\n}\n\nfunction getDirectChildren<T extends Element = Element>(el: Element, selector: string): T[] {\n  return el ? (Array.from(el.children || []) as T[]).filter((child) => child?.matches(selector)) : [];\n}\n\nfunction queryMultiple<T extends Element = Element>(\n  element: Element,\n  slotSelector: string,\n  options?: GetSlottedOptions,\n): T[] {\n  let matches =\n    slotSelector === defaultSlotSelector\n      ? getDirectChildren<T>(element, defaultSlotSelector)\n      : Array.from(element.querySelectorAll<T>(slotSelector));\n\n  matches = options && options.direct === false ? matches : matches.filter((el) => el.parentElement === element);\n\n  matches = options?.matches ? matches.filter((el) => el?.matches(options.matches)) : matches;\n\n  const selector = options?.selector;\n  return selector\n    ? matches\n        .map((item) => Array.from(item.querySelectorAll<T>(selector)))\n        .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], [])\n        .filter((match) => !!match)\n    : matches;\n}\n\nfunction querySingle<T extends Element = Element>(\n  element: Element,\n  slotSelector: string,\n  options?: GetSlottedOptions,\n): T | null {\n  let match =\n    slotSelector === defaultSlotSelector\n      ? getDirectChildren<T>(element, defaultSlotSelector)[0] || null\n      : element.querySelector<T>(slotSelector);\n\n  match = options && options.direct === false ? match : match?.parentElement === element ? match : null;\n\n  match = options?.matches ? (match?.matches(options.matches) ? match : null) : match;\n\n  const selector = options?.selector;\n  return selector ? match?.querySelector<T>(selector) : match;\n}\n\n/**\n * Filters direct children.\n *\n * @param {Element} el An element.\n * @param {string} selector The selector.\n * @returns {Element[]} An array of elements.\n */\nexport function filterDirectChildren<T extends Element>(el: Element, selector: string): T[] {\n  return Array.from(el.children).filter((child): child is T => child.matches(selector));\n}\n\n/**\n * Filters an array of HTML elements by the provided css selector string.\n *\n * @param {Element[]} elements An array of elements, such as one returned by HTMLSlotElement.assignedElements().\n * @param {string} selector The CSS selector string to filter the returned elements by.\n * @returns {Element[]} A filtered array of elements.\n */\nexport function filterElementsBySelector<T extends Element>(elements: Element[], selector: string): T[] {\n  return elements.filter((element): element is T => element.matches(selector));\n}\n\n/**\n * Set a default icon from a defined set or allow an override with an icon name string\n *\n * @param {Record<string, string>} iconObject The icon object.\n * @param {string | boolean} iconValue The icon value.\n * @param {string} matchedValue The matched value.\n * @returns {string|undefined} The resulting icon value.\n */\nexport function setRequestedIcon(\n  iconObject: Record<string, IconNameOrString>,\n  iconValue: IconNameOrString | boolean | \"\",\n  matchedValue: string,\n): IconNameOrString | undefined {\n  if (typeof iconValue === \"string\" && iconValue !== \"\") {\n    return iconValue;\n  } else if (iconValue === \"\") {\n    return iconObject[matchedValue];\n  }\n}\n\n/**\n * This helper returns true when two rectangles intersect.\n *\n * @param {DOMRect} rect1 The first rectangle.\n * @param {DOMRect} rect2 The second rectangle.\n * @returns {boolean} The result.\n */\nexport function intersects(rect1: DOMRect, rect2: DOMRect): boolean {\n  return !(\n    rect2.left > rect1.right ||\n    rect2.right < rect1.left ||\n    rect2.top > rect1.bottom ||\n    rect2.bottom < rect1.top\n  );\n}\n\n/**\n * This helper makes sure that boolean aria attributes are properly converted to a string.\n *\n * It should only be used for aria attributes that require a string value of \"true\" or \"false\".\n *\n * @param {boolean} value The value.\n * @returns {string} The string conversion of a boolean value (\"true\" | \"false\").\n */\nexport function toAriaBoolean(value: boolean): string {\n  return Boolean(value).toString();\n}\n\n/**\n * This helper returns `true` if the target `slot` element from the `onSlotchange` event has any content (text or elements).\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasContent = slotChangeHasContent(event)} />}\n * ```\n *\n * @param {Event} event The event.\n * @returns {boolean} Whether the slot has any content.\n */\nexport function slotChangeHasContent(event: Event): boolean {\n  return slotChangeHasAssignedElement(event) || slotChangeHasTextContent(event);\n}\n\n/**\n * This helper returns a string of textContent if the target `slot` element from the `onSlotchange` event has any text content.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotText = slotChangeGetTextContent(event)} />}\n * ```\n *\n * @param {Event} event The event.\n * @returns {string} The slots text.\n */\nexport function slotChangeGetTextContent(event: Event): string {\n  return slotChangeGetAssignedNodes(event)\n    .filter((node) => node.nodeType === Node.TEXT_NODE)\n    .map((node) => node.textContent)\n    .join(\"\")\n    .trim();\n}\n\n/**\n * This helper returns `true` if the target `slot` element from the `onSlotchange` event has any text content.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasTextContent = slotChangeHasTextContent(event)} />}\n * ```\n *\n * @param {Event} event The event.\n * @returns {boolean} Whether the slot has any text content.\n */\nexport function slotChangeHasTextContent(event: Event): boolean {\n  return !!slotChangeGetTextContent(event);\n}\n\n/**\n * This helper returns `true` if the target `slot` element from the `onSlotchange` event has an assigned node.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasNode = slotChangeHasAssignedNode(event)} />}\n * ```\n *\n * @param {Event} event The event.\n * @returns {boolean} Whether the slot has any assigned nodes.\n */\nexport function slotChangeHasAssignedNode(event: Event): boolean {\n  return !!slotChangeGetAssignedNodes(event).length;\n}\n\n/**\n * This helper returns the assigned nodes on a `slot` element from the `onSlotchange` event.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotNodes = slotChangeGetAssignedNodes(event)} />}\n * ```\n *\n * @param {Event} event The event.\n * @returns {boolean} Whether the slot has any assigned nodes.\n */\nexport function slotChangeGetAssignedNodes(event: Event): Node[] {\n  return (event.currentTarget as HTMLSlotElement).assignedNodes({\n    flatten: true,\n  });\n}\n\n/**\n * This helper returns `true` if the target `slot` element from the `onSlotchange` event has an assigned element.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n *\n * @param {Event} event The event.\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nexport function slotChangeHasAssignedElement(event: Event): boolean {\n  return !!slotChangeGetAssignedElements(event).length;\n}\n\n/**\n * This helper returns the assigned elements on a `slot` element from the `onSlotchange` event.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotElements = slotChangeGetAssignedElements(event)} />}\n * ```\n *\n * @param {Event} event The event.\n * @param {string} selector The CSS selector string to filter the returned elements by.\n * @returns {Element[]} An array of elements.\n */\nexport function slotChangeGetAssignedElements<T extends Element>(event: Event, selector?: string): T[] | null {\n  return getSlotAssignedElements(event.target as HTMLSlotElement, selector);\n}\n\n/**\n * This helper returns the assigned elements on a `slot` element, filtered by an optional css selector.\n *\n * @param {HTMLSlotElement} slot The slot element.\n * @param {string} selector CSS selector string to filter the returned elements by.\n * @returns {Element[]} An array of elements.\n */\nexport function getSlotAssignedElements<T extends Element>(slot: HTMLSlotElement, selector?: string): T[] | null {\n  const assignedElements = slot.assignedElements({\n    flatten: true,\n  });\n  return selector ? filterElementsBySelector<T>(assignedElements, selector) : (assignedElements as T[]);\n}\n\n/**\n * This helper returns true if the pointer event fired from the primary button of the device.\n *\n * See https://www.w3.org/TR/pointerevents/#the-button-property.\n *\n * @param {PointerEvent} event The pointer event.\n * @returns {boolean} The value.\n */\nexport function isPrimaryPointerButton(event: PointerEvent): boolean {\n  return !!(event.isPrimary && event.button === 0);\n}\n\n/**\n * This helper returns true if the mouse event was triggered by a keyboard click.\n *\n * @param {MouseEvent} event The mouse event.\n * @returns {boolean} The value.\n */\nexport function isKeyboardTriggeredClick(event: MouseEvent): boolean {\n  // we assume event.detail = 0 is a keyboard click\n  // see https://www.w3.org/TR/uievents/#event-type-click\n  // see https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#usage_notes\n  return event.detail === 0;\n}\n\nexport type FocusElementInGroupDestination = \"first\" | \"last\" | \"next\" | \"previous\";\n\n/**\n * This helper sets focus on and returns a destination element from within a group of provided elements.\n *\n * @param {Element[]} elements An array of elements.\n * @param {Element} currentElement The current element.\n * @param {FocusElementInGroupDestination} destination The target destination element to focus.\n * @param {boolean} cycle Should navigation cycle through elements or stop at extent - defaults to true.\n * @returns {Element} The focused element\n */\nexport const focusElementInGroup = <T extends Element = Element>(\n  elements: Element[],\n  currentElement: Element,\n  destination: FocusElementInGroupDestination,\n  cycle = true,\n): T => {\n  const currentIndex = elements.indexOf(currentElement);\n  const isFirstItem = currentIndex === 0;\n  const isLastItem = currentIndex === elements.length - 1;\n  if (cycle) {\n    destination =\n      destination === \"previous\" && isFirstItem ? \"last\" : destination === \"next\" && isLastItem ? \"first\" : destination;\n  }\n\n  let focusTarget;\n  if (destination === \"previous\") {\n    focusTarget = elements[currentIndex - 1] || elements[cycle ? elements.length - 1 : currentIndex];\n  } else if (destination === \"next\") {\n    focusTarget = elements[currentIndex + 1] || elements[cycle ? 0 : currentIndex];\n  } else if (destination === \"last\") {\n    focusTarget = elements[elements.length - 1];\n  } else {\n    focusTarget = elements[0];\n  }\n\n  focusElement(focusTarget);\n  return focusTarget;\n};\n\n/**\n * This helper determines if an element is before another element in the DOM.\n *\n * @param a the reference element to compare\n * @param b the element to compare against\n *\n * @returns true when a is before b in the DOM\n */\nexport function isBefore(a: HTMLElement, b: HTMLElement): boolean {\n  if (a.parentNode !== b.parentNode) {\n    return false;\n  }\n\n  const children = Array.from(a.parentNode.children);\n  return children.indexOf(a) < children.indexOf(b);\n}\n\n/**\n * This util helps determine when an animation has completed.\n *\n * @param targetEl The element to watch for the animation to complete.\n * @param animationName The name of the animation to watch for completion.\n * @param onStart A callback to run when the animation starts.\n * @param onEnd A callback to run when the animation ends or is canceled.\n */\nexport async function whenAnimationDone(\n  targetEl: HTMLElement,\n  animationName: string,\n  onStart?: () => void,\n  onEnd?: () => void,\n): Promise<void> {\n  return whenTransitionOrAnimationDone(targetEl, animationName, \"animation\", onStart, onEnd);\n}\n\n/**\n * This util helps determine when a transition has completed.\n *\n * @param targetEl The element to watch for the transition to complete.\n * @param transitionProp The name of the transition to watch for completion.\n * @param onStart A callback to run when the transition starts.\n * @param onEnd A callback to run when the transition ends or is canceled.\n */\nexport async function whenTransitionDone(\n  targetEl: HTMLElement,\n  transitionProp: string,\n  onStart?: () => void,\n  onEnd?: () => void,\n): Promise<void> {\n  return whenTransitionOrAnimationDone(targetEl, transitionProp, \"transition\", onStart, onEnd);\n}\n\ntype TransitionOrAnimation = \"transition\" | \"animation\";\ntype TransitionOrAnimationEvent = TransitionEvent | AnimationEvent;\n\n/**\n * This util helps determine when a transition has completed.\n *\n * @param targetEl The element to watch for the transition or animation to complete.\n * @param transitionPropOrAnimationName The transition or animation property to watch for completion.\n * @param type The type of property to watch for completion. Defaults to \"transition\".\n * @param onStart A callback to run when the transition or animation starts.\n * @param onEnd A callback to run when the transition or animation ends or is canceled.\n */\nexport async function whenTransitionOrAnimationDone(\n  targetEl: HTMLElement,\n  transitionPropOrAnimationName: string,\n  type: TransitionOrAnimation,\n  onStart?: () => void,\n  onEnd?: () => void,\n): Promise<void> {\n  const style = window.getComputedStyle(targetEl);\n  const allDurations = type === \"transition\" ? style.transitionDuration : style.animationDuration;\n  const allProps = type === \"transition\" ? style.transitionProperty : style.animationName;\n\n  const allDurationsArray = allDurations.split(\",\");\n  const allPropsArray = allProps.split(\",\").map((prop) => prop.trim());\n  const propIndex = allPropsArray.indexOf(transitionPropOrAnimationName);\n  const duration =\n    allDurationsArray[propIndex] ??\n    /* Safari will have a single duration value for the shorthand prop when multiple, separate names/props are defined,\n            so we fall back to it if there's no matching prop duration */\n    allDurationsArray[0];\n\n  function triggerFallbackStartEnd(): void {\n    // offset callbacks by a frame to simulate event counterparts\n    requestAnimationFrame(() => {\n      onStart?.();\n\n      requestAnimationFrame(() => onEnd?.());\n    });\n  }\n\n  if (duration === \"0s\") {\n    triggerFallbackStartEnd();\n    return;\n  }\n\n  const startEvent = type === \"transition\" ? \"transitionstart\" : \"animationstart\";\n  const endEvent = type === \"transition\" ? \"transitionend\" : \"animationend\";\n  const cancelEvent = type === \"transition\" ? \"transitioncancel\" : \"animationcancel\";\n\n  return new Promise<void>((resolve) => {\n    const fallbackTimeoutId = window.setTimeout(\n      (): void => {\n        targetEl.removeEventListener(startEvent, onTransitionOrAnimationStart);\n        targetEl.removeEventListener(endEvent, onTransitionOrAnimationEndOrCancel);\n        targetEl.removeEventListener(cancelEvent, onTransitionOrAnimationEndOrCancel);\n        triggerFallbackStartEnd();\n        resolve();\n      },\n      parseFloat(duration) * 1000,\n    );\n\n    targetEl.addEventListener(startEvent, onTransitionOrAnimationStart);\n    targetEl.addEventListener(endEvent, onTransitionOrAnimationEndOrCancel);\n    targetEl.addEventListener(cancelEvent, onTransitionOrAnimationEndOrCancel);\n\n    function onTransitionOrAnimationStart(event: TransitionOrAnimationEvent): void {\n      if (event.target === targetEl && getTransitionOrAnimationName(event) === transitionPropOrAnimationName) {\n        window.clearTimeout(fallbackTimeoutId);\n        targetEl.removeEventListener(startEvent, onTransitionOrAnimationStart);\n        onStart?.();\n      }\n    }\n\n    function onTransitionOrAnimationEndOrCancel(event: TransitionOrAnimationEvent): void {\n      if (event.target === targetEl && getTransitionOrAnimationName(event) === transitionPropOrAnimationName) {\n        targetEl.removeEventListener(endEvent, onTransitionOrAnimationEndOrCancel);\n        targetEl.removeEventListener(cancelEvent, onTransitionOrAnimationEndOrCancel);\n        onEnd?.();\n        resolve();\n      }\n    }\n  });\n}\n\nfunction isTransitionEvent(event: TransitionOrAnimationEvent): event is TransitionEvent {\n  return \"propertyName\" in event;\n}\n\nfunction getTransitionOrAnimationName(event: TransitionOrAnimationEvent): string {\n  return isTransitionEvent(event) ? event.propertyName : event.animationName;\n}\n"]}