{"version":3,"file":"interactive.js","sourceRoot":"","sources":["../../../src/utils/interactive.tsx"],"names":[],"mappings":"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","sourcesContent":["import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (interactiveElement.disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nexport interface InteractiveContainerProps extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport const InteractiveContainer: FunctionalComponent<InteractiveContainerProps> = (\n  { disabled },\n  children: VNode[],\n): VNode => (\n  <div class={CSS.container} inert={disabled}>\n    {...children}\n  </div>\n);\n"]}