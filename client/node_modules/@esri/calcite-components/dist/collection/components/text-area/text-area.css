/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:18 GMT
 */
/* mixins & extensions */
/* helper to properly scale internal durations */
/**
* Currently only used in Checkbox.
*/
:host([disabled]) {
  cursor: default;
  -webkit-user-select: none;
          user-select: none;
  opacity: var(--calcite-opacity-disabled);
}

:host([disabled]) *,
:host([disabled]) ::slotted(*) {
  pointer-events: none;
}

/**
* CSS Custom Properties
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-text-area-background-color: Specifies the component's background color.
* @prop --calcite-text-area-border-color: Specifies the component's text area border color.
* @prop --calcite-text-area-character-limit-text-color: Specifies the color of the character limit text displayed in the footer of the component.
* @prop --calcite-text-area-divider-color: Specifies the color of the divider between the text area and footer.
* @prop --calcite-text-area-font-size: Specifies the font size of the text area and footer.
* @prop --calcite-text-area-max-height: Specifies the component's text area maximum height.
* @prop --calcite-text-area-min-height: Specifies the component's text area minimum height.
* @prop --calcite-text-area-max-width: Specifies the component's text area maximum width.
* @prop --calcite-text-area-min-width: Specifies the component's text area minimum width.
* @prop --calcite-text-area-text-color: Specifies the component's text color.
* @prop --calcite-text-area-footer-border-color: Specifies the footer's border color.
*/
:host {
  position: relative;
  display: inline-block;
  block-size: 100%;
  inline-size: 100%;
  --calcite-internal-text-area-border-color: var(--calcite-text-area-border-color, var(--calcite-color-border-input));
  --calcite-internal-text-area-footer-border-color: var(
    --calcite-text-area-footer-border-color,
    var(--calcite-internal-text-area-border-color)
  );
}

.text-area,
.footer {
  font-size: var(--calcite-text-area-font-size, var(--calcite-font-size--1));
  background-color: var(--calcite-text-area-background-color, var(--calcite-color-foreground-1));
  padding-block: var(--calcite-spacing-sm);
  padding-inline: var(--calcite-spacing-md);
}

.text-area {
  position: relative;
  margin: 0px;
  box-sizing: border-box;
  display: block;
  inline-size: 100%;
  font-family: var(--calcite-font-family);
  --calcite-internal-text-area-border-block-end-color: var(--calcite-internal-text-area-border-color);
  border: var(--calcite-border-width-sm) solid var(--calcite-internal-text-area-border-color);
  border-block-end-color: var(--calcite-internal-text-area-border-block-end-color);
  color: var(--calcite-text-area-text-color, var(--calcite-color-text-1));
  font-family: var(--calcite-sans-family);
  max-block-size: var(--calcite-text-area-max-height);
  min-block-size: var(--calcite-text-area-min-height);
  max-inline-size: var(--calcite-text-area-max-width);
  min-inline-size: var(--calcite-text-area-min-width, 12rem);
}
.text-area::placeholder {
  font-weight: var(--calcite-font-weight-normal);
}
@media screen and (max-width: 480px) {
  .text-area {
    resize: none;
  }
}
.text-area:focus {
  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
}
.text-area.text-area--invalid {
  --calcite-internal-text-area-border-color: var(--calcite-color-status-danger);
}
.text-area.text-area--invalid:focus {
  outline: 2px solid var(--calcite-color-status-danger);
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
}
.text-area.footer--slotted {
  min-inline-size: 18rem;
}
.text-area:not(.text-area--only, .text-area--invalid) {
  --calcite-internal-text-area-border-block-end-color: var(
    --calcite-text-area-divider-color,
    var(--calcite-color-border-3)
  );
}

.footer {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  border: var(--calcite-border-width-sm) solid var(--calcite-internal-text-area-footer-border-color);
  border-block-start: var(--calcite-border-width-none);
  min-block-size: 2.25rem;
}

.character-limit {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  white-space: nowrap;
  font-size: var(--calcite-text-area-font-size, var(--calcite-font-size--1));
  font-weight: var(--calcite-font-weight-regular);
  color: var(--calcite-text-area-character-limit-text-color, var(--calcite-color-text-2));
  padding-inline-start: var(--calcite-spacing-md);
}

.character--over-limit {
  font-weight: var(--calcite-font-weight-bold);
  color: var(--calcite-color-status-danger);
}

.readonly {
  background-color: var(--calcite-color-background);
  font-weight: var(--calcite-font-weight-medium);
}

.content,
.hide {
  display: none;
}

.container {
  display: flex;
  inline-size: 100%;
  justify-content: space-between;
}

.footer--end-only {
  justify-content: flex-end;
}

.assistive-text {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.text-area.text-area--only {
  block-size: 100%;
}

:host([resize=none]) .text-area {
  resize: none;
}

:host([resize=horizontal]) .text-area {
  resize: horizontal;
}

:host([resize=vertical]) .text-area {
  resize: vertical;
}

:host([scale=s]) .text-area,
:host([scale=s]) .footer,
:host([scale=s]) .character-limit {
  padding-inline-start: 0.5rem;
  font-size: var(--calcite-text-area-font-size, var(--calcite-font-size--2));
}
:host([scale=s]) .footer {
  min-block-size: 1.75rem;
}
:host([scale=s]) .text-area {
  padding-block: 0.25rem;
  padding-inline: 0.5rem;
}

:host([scale=m]) .text-area {
  padding-block: 0.5rem;
  padding-inline: 0.75rem;
}
:host([scale=m]) .footer {
  padding-block: 0.5rem;
  padding-inline: 0.75rem;
  min-block-size: 2.25rem;
}

:host([scale=l]) .text-area,
:host([scale=l]) .footer {
  font-size: var(--calcite-text-area-font-size, var(--calcite-font-size-0));
  padding-block: var(--calcite-spacing-md);
  padding-inline: var(--calcite-spacing-xl);
}
:host([scale=l]) .footer {
  min-block-size: 2.75rem;
}
:host([scale=l]) .text-area,
:host([scale=l]) .footer,
:host([scale=l]) .character-limit {
  font-size: var(--calcite-text-area-font-size, var(--calcite-font-size-0));
  padding-inline-start: var(--calcite-spacing-xl);
}

:host([status=invalid]) {
  --calcite-internal-text-area-border-color: var(--calcite-color-status-danger);
}
:host([status=invalid]) .text-area:focus {
  outline: 2px solid var(--calcite-color-status-danger);
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
}

:host([disabled]) .text-area,
:host([disabled]) .footer {
  opacity: var(--calcite-opacity-half);
}

.validation-container {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  align-self: stretch;
}

:host([scale=m]) .validation-container,
:host([scale=l]) .validation-container {
  padding-block-start: 0.5rem;
}

:host([scale=s]) .validation-container {
  padding-block-start: 0.25rem;
}

::slotted(input[slot=hidden-form-input]) {
  margin: 0 !important;
  opacity: 0 !important;
  outline: none !important;
  padding: 0 !important;
  position: absolute !important;
  inset: 0 !important;
  transform: none !important;
  -webkit-appearance: none !important;
  z-index: -1 !important;
}

:host([disabled]) ::slotted([calcite-hydrated][disabled]),
:host([disabled]) [calcite-hydrated][disabled] {
  /* prevent opacity stacking */
  opacity: 1;
}

.interaction-container {
  display: contents;
}

:host([hidden]) {
  display: none;
}

[hidden] {
  display: none;
}