/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:18 GMT
 */
/* mixins & extensions */
/* helper to properly scale internal durations */
/**
* Currently only used in Checkbox.
*/
:host([disabled]) {
  cursor: default;
  -webkit-user-select: none;
          user-select: none;
  opacity: var(--calcite-opacity-disabled);
}

:host([disabled]) *,
:host([disabled]) ::slotted(*) {
  pointer-events: none;
}

/**
* CSS Custom Properties  
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-handle-background-color: Specifies the component's background color.
* @prop --calcite-handle-background-color-hover: Specifies the component's background color on hover.
* @prop --calcite-handle-background-color-selected: Specifies the component's background color when selected.
* @prop --calcite-handle-icon-color: Specifies the component's icon color.
* @prop --calcite-handle-icon-color-hover: Specifies the component's icon color on hover.
* @prop --calcite-handle-icon-color-selected: Specifies the component's icon color when selected.
*/
:host {
  display: flex;
}

.handle {
  display: flex;
  align-items: center;
  justify-content: center;
  align-self: stretch;
  border-style: none;
  outline-color: transparent;
  color: var(--calcite-handle-icon-color, var(--calcite-color-border-input));
  background-color: var(--calcite-handle-background-color, transparent);
  padding-block: 0.75rem;
  padding-inline: 0.25rem;
  line-height: 0;
}
.handle calcite-icon {
  color: inherit;
}

:host(:not([disabled])) .handle {
  cursor: move;
}
:host(:not([disabled])) .handle:hover {
  color: var(--calcite-handle-icon-color-hover, var(--calcite-color-text-1));
  background-color: var(--calcite-handle-background-color-hover, var(--calcite-color-foreground-2));
}
:host(:not([disabled])) .handle:focus {
  outline: 2px solid var(--calcite-ui-focus-color, var(--calcite-color-brand));
  outline-offset: calc(
            -2px *
            calc(
              1 -
              2 * clamp(
                0,
                var(--calcite-offset-invert-focus),
                1
              )
            )
          );
  color: var(--calcite-handle-icon-color-hover, var(--calcite-color-text-1));
}
:host(:not([disabled])) .handle--selected {
  color: var(--calcite-handle-icon-color-selected, var(--calcite-color-text-1));
  background-color: var(--calcite-handle-background-color-selected, var(--calcite-color-foreground-3));
}

:host([disabled]) ::slotted([calcite-hydrated][disabled]),
:host([disabled]) [calcite-hydrated][disabled] {
  /* prevent opacity stacking */
  opacity: 1;
}

.interaction-container {
  display: contents;
}

:host([hidden]) {
  display: none;
}

[hidden] {
  display: none;
}