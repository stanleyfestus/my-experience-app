/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:18 GMT
 */
/* mixins & extensions */
/* helper to properly scale internal durations */
/**
* Currently only used in Checkbox.
*/
:host {
  /* Base ":host" styles for the component */
  box-sizing: border-box;
  background-color: var(--calcite-color-foreground-1);
  color: var(--calcite-color-text-2);
  font-size: var(--calcite-font-size--1);
}
:host * {
  box-sizing: border-box;
}

/**
* CSS Custom Properties
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-action-pad-corner-radius: Specifies the component's border radius.
* @prop --calcite-action-pad-expanded-max-width: When `layout` is `"vertical"`, specifies the component's maximum width when `expanded`.
* @prop --calcite-action-pad-items-space: Specifies the component's space between slotted components.
*/
:host {
  display: block;
}
@keyframes in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
:host {
  animation: in var(--calcite-internal-animation-timing-slow) ease-in-out;
  border-radius: var(--calcite-action-pad-corner-radius, 0.125rem);
  background: transparent;
}

:host([expanded][layout=vertical]) .container {
  max-inline-size: var(--calcite-action-pad-expanded-max-width, auto);
}

:host([layout=vertical]) ::slotted(calcite-action-group:not(:last-of-type)) {
  border-block-end-width: 1px;
}

.container {
  display: inline-flex;
  flex-direction: column;
  overflow-y: auto;
  --tw-shadow: 0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);
  --tw-shadow-colored: 0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  gap: var(--calcite-action-pad-items-space, 0);
  border-radius: calc(var(--calcite-action-pad-corner-radius, 0.125rem) * 2);
  background-color: var(--calcite-action-background-color, var(--calcite-color-foreground-1));
}

.action-group--bottom {
  flex-grow: 1;
  justify-content: flex-end;
  padding-block-end: 0px;
}

:host([layout=horizontal]) .container {
  flex-direction: row;
}
:host([layout=horizontal]) .container .action-group--bottom {
  padding: 0px;
}
:host([layout=horizontal]) .container ::slotted(calcite-action-group:not(:last-of-type)) {
  border-inline-end-width: 1px;
}

:host([hidden]) {
  display: none;
}

[hidden] {
  display: none;
}