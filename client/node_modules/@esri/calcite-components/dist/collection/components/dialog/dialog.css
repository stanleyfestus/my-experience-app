/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:20 GMT
 */
/**
 * Do not edit directly
 * Generated on Thu, 24 Oct 2024 00:22:18 GMT
 */
/* mixins & extensions */
/* helper to properly scale internal durations */
/**
* Currently only used in Checkbox.
*/
/**
* CSS Custom Properties
*
* These properties can be overridden using the component's tag as selector.
*
* @prop --calcite-dialog-scrim-background-color: Specifies the background color of the component's scrim.
* @prop --calcite-dialog-size-x: Specifies the width of the component, using `px`, `em`, `rem`, `vw`, or `%`. Does not exceed the viewport's width - applies when `placement="cover"` is set.
* @prop --calcite-dialog-min-size-x: Specifies the minimum width of the component, using `px`, `em`, `rem`, `vw`, or `%`.
* @prop --calcite-dialog-max-size-x: Specifies the maximum width of the component, using `px`, `em`, `rem`, `vw`, or `%`.
* @prop --calcite-dialog-size-y: Specifies the height of the component, using `px`, `em`, `rem`, `vh`, or `%`. Does not exceed the viewport's height - applies when `placement="cover"` is set.
* @prop --calcite-dialog-min-size-y: Specifies the minimum height of the component, using `px`, `em`, `rem`, `vh`, or `%`.
* @prop --calcite-dialog-max-size-y: Specifies the maximum height of the component, using `px`, `em`, `rem`, `vh`, or `%`.
* @prop --calcite-dialog-content-space: Specifies the padding of the component's content.
* @prop --calcite-dialog-footer-space: Specifies the padding of the component's footer.
* @prop --calcite-dialog-border-color: Specifies the component's border color.
* @prop --calcite-dialog-offset-x: Specifies the horizontal offset of the component.
* @prop --calcite-dialog-offset-y: Specifies the vertical offset of the component.
* @prop --calcite-dialog-background-color: Specifies the background color of the component.
*/
:host {
  --calcite-dialog-scrim-background-color: rgba(0, 0, 0, 0.85);
  pointer-events: none;
  inset: 0px;
  z-index: var(--calcite-z-index-overlay);
  display: flex;
  --calcite-internal-dialog-animation-offset: 20px;
}

:host([modal]) {
  position: absolute;
}

.container {
  pointer-events: auto;
  position: fixed;
  inset: 0px;
  z-index: var(--calcite-z-index-overlay);
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  color: var(--calcite-color-text-2);
  opacity: 0;
  visibility: hidden;
  transition: visibility 0ms linear var(--calcite-internal-animation-timing-slow), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);
}

:host([placement=top]) .container {
  align-items: flex-start;
  justify-content: center;
}

:host([placement=top-start]) .container {
  align-items: flex-start;
  justify-content: flex-start;
}

:host([placement=top-end]) .container {
  align-items: flex-start;
  justify-content: flex-end;
}

:host([placement=bottom]) .container {
  align-items: flex-end;
  justify-content: center;
}

:host([placement=bottom-start]) .container {
  align-items: flex-end;
  justify-content: flex-start;
}

:host([placement=bottom-end]) .container {
  align-items: flex-end;
  justify-content: flex-end;
}

:host(:not([modal])) .container {
  pointer-events: none;
}

:host([scale=s]) {
  --calcite-internal-dialog-content-padding: var(--calcite-dialog-content-space, var(--calcite-spacing-sm));
  --calcite-internal-dialog-min-size-x: 198px;
  --calcite-internal-dialog-min-size-y: 140px;
}

:host([scale=m]) {
  --calcite-internal-dialog-content-padding: var(--calcite-dialog-content-space, var(--calcite-spacing-md));
  --calcite-internal-dialog-min-size-x: 288px;
  --calcite-internal-dialog-min-size-y: 180px;
}

:host([scale=l]) {
  --calcite-internal-dialog-content-padding: var(--calcite-dialog-content-space, var(--calcite-spacing-lg));
  --calcite-internal-dialog-min-size-x: 388px;
  --calcite-internal-dialog-min-size-y: 220px;
}

.scrim {
  --calcite-scrim-background: var(--calcite-dialog-scrim-background-color, var(--calcite-color-transparent-scrim));
  --calcite-scrim-background-color: var(
    --calcite-dialog-scrim-background-color,
    var(--calcite-color-transparent-scrim)
  );
  position: fixed;
  inset: 0px;
  display: flex;
  overflow-y: hidden;
}

calcite-panel {
  --calcite-panel-content-space: var(--calcite-dialog-content-space, var(--calcite-internal-dialog-content-padding));
  --calcite-panel-footer-padding: var(--calcite-dialog-footer-space);
  --calcite-panel-header-border-block-end: var(--calcite-border-width-sm) solid var(--calcite-dialog-border-color);
  --calcite-panel-background-color: var(--calcite-dialog-background-color);
}

.dialog {
  pointer-events: none;
  position: relative;
  z-index: var(--calcite-z-index-modal);
  margin: 1.5rem;
  box-sizing: border-box;
  display: flex;
  inline-size: 100%;
  flex-direction: column;
  border-radius: 0.25rem;
  opacity: 0;
  --tw-shadow: 0 2px 12px -4px rgba(0, 0, 0, 0.2), 0 2px 4px -2px rgba(0, 0, 0, 0.16);
  --tw-shadow-colored: 0 2px 12px -4px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  -webkit-overflow-scrolling: touch;
  visibility: hidden;
  transition: inset-block var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);
  min-inline-size: var(--calcite-dialog-min-size-x, var(--calcite-internal-dialog-min-size-x));
  max-inline-size: var(--calcite-dialog-max-size-x, 100%);
  min-block-size: var(--calcite-dialog-min-size-y, var(--calcite-internal-dialog-min-size-y));
  max-block-size: var(--calcite-dialog-max-size-y, 100%);
  --calcite-internal-dialog-hidden-position: calc(
    var(--calcite-dialog-offset-y, 0px) + var(--calcite-internal-dialog-animation-offset)
  );
  --calcite-internal-dialog-shown-position: var(--calcite-dialog-offset-y, 0);
  inset-inline-start: var(--calcite-dialog-offset-x, 0);
  inset-block-start: var(--calcite-internal-dialog-hidden-position);
}
.dialog--opening-active {
  inset-block-start: var(--calcite-internal-dialog-shown-position);
}

:host([menu-open]) .dialog {
  transition: visibility 0ms linear var(--calcite-internal-animation-timing-slow), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);
}

.panel {
  border-radius: 0.25rem;
}

.container--open {
  opacity: 1;
  visibility: visible;
  transition-delay: 0ms;
}
.container--open .dialog {
  pointer-events: auto;
  visibility: visible;
  opacity: 1;
  transition: inset-block var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88), opacity var(--calcite-internal-animation-timing-slow) cubic-bezier(0.215, 0.44, 0.42, 0.88);
  transition-delay: 0ms;
}

/**
 * Sizes
 */
:host([width=small]) .dialog {
  inline-size: auto;
}

:host([width-scale=s]) .dialog {
  inline-size: var(--calcite-dialog-size-x, 32rem);
  block-size: var(--calcite-dialog-size-y, auto);
}

@media screen and (max-width: 35rem) {
  :host([width-scale=s]) .dialog {
    margin: 0px;
    block-size: 100%;
    max-block-size: 100%;
    inline-size: 100%;
    max-inline-size: 100%;
    inset-inline-start: 0;
    inset-block-start: var(--calcite-internal-dialog-animation-offset);
  }
  :host([width-scale=s]) .dialog--opening-active {
    inset-block-start: 0;
  }
}
:host([width-scale=m]) .dialog {
  inline-size: var(--calcite-dialog-size-x, 48rem);
  block-size: var(--calcite-dialog-size-y, auto);
}

@media screen and (max-width: 51rem) {
  :host([width-scale=m]) .dialog {
    margin: 0px;
    block-size: 100%;
    max-block-size: 100%;
    inline-size: 100%;
    max-inline-size: 100%;
    inset-inline-start: 0;
    inset-block-start: var(--calcite-internal-dialog-animation-offset);
  }
  :host([width-scale=m]) .dialog--opening-active {
    inset-block-start: 0;
  }
}
:host([width-scale=l]) .dialog {
  inline-size: var(--calcite-dialog-size-x, 94rem);
  block-size: var(--calcite-dialog-size-y, auto);
}

@media screen and (max-width: 97rem) {
  :host([width-scale=l]) .dialog {
    margin: 0px;
    block-size: 100%;
    max-block-size: 100%;
    inline-size: 100%;
    max-inline-size: 100%;
    inset-inline-start: 0;
    inset-block-start: var(--calcite-internal-dialog-animation-offset);
  }
  :host([width-scale=l]) .dialog--opening-active {
    inset-block-start: 0;
  }
}
/**
 * placement="cover"
 */
:host([placement=cover]) .dialog {
  margin: 0px;
  block-size: 100%;
  max-block-size: 100%;
  inline-size: 100%;
  max-inline-size: 100%;
  border-radius: 0px;
}
:host([placement=cover]) .panel {
  border-radius: 0px;
}

/**
 * Kinds
 */
:host([kind]) .panel {
  border-start-start-radius: 0px;
  border-start-end-radius: 0px;
}

:host([kind=brand]) .dialog {
  border-color: var(--calcite-color-brand);
}

:host([kind=danger]) .dialog {
  border-color: var(--calcite-color-status-danger);
}

:host([kind=info]) .dialog {
  border-color: var(--calcite-color-status-info);
}

:host([kind=success]) .dialog {
  border-color: var(--calcite-color-status-success);
}

:host([kind=warning]) .dialog {
  border-color: var(--calcite-color-status-warning);
}

:host([kind=brand][open]) .dialog,
:host([kind=danger][open]) .dialog,
:host([kind=info][open]) .dialog,
:host([kind=success][open]) .dialog,
:host([kind=warning][open]) .dialog {
  border-width: 0px;
  border-block-start-width: 4px;
  border-style: solid;
}

.container--embedded {
  position: absolute;
  pointer-events: auto;
}
.container--embedded calcite-scrim {
  position: absolute;
}

.assistive-text {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

:host([hidden]) {
  display: none;
}

[hidden] {
  display: none;
}