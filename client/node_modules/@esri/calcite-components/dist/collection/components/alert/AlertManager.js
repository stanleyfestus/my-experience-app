/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.13.2
 */
export const alertQueueTimeoutMs = 300;
export default class AlertManager {
    constructor() {
        // --------------------------------------------------------------------------
        //
        //  Private Properties
        //
        // --------------------------------------------------------------------------
        this.registeredElements = [];
        this.queueTimeoutId = null;
    }
    // --------------------------------------------------------------------------
    //
    //  Public Methods
    //
    // --------------------------------------------------------------------------
    registerElement(alert) {
        const { registeredElements } = this;
        if (!registeredElements.includes(alert)) {
            switch (alert.queue) {
                case "immediate":
                    registeredElements.unshift(alert);
                    break;
                case "next":
                    registeredElements.splice(1, 0, alert);
                    break;
                case "last":
                    registeredElements.push(alert);
                    break;
            }
            this.updateAlerts();
        }
    }
    unregisterElement(alert) {
        const { registeredElements } = this;
        const index = registeredElements.indexOf(alert);
        if (index !== -1) {
            registeredElements.splice(index, 1);
        }
        alert.active = false;
        this.updateAlerts();
    }
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    updateAlerts() {
        window.clearTimeout(this.queueTimeoutId);
        this.queueTimeoutId = null;
        this.registeredElements.forEach((alert, index) => {
            alert.openAlertCount = this.registeredElements.length;
            if (index === 0) {
                this.queueTimeoutId = window.setTimeout(() => (alert.active = true), alertQueueTimeoutMs);
            }
            else {
                alert.active = false;
            }
        });
    }
}
//# sourceMappingURL=AlertManager.js.map
