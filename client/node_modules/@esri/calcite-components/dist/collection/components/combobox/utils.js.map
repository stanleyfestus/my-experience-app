{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/components/combobox/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAEhD,OAAO,EAAE,qBAAqB,EAAE,MAAM,aAAa,CAAC;AAGpD,MAAM,UAAU,YAAY,CAAC,OAAoB;IAC/C,MAAM,MAAM,GAAyB,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAC3F,MAAM,WAAW,GAAyB,MAAM,EAAE,aAAa,EAAE,OAAO,CAAC,qBAAqB,CAAC,CAAC;IAChG,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,IAAoC;IACnE,OAAO,CACL,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,EAAE,EAAwC,EAAE,CAAC,EAAE,CAAC,QAAQ,KAAK,uBAAuB,CAAC,IAAI,EAAE,CACpH,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,IAAoC;IAClE,OAAO,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC;AACzE,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAoC;IACpE,MAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC9E,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1D,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,OAAoB;IAC3C,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;QACjB,OAAO,CAAC,CAAC;IACX,CAAC;IAED,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAC9B,yEAAyE,EACzE,OAAO,EACP,IAAI,EACJ,WAAW,CAAC,4BAA4B,EACxC,IAAI,CACL,CAAC;IAEF,OAAO,MAAM,CAAC,cAAc,CAAC;AAC/B,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,aAAwC;IACnE,OAAO,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,IAAoC;IAC3D,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC;AAC7C,CAAC","sourcesContent":["import { nodeListToArray } from \"../../utils/dom\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { ComboboxChildElement } from \"./interfaces\";\nimport { ComboboxChildSelector } from \"./resources\";\nimport { Combobox } from \"./combobox\";\n\nexport function getAncestors(element: HTMLElement): ComboboxChildElement[] {\n  const parent: ComboboxChildElement = element.parentElement?.closest(ComboboxChildSelector);\n  const grandparent: ComboboxChildElement = parent?.parentElement?.closest(ComboboxChildSelector);\n  return [parent, grandparent].filter((el) => el);\n}\n\nexport function getItemAncestors(item: HTMLCalciteComboboxItemElement): HTMLCalciteComboboxItemElement[] {\n  return (\n    item.ancestors?.filter((el): el is HTMLCalciteComboboxItemElement => el.nodeName === \"CALCITE-COMBOBOX-ITEM\") || []\n  );\n}\n\nexport function getItemChildren(item: HTMLCalciteComboboxItemElement): HTMLCalciteComboboxItemElement[] {\n  return nodeListToArray(item.querySelectorAll(\"calcite-combobox-item\"));\n}\n\nexport function hasActiveChildren(node: HTMLCalciteComboboxItemElement): boolean {\n  const items = nodeListToArray(node.querySelectorAll(\"calcite-combobox-item\"));\n  return items.filter((item) => item.selected).length > 0;\n}\n\nexport function getDepth(element: HTMLElement): number {\n  if (!isBrowser()) {\n    return 0;\n  }\n\n  const result = document.evaluate(\n    \"ancestor::calcite-combobox-item | ancestor::calcite-combobox-item-group\",\n    element,\n    null,\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null,\n  );\n\n  return result.snapshotLength;\n}\n\nexport function isSingleLike(selectionMode: Combobox[\"selectionMode\"]): boolean {\n  return selectionMode.includes(\"single\");\n}\n\nexport function getLabel(item: HTMLCalciteComboboxItemElement): string {\n  return item.shortHeading || item.textLabel;\n}\n"]}