/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.13.2
 */
import { Fragment, h } from "@stencil/core";
/**
 * @slot - A slot for adding `calcite-option`s.
 */
export class OptionGroup {
    constructor() {
        this.disabled = false;
        this.label = undefined;
    }
    handlePropChange() {
        this.calciteInternalOptionGroupChange.emit();
    }
    //--------------------------------------------------------------------------
    //
    //  Render Methods
    //
    //--------------------------------------------------------------------------
    render() {
        return (h(Fragment, { key: '174fcf908d37aba0972b1f408938a6ce909e45ff' }, h("div", { key: '49ac7e0b58d14a8d07322c7c68670d9c5863c291' }, this.label), h("slot", { key: '07d24a3a1edf192733bcb3fcdf279f121df482ed' })));
    }
    static get is() { return "calcite-option-group"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["option-group.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["option-group.css"]
        };
    }
    static get properties() {
        return {
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "When `true`, interaction is prevented and the component is displayed with lower opacity."
                },
                "attribute": "disabled",
                "reflect": true,
                "defaultValue": "false"
            },
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Accessible name for the component."
                },
                "attribute": "label",
                "reflect": false
            }
        };
    }
    static get events() {
        return [{
                "method": "calciteInternalOptionGroupChange",
                "name": "calciteInternalOptionGroupChange",
                "bubbles": true,
                "cancelable": false,
                "composed": true,
                "docs": {
                    "tags": [{
                            "name": "internal",
                            "text": undefined
                        }],
                    "text": ""
                },
                "complexType": {
                    "original": "void",
                    "resolved": "void",
                    "references": {}
                }
            }];
    }
    static get watchers() {
        return [{
                "propName": "disabled",
                "methodName": "handlePropChange"
            }, {
                "propName": "label",
                "methodName": "handlePropChange"
            }];
    }
}
//# sourceMappingURL=option-group.js.map
