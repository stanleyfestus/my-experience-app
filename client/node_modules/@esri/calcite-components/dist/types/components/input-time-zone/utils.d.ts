import { SupportedLocale } from "../../utils/locale";
import { OffsetStyle, TimeZone, TimeZoneItem, TimeZoneItemGroup, TimeZoneMode } from "./interfaces";
import { InputTimeZoneMessages } from "./assets/input-time-zone/t9n";
export declare function getUserTimeZoneOffset(): number;
export declare function getUserTimeZoneName(): string;
export declare function getNormalizer(mode: TimeZoneMode): Promise<(timeZone: TimeZone) => TimeZone>;
export declare function createTimeZoneItems(locale: SupportedLocale, messages: InputTimeZoneMessages, mode: TimeZoneMode, referenceDate: Date, standardTime: OffsetStyle): Promise<TimeZoneItem[] | TimeZoneItemGroup[]>;
export declare function getSelectedRegionTimeZoneLabel(city: string, country: string, messages: InputTimeZoneMessages): string;
export declare function getMessageOrKeyFallback(messages: InputTimeZoneMessages, key: string): string;
/**
 * Exported for testing purposes only
 *
 * @internal
 */
export declare function getCity(timeZone: string): string;
/**
 * Exported for testing purposes only
 *
 * @internal
 */
export declare function toUserFriendlyName(timeZoneName: string): string;
export declare function findTimeZoneItemByProp(timeZoneItems: TimeZoneItem[] | TimeZoneItemGroup[], prop: string, valueToMatch: string | number | null): TimeZoneItem | null;
