import { VNode } from "../../stencil-public-runtime";
import { CalciteActionMenuCustomEvent } from "../../components";
import { ConditionalSlotComponent } from "../../utils/conditionalSlot";
import { LoadableComponent } from "../../utils/loadable";
import { LocalizedComponent } from "../../utils/locale";
import { T9nComponent } from "../../utils/t9n";
import { Layout, Scale } from "../interfaces";
import { FlipPlacement, LogicalPlacement, OverlayPositioning } from "../../utils/floating-ui";
import { Columns } from "./interfaces";
import { ActionGroupMessages } from "./assets/action-group/t9n";
/**
 * @slot - A slot for adding a group of `calcite-action`s.
 * @slot menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`.
 * @slot menu-tooltip - A slot for adding a `calcite-tooltip` for the menu.
 */
export declare class ActionGroup implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent {
    /**
     * When `true`, the component is expanded.
     */
    expanded: boolean;
    expandedHandler(): void;
    /**
     *  Accessible name for the component.
     */
    label: string;
    /**
     * Indicates the layout of the component.
     *
     * @deprecated Use the `layout` property on the component's parent instead.
     */
    layout: Extract<"horizontal" | "vertical" | "grid", Layout>;
    /**
     * Indicates number of columns.
     */
    columns: Columns;
    /**
     * When `true`, the `calcite-action-menu` is open.
     */
    menuOpen: boolean;
    /**
     * Determines the type of positioning to use for the overlaid content.
     *
     * Using `"absolute"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.
     * `"fixed"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `"fixed"`.
     *
     */
    overlayPositioning: OverlayPositioning;
    /**
     * Specifies the size of the `calcite-action-menu`.
     */
    scale: Scale;
    /**
     * Specifies the component's fallback menu `placement` when it's initial or specified `placement` has insufficient space available.
     */
    menuFlipPlacements: FlipPlacement[];
    /**
     * Determines where the action menu will be positioned.
     */
    menuPlacement: LogicalPlacement;
    /**
     * Made into a prop for testing purposes only
     *
     * @internal
     */
    messages: ActionGroupMessages;
    /**
     * Use this property to override individual strings used by the component.
     */
    messageOverrides: Partial<ActionGroupMessages>;
    onMessagesChange(): void;
    el: HTMLCalciteActionGroupElement;
    effectiveLocale: string;
    effectiveLocaleChange(): void;
    defaultMessages: ActionGroupMessages;
    hasMenuActions: boolean;
    /** Sets focus on the component's first focusable element. */
    setFocus(): Promise<void>;
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): Promise<void>;
    componentDidLoad(): void;
    renderMenu(): VNode;
    render(): VNode;
    setMenuOpen: (event: CalciteActionMenuCustomEvent<void>) => void;
    handleMenuActionsSlotChange: (event: Event) => void;
}
