{"file":"calcite-accordion-item.js","mappings":"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","names":[],"sources":["src/components/accordion-item/resources.ts","src/components/accordion-item/accordion-item.scss?tag=calcite-accordion-item&encapsulation=shadow","src/components/accordion-item/accordion-item.tsx"],"sourcesContent":["export const SLOTS = {\n  actionsStart: \"actions-start\",\n  actionsEnd: \"actions-end\",\n};\n\nexport const CSS = {\n  actionsEnd: \"actions-end\",\n  actionsStart: \"actions-start\",\n  content: \"content\",\n  description: \"description\",\n  expandIcon: \"expand-icon\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerContent: \"header-content\",\n  headerText: \"header-text\",\n  heading: \"heading\",\n  icon: \"icon\",\n  iconEnd: \"icon--end\",\n  iconStart: \"icon--start\",\n};\n\nexport const IDS = {\n  section: \"section\",\n  sectionToggle: \"section-toggle\",\n};\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-accordion-border-color: [Deprecated] Use `--calcite-accordion-item-border-color`. Specifies the component's border color.\n * @prop --calcite-accordion-item-background-color: Specifies the component's background color.\n * @prop --calcite-accordion-item-border-color: Specifies the component's border color.\n * @prop --calcite-accordion-item-content-space: Specifies the component's padding.\n * @prop --calcite-accordion-item-end-icon-color: Specifies the component's `iconEnd` color. Fallback to `--calcite-accordion-item-icon-color` or current color.\n * @prop --calcite-accordion-item-expand-icon-color: Specifies the component's expand icon color.\n * @prop --calcite-accordion-item-header-background-color: Specifies the component's `heading` background color.\n * @prop --calcite-accordion-item-heading-text-color: Specifies the component's `heading` text color.\n * @prop --calcite-accordion-item-icon-color: Specifies the component's default icon color.\n * @prop --calcite-accordion-item-start-icon-color: Specifies the component's `iconStart` color. Fallback to `--calcite-accordion-item-icon-color` or current color.\n * @prop --calcite-accordion-item-text-color: Specifies the component's text color.\n * @prop --calcite-accordion-text-color-hover: [Deprecated] Use `--calcite-accordion-item-text-color-hover`. Specifies the component's main text color on hover.\n * @prop --calcite-accordion-text-color-pressed: [Deprecated] Use `--calcite-accordion-item-text-color-press`. Specifies the component's main text color when pressed.\n * @prop --calcite-accordion-text-color: [Deprecated] Use `--calcite-accordion-item-text-color`. Specifies the component's text color.\n */\n\n%icon-position {\n  /* icon rotation variables */\n  --calcite-internal-accordion-item-icon-rotation: calc(theme(\"rotate.90\") * -1);\n  --calcite-internal-accordion-item-active-icon-rotation: theme(\"rotate.0\");\n  --calcite-internal-accordion-item-icon-rotation-rtl: theme(\"rotate.90\");\n  --calcite-internal-accordion-item-active-icon-rotation-rtl: theme(\"rotate.0\");\n}\n\n:host {\n  @apply relative\n    flex\n    flex-col\n    no-underline;\n\n  color: var(--calcite-accordion-item-text-color, var(--calcite-accordion-text-color, var(--calcite-color-text-3)));\n  background-color: var(--calcite-accordion-item-background-color);\n  border-width: 0;\n\n  .header {\n    background-color: var(--calcite-accordion-item-header-background-color);\n  }\n}\n\n// icon position variants for child\n.icon-position--start {\n  @extend %icon-position;\n  --calcite-internal-accordion-item-flex-direction: row-reverse;\n  --calcite-internal-accordion-item-icon-spacing-start: 0;\n  --calcite-internal-accordion-item-icon-spacing-end: var(--calcite-internal-accordion-icon-margin);\n}\n\n.icon-position--end {\n  @extend %icon-position;\n  --calcite-internal-accordion-item-flex-direction: row;\n  --calcite-internal-accordion-item-icon-spacing-start: var(--calcite-internal-accordion-icon-margin);\n  --calcite-internal-accordion-item-icon-spacing-end: 0;\n}\n\n.icon-position--end:not(.icon-type--plus-minus) {\n  --calcite-internal-accordion-item-icon-rotation: theme(\"rotate.0\");\n  --calcite-internal-accordion-item-active-icon-rotation: theme(\"rotate.180\");\n  --calcite-internal-accordion-item-icon-rotation-rtl: theme(\"rotate.0\");\n  --calcite-internal-accordion-item-active-icon-rotation-rtl: calc(theme(\"rotate.180\") * -1);\n}\n\n// .header / content\n.content,\n.header {\n  border-block-end-width: var(--calcite-border-width-sm);\n  border-block-end-style: solid;\n  border-color: var(\n    --calcite-accordion-item-border-color,\n    var(--calcite-accordion-border-color, theme(\"borderColor.color.2\"))\n  );\n}\n\n.header-content,\n.content {\n  padding: var(\n    --calcite-accordion-item-content-space,\n    var(\n      --calcite-internal-accordion-item-padding,\n      var(--calcite-internal-accordion-item-spacing-unit, theme(\"spacing.2\") 0.75rem)\n    )\n  );\n}\n\n.header {\n  @apply flex items-stretch;\n\n  * {\n    @apply inline-flex\n      items-center\n      duration-150\n      ease-in-out;\n    @include word-break();\n  }\n}\n\n.header-content {\n  @apply focus-base flex-grow cursor-pointer;\n  flex-direction: var(--calcite-internal-accordion-item-flex-direction);\n  color: var(--calcite-accordion-item-heading-text-color, var(--calcite-accordion-text-color, inherit));\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  // Deprecated\n  &:focus,\n  &:hover,\n  &:active {\n    color: var(\n      --calcite-accordion-item-heading-text-color,\n      var(--calcite-accordion-text-color-hover, var(--calcite-color-text-2))\n    );\n\n    .heading {\n      color: var(\n        --calcite-accordion-item-heading-text-color,\n        var(--calcite-accordion-text-color-pressed, var(--calcite-color-text-1))\n      );\n    }\n  }\n}\n\n.header-container {\n  inline-size: 100%;\n}\n\n// accordion item title\n.header-text {\n  @apply my-0 flex-grow flex-col py-0;\n  text-align: initial;\n  margin-inline-end: theme(\"margin.auto\");\n}\n\n.heading,\n.description {\n  @apply flex w-full;\n}\n\n.heading {\n  @apply font-medium;\n}\n\n.actions-start,\n.actions-end {\n  @apply flex items-center;\n}\n\n.icon {\n  @apply duration-150\n    ease-in-out\n    flex\n    items-center;\n  margin-inline-end: var(--calcite-internal-accordion-item-icon-spacing-start);\n  margin-inline-start: var(--calcite-internal-accordion-item-icon-spacing-end);\n}\n\n.icon--start {\n  color: var(--calcite-accordion-item-start-icon-color, var(--calcite-accordion-item-icon-color, currentColor));\n  margin-inline-end: var(--calcite-internal-accordion-icon-margin);\n}\n\n.icon--end {\n  color: var(--calcite-accordion-item-end-icon-color, var(--calcite-accordion-item-icon-color, currentColor));\n  margin-inline-end: var(--calcite-internal-accordion-icon-margin);\n  margin-inline-start: var(--calcite-internal-accordion-icon-margin);\n}\n\n// accordion item icon\n.expand-icon {\n  color: var(\n    --calcite-accordion-item-expand-icon-color,\n    var(--calcite-accordion-item-text-color, var(--calcite-accordion-text-color, var(--calcite-color-text-3)))\n  );\n  margin-inline-start: var(--calcite-internal-accordion-item-icon-spacing-start);\n  margin-inline-end: var(--calcite-internal-accordion-item-icon-spacing-end);\n  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation));\n}\n\n.calcite--rtl .expand-icon {\n  transform: rotate(var(--calcite-internal-accordion-item-icon-rotation-rtl));\n}\n\n.description {\n  @apply mt-1;\n}\n\n.content {\n  @apply hidden pt-0;\n  text-align: initial;\n}\n\n:host(:not(:focus):not(:hover):not([expanded])) {\n  .heading {\n    color: var(\n      --calcite-accordion-item-heading-text-color,\n      var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2))\n    );\n  }\n}\n\n:host([expanded]) {\n  color: var(\n    --calcite-accordion-item-text-color,\n    var(--calcite-accordion-text-color, var(--calcite-accordion-text-color-pressed, var(--calcite-color-text-1)))\n  );\n\n  .header {\n    border-block-end-color: transparent;\n  }\n\n  .expand-icon {\n    color: var(\n      --calcite-accordion-item-expand-icon-color,\n      var(\n        --calcite-accordion-item-text-color,\n        var(--calcite-accordion-text-color, var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2)))\n      )\n    );\n    transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation));\n  }\n  .calcite--rtl .expand-icon {\n    transform: rotate(var(--calcite-internal-accordion-item-active-icon-rotation-rtl));\n  }\n\n  .description {\n    color: var(\n      --calcite-accordion-item-text-color,\n      var(--calcite-accordion-text-color, var(--calcite-accordion-item-text-color-hover, var(--calcite-color-text-2)))\n    );\n  }\n\n  .content {\n    @apply block;\n  }\n}\n\n@media (forced-colors: active) {\n  :host([expanded]) {\n    & .header {\n      border-block-end: none;\n    }\n    & .heading {\n      /** give visual indicator of expanded state since subtle color changes can't be done **/\n      font-weight: bolder;\n    }\n  }\n  .header-content:hover,\n  .header-content:focus {\n    & .heading {\n      /** give visual indicator of expandability/click-ability since subtle color changes can't be done **/\n      text-decoration: underline;\n    }\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  closestElementCrossShadowBoundary,\n  getElementDir,\n  getSlotted,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { FlipContext, Position, Scale, SelectionMode, IconType } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { SLOTS, CSS, IDS } from \"./resources\";\nimport { RequestedItem } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding custom content, including nested `calcite-accordion-item`s.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component's header.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component's header.\n */\n@Component({\n  tag: \"calcite-accordion-item\",\n  styleUrl: \"accordion-item.scss\",\n  shadow: true,\n})\nexport class AccordionItem implements ConditionalSlotComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is expanded. */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  /** Specifies heading text for the component. */\n  @Prop() heading: string;\n\n  /** Specifies a description for the component. */\n  @Prop() description: string;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: IconNameOrString;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /**\n   * Specifies the placement of the icon in the header inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() iconPosition: Extract<\"start\" | \"end\", Position>;\n\n  /** Specifies the type of the icon in the header inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() iconType: Extract<\"chevron\" | \"caret\" | \"plus-minus\", IconType>;\n\n  /**\n   * The containing `accordion` element.\n   *\n   * @internal\n   */\n  @Prop() accordionParent: HTMLCalciteAccordionElement;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAccordionItemSelect: EventEmitter<RequestedItem>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAccordionItemClose: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderActionsStart(): VNode {\n    const { el } = this;\n    return getSlotted(el, SLOTS.actionsStart) ? (\n      <div class={CSS.actionsStart}>\n        <slot name={SLOTS.actionsStart} />\n      </div>\n    ) : null;\n  }\n\n  renderActionsEnd(): VNode {\n    const { el } = this;\n    return getSlotted(el, SLOTS.actionsEnd) ? (\n      <div class={CSS.actionsEnd}>\n        <slot name={SLOTS.actionsEnd} />\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { iconFlipRtl } = this;\n    const dir = getElementDir(this.el);\n    const iconStartEl = this.iconStart ? (\n      <calcite-icon\n        class={{ [CSS.icon]: true, [CSS.iconStart]: true }}\n        flipRtl={iconFlipRtl === \"both\" || iconFlipRtl === \"start\"}\n        icon={this.iconStart}\n        key=\"icon-start\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const iconEndEl = this.iconEnd ? (\n      <calcite-icon\n        class={{ [CSS.iconEnd]: true, [CSS.icon]: true }}\n        flipRtl={iconFlipRtl === \"both\" || iconFlipRtl === \"end\"}\n        icon={this.iconEnd}\n        key=\"icon-end\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const { description } = this;\n    return (\n      <Host>\n        <div\n          class={{\n            [`icon-position--${this.iconPosition}`]: true,\n            [`icon-type--${this.iconType}`]: true,\n          }}\n        >\n          <div class={{ [CSS.header]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.renderActionsStart()}\n            <div\n              aria-controls={IDS.section}\n              aria-expanded={toAriaBoolean(this.expanded)}\n              class={CSS.headerContent}\n              id={IDS.sectionToggle}\n              onClick={this.itemHeaderClickHandler}\n              ref={this.storeHeaderEl}\n              role=\"button\"\n              tabindex=\"0\"\n            >\n              <div class={CSS.headerContainer}>\n                {iconStartEl}\n                <div class={CSS.headerText}>\n                  <span class={CSS.heading}>{this.heading}</span>\n                  {description ? <span class={CSS.description}>{description}</span> : null}\n                </div>\n                {iconEndEl}\n              </div>\n              <calcite-icon\n                class={CSS.expandIcon}\n                icon={\n                  this.iconType === \"chevron\"\n                    ? \"chevronDown\"\n                    : this.iconType === \"caret\"\n                      ? \"caretDown\"\n                      : this.expanded\n                        ? \"minus\"\n                        : \"plus\"\n                }\n                scale={getIconScale(this.scale)}\n              />\n            </div>\n            {this.renderActionsEnd()}\n          </div>\n          <section aria-labelledby={IDS.sectionToggle} class={CSS.content} id={IDS.section}>\n            <slot />\n          </section>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.emitRequestedItem();\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"calciteInternalAccordionChange\", { target: \"body\" })\n  updateActiveItemOnChange(event: CustomEvent): void {\n    const [accordion] = event.composedPath();\n    const parent = closestElementCrossShadowBoundary(this.el, \"calcite-accordion\");\n\n    if (accordion !== parent) {\n      return;\n    }\n\n    this.determineActiveItem(parent.selectionMode, event.detail.requestedAccordionItem);\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalAccordionItemsSync\", { target: \"document\" })\n  accordionItemSyncHandler(event: CustomEvent): void {\n    const [accordion] = event.composedPath();\n    const accordionItem = this.el;\n\n    // we sync with our accordion parent via event only if the item is wrapped within another component's shadow DOM,\n    // otherwise, the accordion parent will sync the item directly\n\n    const willBeSyncedByDirectParent = accordionItem.parentElement === accordion;\n    if (willBeSyncedByDirectParent) {\n      return;\n    }\n\n    const closestAccordionParent = closestElementCrossShadowBoundary(\n      accordionItem,\n      \"calcite-accordion\",\n    );\n\n    if (accordion !== closestAccordionParent) {\n      return;\n    }\n\n    this.iconPosition = closestAccordionParent.iconPosition;\n    this.iconType = closestAccordionParent.iconType;\n    this.scale = closestAccordionParent.scale;\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteAccordionItemElement;\n\n  private headerEl: HTMLDivElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.headerEl.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private storeHeaderEl = (el: HTMLDivElement): void => {\n    this.headerEl = el;\n  };\n\n  /** handle clicks on item header */\n  private itemHeaderClickHandler = (): void => this.emitRequestedItem();\n\n  private determineActiveItem(\n    selectionMode: SelectionMode,\n    requestedItem: HTMLCalciteAccordionItemElement,\n  ): void {\n    switch (selectionMode) {\n      case \"multiple\":\n        if (this.el === requestedItem) {\n          this.expanded = !this.expanded;\n        }\n        break;\n\n      case \"single\":\n        this.expanded = this.el === requestedItem ? !this.expanded : false;\n        break;\n\n      case \"single-persist\":\n        this.expanded = this.el === requestedItem;\n        break;\n    }\n  }\n\n  private emitRequestedItem(): void {\n    this.calciteInternalAccordionItemSelect.emit({\n      requestedAccordionItem: this.el,\n    });\n  }\n}\n"],"version":3}