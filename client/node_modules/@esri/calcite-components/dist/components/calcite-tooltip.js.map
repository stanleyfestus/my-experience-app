{"file":"calcite-tooltip.js","mappings":";;;;;;;;;;;;AAAO,MAAM,GAAG,GAAG;IACjB,SAAS,EAAE,WAAW;CACvB,CAAC;AAEK,MAAM,qBAAqB,GAAG,GAAG,CAAC;AAClC,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAEnC,MAAM,iBAAiB,GAAG,kBAAkB;;SCJnC,4BAA4B,CAAC,OAAkC;IAC7E,MAAM,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC;IAErC,QACE,CAAC,OAAO,gBAAgB,KAAK,QAAQ,GAAG,iBAAiB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,gBAAgB,EAAE,CAAC,GAAG,gBAAgB;QAC/G,IAAI,EACJ;AACJ;;MCLqB,cAAc;IAAnC;;;;;;QAOU,uBAAkB,GAAG,IAAI,OAAO,EAA+C,CAAC;QAEhF,+BAA0B,GAAG,IAAI,OAAO,EAAsB,CAAC;QAE/D,qBAAgB,GAAW,IAAI,CAAC;QAEhC,sBAAiB,GAAW,IAAI,CAAC;QAEjC,kBAAa,GAA8B,IAAI,CAAC;QAEhD,2BAAsB,GAAG,CAAC,CAAC;QAE3B,mBAAc,GAA8B,IAAI,CAAC;;;;;;QA4CjD,iBAAY,GAAG,CAAC,YAA2B;YACjD,MAAM,EAAE,kBAAkB,EAAE,GAAG,IAAI,CAAC;YAEpC,MAAM,iBAAiB,GAAI,YAA8B,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAE3G,OAAO,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;SAClD,CAAC;QAEM,mBAAc,GAAG,CAAC,KAAoB;YAC5C,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;gBACrD,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;gBAE/B,IAAI,aAAa,EAAE,IAAI,EAAE;oBACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAE1B,MAAM,gBAAgB,GAAG,4BAA4B,CAAC,aAAa,CAAC,CAAC;oBAErE,IAAI,gBAAgB,YAAY,OAAO,IAAI,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAqB,CAAC,EAAE;wBACjG,KAAK,CAAC,cAAc,EAAE,CAAC;qBACxB;iBACF;aACF;SACF,CAAC;QAEM,uBAAkB,GAAG,CAAC,KAAmB;YAC/C,MAAM,YAAY,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YAC1C,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;YAE/B,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAEhD,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC,EAAE;gBAClD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,OAAO;aACR;YAED,IAAI,OAAO,KAAK,IAAI,CAAC,cAAc,EAAE;gBACnC,OAAO;aACR;YAED,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;aAClC;iBAAM,IAAI,aAAa,EAAE,IAAI,EAAE;gBAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;YAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B,CAAC;QAUM,iBAAY,GAAG,CAAC,KAAY;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,MAAM,YAAY,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAEhD,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC,EAAE;gBAClD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,OAAO;aACR;YAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO;aACR;YAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,IAAI,OAAO,CAAC,YAAY,EAAE;gBACxB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;gBAC9B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBACnC,OAAO;aACR;YAED,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACnC,CAAC;QAEM,gBAAW,GAAG;YACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B,CAAC;QAEM,mBAAc,GAAG,CAAC,KAAiB;YACzC,MAAM,YAAY,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YAC1C,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAEhD,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC,EAAE;gBAClD,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,OAAO;aACR;YAED,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;YAEtC,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO;aACR;YAED,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SAC1C,CAAC;QAqEM,uBAAkB,GAAG,CAAC,OAAkC;YAC9D,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CACvC;gBACE,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;oBAClC,OAAO;iBACR;gBAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;gBACtC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACnC,EACD,IAAI,CAAC,aAAa,EAAE,IAAI,GAAG,CAAC,GAAG,qBAAqB,CACrD,CAAC;SACH,CAAC;QAEM,wBAAmB,GAAG;YAC5B,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC;gBACzC,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;oBACnC,OAAO;iBACR;gBAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B,EAAE,sBAAsB,CAAC,CAAC;SAC5B,CAAC;KA+BH;;;;;;IAvQC,eAAe,CAAC,WAA6B,EAAE,OAAkC;QAC/E,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAClD,MAAM,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,CAAC;QAElE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;SACrC;QAED,IAAI,IAAI,CAAC,sBAAsB,KAAK,CAAC,EAAE;YACrC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;IAED,iBAAiB,CAAC,WAA6B;QAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,CAAC;QAElE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;SACvC;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;YAC/C,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,sBAAsB,KAAK,CAAC,EAAE;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;IAyDO,kBAAkB,CAAC,OAAkC,EAAE,YAA2B;QACxF,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QAE/B,QACE,CAAC,aAAa,EAAE,IAAI,IAAI,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAClH;KACH;IAmDO,kBAAkB,CAAC,UAAsB;QAC/C,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;KAChF;IAEO,qBAAqB,CAAC,UAAsB;QAClD,UAAU,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;KACnF;IAEO,YAAY;QAClB,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3E,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACnF,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACvE,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3E,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACnD;IAEO,eAAe;QACrB,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9E,MAAM,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACtF,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1E,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9E,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACtD;IAEO,qBAAqB;QAC3B,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;IAEO,sBAAsB;QAC5B,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC5C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KAC/B;IAEO,iBAAiB;QACvB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;IAEO,uBAAuB,CAAC,OAAkC;QAChE,IAAI,IAAI,CAAC,aAAa,KAAK,OAAO,EAAE;YAClC,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;IAEO,kBAAkB;QACxB,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QAE/B,IAAI,aAAa,EAAE,IAAI,EAAE;YACvB,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;SAC1C;KACF;IAEO,oBAAoB,CAAC,OAAkC,EAAE,IAAa;QAC5E,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KACnC;IAEO,aAAa,CAAC,OAAkC,EAAE,IAAa;QACrE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC;KAC5C;IA2BO,kBAAkB,CAAC,UAAsB;QAC/C,MAAM,EAAE,0BAA0B,EAAE,GAAG,IAAI,CAAC;QAE5C,MAAM,KAAK,GAAG,0BAA0B,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1E,IAAI,QAAQ,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;SACrC;QAED,0BAA0B,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;KACtD;IAEO,oBAAoB,CAAC,UAAsB;QACjD,MAAM,EAAE,0BAA0B,EAAE,GAAG,IAAI,CAAC;QAE5C,MAAM,KAAK,GAAG,0BAA0B,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1E,IAAI,QAAQ,KAAK,CAAC,EAAE;YAClB,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;SACxC;QAED,0BAA0B,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;KACtD;IAEO,4BAA4B,CAAC,WAA6B;QAChE,OAAO,WAAW,YAAY,OAAO,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;KAC/E;;;ACtSH,MAAM,UAAU,GAAG,2pDAA2pD,CAAC;AAC/qD,6BAAe,UAAU;;ACgCzB,MAAM,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;MAUxB,OAAO;;;;;;;;;QAuGlB,SAAI,GAAG,mBAAmB,IAAI,EAAE,EAAE,CAAC;QAEnC,uBAAkB,GAAG,SAAS,CAAC;QAiHvB,oBAAe,GAAG,CAAC,EAAE;YAC3B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB,CAAC;QAEF,0BAAqB,GAAG,CAAC,IAAI,GAAG,IAAI;YAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,yBAAyB,GAAG,4BAA4B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACvE,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YAEjE,MAAM,EAAE,EAAE,EAAE,gBAAgB,EAAE,yBAAyB,EAAE,GAAG,IAAI,CAAC;YACjE,IAAI,IAAI,IAAI,gBAAgB,IAAI,CAAC,yBAAyB,EAAE;gBAC1D,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,2BAA2B,gBAAgB,kBAAkB,EAAE;oBACvF,EAAE;iBACH,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB,CAAC;QAEF,UAAK,GAAG;YACN,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC;SAChC,CAAC;QAEF,kBAAa,GAAG;YACd,MAAM,EAAE,yBAAyB,EAAE,GAAG,IAAI,CAAC;YAE3C,IAAI,CAAC,yBAAyB,EAAE;gBAC9B,OAAO;aACR;YAED,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAExB,IAAI,cAAc,IAAI,yBAAyB,EAAE;gBAC/C,yBAAyB,CAAC,YAAY,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;aAC/D;YAED,OAAO,CAAC,eAAe,CAAC,yBAAyB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC7D,CAAC;QAEF,qBAAgB,GAAG;YACjB,MAAM,EAAE,yBAAyB,EAAE,GAAG,IAAI,CAAC;YAE3C,IAAI,CAAC,yBAAyB,EAAE;gBAC9B,OAAO;aACR;YAED,IAAI,iBAAiB,IAAI,yBAAyB,EAAE;gBAClD,yBAAyB,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;aAC9D;YAED,OAAO,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,CAAC;SACtD,CAAC;4BArQsC,KAAK;;8BAcH,qBAAqB;8BAUrB,CAAC;oBAUX,KAAK;kCAgB6B,UAAU;yBAUrB,MAAM;;;8BA+BnB,UAAU;;IA1EpD,2BAA2B;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvB;IAQD,qBAAqB;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvB;IAQD,WAAW;QACT,0BAA0B,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvB;IAaD,yBAAyB;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvB;IAQD,gBAAgB;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvB;IAYD,uBAAuB;QACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;;;;;;IA4BD,iBAAiB;QACf,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,0BAA0B,CAAC,IAAI,CAAC,CAAC;SAClC;KACF;IAED,MAAM,iBAAiB;QACrB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,0BAA0B,CAAC,IAAI,CAAC,CAAC;SAClC;KACF;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE;YAC5D,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;KACF;IAED,oBAAoB;QAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;KACrE;;;;;;;;;;;IAgCD,MAAM,UAAU,CAAC,OAAO,GAAG,KAAK;QAC9B,MAAM,EACJ,EAAE,EACF,yBAAyB,EACzB,SAAS,EACT,kBAAkB,EAClB,cAAc,EACd,cAAc,EACd,OAAO,GACR,GAAG,IAAI,CAAC;QAET,OAAO,UAAU,CACf,IAAI,EACJ;YACE,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,yBAAyB;YACtC,kBAAkB;YAClB,SAAS;YACT,cAAc;YACd,cAAc;YACd,OAAO;YACP,IAAI,EAAE,SAAS;SAChB,EACD,OAAO,CACR,CAAC;KACH;;;;;;IAQD,YAAY;QACV,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;KACtC;IAED,MAAM;QACJ,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;KAChC;IAED,aAAa;QACX,IAAI,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC;KACvC;IAED,OAAO;QACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;KACjC;;;;;;IA6DD,MAAM;QACJ,MAAM,EAAE,yBAAyB,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;QACxE,MAAM,SAAS,GAAG,yBAAyB,IAAI,IAAI,CAAC;QACpD,MAAM,MAAM,GAAG,CAAC,SAAS,CAAC;QAE1B,QACE,EAAC,IAAI,oEACU,aAAa,CAAC,MAAM,CAAC,gBACtB,KAAK,eACP,QAAQ,6BACO,MAAM,EAC/B,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,EAChB,IAAI,EAAC,SAAS,IAEd,4DACE,KAAK,EAAE;gBACL,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI;gBAC7B,CAAC,WAAW,CAAC,eAAe,GAAG,SAAS;aACzC,EACD,GAAG,EAAE,IAAI,CAAC,eAAe,IAEzB,EAAC,aAAa,qDACZ,cAAc,EAAE,cAAc,EAC9B,GAAG,EAAE,CAAC,OAAO,MAAM,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAC1C,EACF,4DAAK,KAAK,EAAE,GAAG,CAAC,SAAS,IACvB,8DAAQ,CACJ,CACF,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/tooltip/resources.ts","src/components/tooltip/utils.ts","src/components/tooltip/TooltipManager.ts","src/components/tooltip/tooltip.scss?tag=calcite-tooltip&encapsulation=shadow","src/components/tooltip/tooltip.tsx"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n};\n\nexport const TOOLTIP_OPEN_DELAY_MS = 300;\nexport const TOOLTIP_CLOSE_DELAY_MS = 500;\n\nexport const ARIA_DESCRIBED_BY = \"aria-describedby\";\n","import { ReferenceElement } from \"../../utils/floating-ui\";\nimport { queryElementRoots } from \"../../utils/dom\";\n\nexport function getEffectiveReferenceElement(tooltip: HTMLCalciteTooltipElement): ReferenceElement {\n  const { referenceElement } = tooltip;\n\n  return (\n    (typeof referenceElement === \"string\" ? queryElementRoots(tooltip, { id: referenceElement }) : referenceElement) ||\n    null\n  );\n}\n","import { getShadowRootNode } from \"../../utils/dom\";\nimport { ReferenceElement } from \"../../utils/floating-ui\";\nimport { TOOLTIP_OPEN_DELAY_MS, TOOLTIP_CLOSE_DELAY_MS } from \"./resources\";\nimport { getEffectiveReferenceElement } from \"./utils\";\n\nexport default class TooltipManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new WeakMap<ReferenceElement, HTMLCalciteTooltipElement>();\n\n  private registeredShadowRootCounts = new WeakMap<ShadowRoot, number>();\n\n  private hoverOpenTimeout: number = null;\n\n  private hoverCloseTimeout: number = null;\n\n  private activeTooltip: HTMLCalciteTooltipElement = null;\n\n  private registeredElementCount = 0;\n\n  private clickedTooltip: HTMLCalciteTooltipElement = null;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, tooltip: HTMLCalciteTooltipElement): void {\n    this.registeredElementCount++;\n    this.registeredElements.set(referenceEl, tooltip);\n    const shadowRoot = this.getReferenceElShadowRootNode(referenceEl);\n\n    if (shadowRoot) {\n      this.registerShadowRoot(shadowRoot);\n    }\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    const shadowRoot = this.getReferenceElShadowRootNode(referenceEl);\n\n    if (shadowRoot) {\n      this.unregisterShadowRoot(shadowRoot);\n    }\n\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryTooltip = (composedPath: EventTarget[]): HTMLCalciteTooltipElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \"Escape\" && !event.defaultPrevented) {\n      const { activeTooltip } = this;\n\n      if (activeTooltip?.open) {\n        this.clearHoverTimeout();\n        this.closeActiveTooltip();\n\n        const referenceElement = getEffectiveReferenceElement(activeTooltip);\n\n        if (referenceElement instanceof Element && referenceElement.contains(event.target as HTMLElement)) {\n          event.preventDefault();\n        }\n      }\n    }\n  };\n\n  private pointerMoveHandler = (event: PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const { activeTooltip } = this;\n\n    const tooltip = this.queryTooltip(composedPath);\n\n    if (this.pathHasOpenTooltip(tooltip, composedPath)) {\n      this.clearHoverTimeout();\n      return;\n    }\n\n    if (tooltip === this.clickedTooltip) {\n      return;\n    }\n\n    if (tooltip) {\n      this.openHoveredTooltip(tooltip);\n    } else if (activeTooltip?.open) {\n      this.closeHoveredTooltip();\n    }\n\n    this.clickedTooltip = null;\n  };\n\n  private pathHasOpenTooltip(tooltip: HTMLCalciteTooltipElement, composedPath: EventTarget[]): boolean {\n    const { activeTooltip } = this;\n\n    return (\n      (activeTooltip?.open && composedPath.includes(activeTooltip)) || (tooltip?.open && composedPath.includes(tooltip))\n    );\n  }\n\n  private clickHandler = (event: Event): void => {\n    this.clickedTooltip = null;\n    const composedPath = event.composedPath();\n    const tooltip = this.queryTooltip(composedPath);\n\n    if (this.pathHasOpenTooltip(tooltip, composedPath)) {\n      this.clearHoverTimeout();\n      return;\n    }\n\n    this.closeActiveTooltip();\n\n    if (!tooltip) {\n      return;\n    }\n\n    this.clearHoverTimeout();\n\n    if (tooltip.closeOnClick) {\n      this.clickedTooltip = tooltip;\n      this.toggleTooltip(tooltip, false);\n      return;\n    }\n\n    this.toggleTooltip(tooltip, true);\n  };\n\n  private blurHandler = (): void => {\n    this.closeActiveTooltip();\n  };\n\n  private focusInHandler = (event: FocusEvent): void => {\n    const composedPath = event.composedPath();\n    const tooltip = this.queryTooltip(composedPath);\n\n    if (this.pathHasOpenTooltip(tooltip, composedPath)) {\n      this.clearHoverTimeout();\n      return;\n    }\n\n    this.closeTooltipIfNotActive(tooltip);\n\n    if (!tooltip) {\n      return;\n    }\n\n    this.toggleFocusedTooltip(tooltip, true);\n  };\n\n  private addShadowListeners(shadowRoot: ShadowRoot): void {\n    shadowRoot.addEventListener(\"focusin\", this.focusInHandler, { capture: true });\n  }\n\n  private removeShadowListeners(shadowRoot: ShadowRoot): void {\n    shadowRoot.removeEventListener(\"focusin\", this.focusInHandler, { capture: true });\n  }\n\n  private addListeners(): void {\n    window.addEventListener(\"keydown\", this.keyDownHandler, { capture: true });\n    window.addEventListener(\"pointermove\", this.pointerMoveHandler, { capture: true });\n    window.addEventListener(\"click\", this.clickHandler, { capture: true });\n    window.addEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    window.addEventListener(\"blur\", this.blurHandler);\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"keydown\", this.keyDownHandler, { capture: true });\n    window.removeEventListener(\"pointermove\", this.pointerMoveHandler, { capture: true });\n    window.removeEventListener(\"click\", this.clickHandler, { capture: true });\n    window.removeEventListener(\"focusin\", this.focusInHandler, { capture: true });\n    window.removeEventListener(\"blur\", this.blurHandler);\n  }\n\n  private clearHoverOpenTimeout(): void {\n    window.clearTimeout(this.hoverOpenTimeout);\n    this.hoverOpenTimeout = null;\n  }\n\n  private clearHoverCloseTimeout(): void {\n    window.clearTimeout(this.hoverCloseTimeout);\n    this.hoverCloseTimeout = null;\n  }\n\n  private clearHoverTimeout(): void {\n    this.clearHoverOpenTimeout();\n    this.clearHoverCloseTimeout();\n  }\n\n  private closeTooltipIfNotActive(tooltip: HTMLCalciteTooltipElement): void {\n    if (this.activeTooltip !== tooltip) {\n      this.closeActiveTooltip();\n    }\n  }\n\n  private closeActiveTooltip(): void {\n    const { activeTooltip } = this;\n\n    if (activeTooltip?.open) {\n      this.toggleTooltip(activeTooltip, false);\n    }\n  }\n\n  private toggleFocusedTooltip(tooltip: HTMLCalciteTooltipElement, open: boolean): void {\n    if (open) {\n      this.clearHoverTimeout();\n    }\n\n    this.toggleTooltip(tooltip, open);\n  }\n\n  private toggleTooltip(tooltip: HTMLCalciteTooltipElement, open: boolean): void {\n    tooltip.open = open;\n\n    this.activeTooltip = open ? tooltip : null;\n  }\n\n  private openHoveredTooltip = (tooltip: HTMLCalciteTooltipElement): void => {\n    this.hoverOpenTimeout = window.setTimeout(\n      () => {\n        if (this.hoverOpenTimeout === null) {\n          return;\n        }\n\n        this.clearHoverCloseTimeout();\n        this.closeTooltipIfNotActive(tooltip);\n        this.toggleTooltip(tooltip, true);\n      },\n      this.activeTooltip?.open ? 0 : TOOLTIP_OPEN_DELAY_MS,\n    );\n  };\n\n  private closeHoveredTooltip = (): void => {\n    this.hoverCloseTimeout = window.setTimeout(() => {\n      if (this.hoverCloseTimeout === null) {\n        return;\n      }\n\n      this.closeActiveTooltip();\n    }, TOOLTIP_CLOSE_DELAY_MS);\n  };\n\n  private registerShadowRoot(shadowRoot: ShadowRoot): void {\n    const { registeredShadowRootCounts } = this;\n\n    const count = registeredShadowRootCounts.get(shadowRoot);\n    const newCount = Math.min((typeof count === \"number\" ? count : 0) + 1, 1);\n\n    if (newCount === 1) {\n      this.addShadowListeners(shadowRoot);\n    }\n\n    registeredShadowRootCounts.set(shadowRoot, newCount);\n  }\n\n  private unregisterShadowRoot(shadowRoot: ShadowRoot): void {\n    const { registeredShadowRootCounts } = this;\n\n    const count = registeredShadowRootCounts.get(shadowRoot);\n    const newCount = Math.max((typeof count === \"number\" ? count : 1) - 1, 0);\n\n    if (newCount === 0) {\n      this.removeShadowListeners(shadowRoot);\n    }\n\n    registeredShadowRootCounts.set(shadowRoot, newCount);\n  }\n\n  private getReferenceElShadowRootNode(referenceEl: ReferenceElement): ShadowRoot | null {\n    return referenceEl instanceof Element ? getShadowRootNode(referenceEl) : null;\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tooltip-z-index: Sets the z-index value for the component.\n */\n\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-tooltip-z-index, theme(\"zIndex.tooltip\"));\n}\n\n@include floating-ui-host();\n@include floating-ui-arrow();\n\n.container {\n  @apply text-color-1\n    text-n2-wrap\n    relative\n    overflow-hidden\n    rounded\n    py-3\n    px-4\n    font-medium;\n  max-inline-size: 20rem;\n  max-block-size: 20rem;\n  text-align: start;\n}\n\n.calcite-floating-ui-anim {\n  @apply bg-foreground-1\n    border-color-3\n    rounded\n    border\n    border-solid;\n}\n\n.arrow::before {\n  outline: 1px solid var(--calcite-color-border-3);\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultOffsetDistance,\n  disconnectFloatingUI,\n  FloatingCSS,\n  FloatingLayout,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  ReferenceElement,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { ARIA_DESCRIBED_BY, CSS } from \"./resources\";\nimport TooltipManager from \"./TooltipManager\";\nimport { getEffectiveReferenceElement } from \"./utils\";\n\nconst manager = new TooltipManager();\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-tooltip\",\n  styleUrl: \"tooltip.scss\",\n  shadow: true,\n})\nexport class Tooltip implements FloatingUIComponent, OpenCloseComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Closes the component when the `referenceElement` is clicked. */\n  @Prop({ reflect: true }) closeOnClick = false;\n\n  /**\n   * Accessible name for the component.\n   *\n   * @deprecated No longer necessary. Overrides the context of the component's description, which could confuse assistive technology users.\n   */\n  @Prop() label: string;\n\n  /**\n   * Offset the position of the component away from the `referenceElement`.\n   *\n   * @default 6\n   */\n  @Prop({ reflect: true }) offsetDistance = defaultOffsetDistance;\n\n  @Watch(\"offsetDistance\")\n  offsetDistanceOffsetHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Offset the position of the component along the `referenceElement`.\n   */\n  @Prop({ reflect: true }) offsetSkidding = 0;\n\n  @Watch(\"offsetSkidding\")\n  offsetSkiddingHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, the component is open.\n   */\n  @Prop({ reflect: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * The `\"fixed\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = \"auto\";\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * The `referenceElement` to position the component according to its `\"placement\"` value.\n   *\n   * Setting to the `HTMLElement` is preferred so the component does not need to query the DOM for the `referenceElement`.\n   *\n   * However, a string ID of the reference element can be used.\n   */\n  @Prop() referenceElement: ReferenceElement | string;\n\n  @Watch(\"referenceElement\")\n  referenceElementHandler(): void {\n    this.setUpReferenceElement();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTooltipElement;\n\n  @State() effectiveReferenceElement: ReferenceElement;\n\n  @State() floatingLayout: FloatingLayout = \"vertical\";\n\n  arrowEl: SVGSVGElement;\n\n  guid = `calcite-tooltip-${guid()}`;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.setUpReferenceElement(true);\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  async componentWillLoad(): Promise<void> {\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.removeReferences();\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteTooltipBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteTooltipClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteTooltipBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteTooltipOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const {\n      el,\n      effectiveReferenceElement,\n      placement,\n      overlayPositioning,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n    } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl: el,\n        referenceEl: effectiveReferenceElement,\n        overlayPositioning,\n        placement,\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type: \"tooltip\",\n      },\n      delayed,\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  onBeforeOpen(): void {\n    this.calciteTooltipBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteTooltipOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteTooltipBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteTooltipClose.emit();\n  }\n\n  private setTransitionEl = (el): void => {\n    this.transitionEl = el;\n  };\n\n  setUpReferenceElement = (warn = true): void => {\n    this.removeReferences();\n    this.effectiveReferenceElement = getEffectiveReferenceElement(this.el);\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n\n    const { el, referenceElement, effectiveReferenceElement } = this;\n    if (warn && referenceElement && !effectiveReferenceElement) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el,\n      });\n    }\n\n    this.addReferences();\n  };\n\n  getId = (): string => {\n    return this.el.id || this.guid;\n  };\n\n  addReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    const id = this.getId();\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_DESCRIBED_BY, id);\n    }\n\n    manager.registerElement(effectiveReferenceElement, this.el);\n  };\n\n  removeReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"removeAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.removeAttribute(ARIA_DESCRIBED_BY);\n    }\n\n    manager.unregisterElement(effectiveReferenceElement);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { effectiveReferenceElement, label, open, floatingLayout } = this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        aria-live=\"polite\"\n        calcite-hydrated-hidden={hidden}\n        id={this.getId()}\n        role=\"tooltip\"\n      >\n        <div\n          class={{\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: displayed,\n          }}\n          ref={this.setTransitionEl}\n        >\n          <FloatingArrow\n            floatingLayout={floatingLayout}\n            ref={(arrowEl) => (this.arrowEl = arrowEl)}\n          />\n          <div class={CSS.container}>\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}