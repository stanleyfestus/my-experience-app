{"file":"index3.js","mappings":";;;;;;;;AAIA,MAAM,wBAAwB,GAAG,CAAC,aAAa,KAAK;AACpD,IAAI,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AACzC,QAAQ,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;AACjC,QAAQ,MAAM,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;AAC/C,QAAQ,OAAO;AACf,YAAY,GAAG,MAAM;AACrB,YAAY,SAAS;AACrB,SAAS,CAAC;AACV,KAAK,CAAC,CAAC;AACP,CAAC,CAAC;AACF;AACA,eAAe,aAAa,GAAG;AAC/B,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC;AACxB,IAAI,MAAM,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,gBAAgB,GAAG,wBAAwB,CAAC,aAAa,CAAC,CAAC;AACrE,IAAI,KAAK,MAAM,WAAW,IAAI,gBAAgB,EAAE;AAChD,QAAQ,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC;AACjD,QAAQ,IAAI,WAAW,CAAC,OAAO,EAAE;AACjC,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC;AACnC,QAAQ,MAAM,QAAQ,GAAG;AACzB,YAAY,KAAK,EAAE,SAAS;AAC5B,YAAY,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;AAC5B,SAAS,CAAC;AACV,QAAQ,KAAK,MAAM,YAAY,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE;AAC/E,YAAY,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,YAAY,CAAC;AAC1E,YAAY,IAAI,SAAS,KAAK,UAAU,EAAE;AAC1C,gBAAgB,MAAM,MAAM,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;AACjD,gBAAgB,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1C,gBAAgB,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5C,aAAa;AACb,SAAS;AACT,QAAQ,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChC,KAAK;AACL,IAAI,OAAO,QAAQ;AACnB,SAAS,GAAG,CAAC,CAAC,KAAK,KAAK;AACxB,QAAQ,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7E,QAAQ,OAAO;AACf,YAAY,KAAK,EAAE,KAAK,CAAC,KAAK;AAC9B,YAAY,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;AAC9C,SAAS,CAAC;AACV,KAAK,CAAC;AACN,SAAS,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACxD;;;;","names":[],"sources":["node_modules/timezone-groups/dist/groupByRegion/index.mjs"],"sourcesContent":["import { timeZones } from '../utils/time-zones.mjs';\nimport { extractRegion } from '../utils/region.mjs';\nimport '../chunks/index-p4VH55K1.mjs';\n\nconst generateTimeZoneMetadata = (timeZoneItems) => {\n    return timeZoneItems.map((tzItem) => {\n        const { label } = tzItem;\n        const continent = extractRegion(label);\n        return {\n            ...tzItem,\n            continent,\n        };\n    });\n};\n\nasync function groupByRegion() {\n    const grouping = [];\n    const timeZoneItems = timeZones.map((tz) => ({ label: tz }));\n    const timeZoneMetadata = generateTimeZoneMetadata(timeZoneItems);\n    for (const tzMetadatum of timeZoneMetadata) {\n        const { label, continent } = tzMetadatum;\n        if (tzMetadatum.visited) {\n            continue;\n        }\n        tzMetadatum.visited = true;\n        const newGroup = {\n            label: continent,\n            tzs: [{ label }],\n        };\n        for (const tzMetadatumJ of timeZoneMetadata.filter((_) => !_.visited)) {\n            const { label: labelJ, continent: continentJ } = tzMetadatumJ;\n            if (continent === continentJ) {\n                const tzItem = { label: labelJ };\n                newGroup.tzs.push(tzItem);\n                tzMetadatumJ.visited = true;\n            }\n        }\n        grouping.push(newGroup);\n    }\n    return grouping\n        .map((group) => {\n        group.tzs = group.tzs.sort((a, b) => a.label.localeCompare(b.label));\n        return {\n            label: group.label,\n            tzs: group.tzs.map((_) => _.label),\n        };\n    })\n        .sort((a, b) => a.label.localeCompare(b.label));\n}\n\nexport { groupByRegion };\n"],"version":3}