{"file":"calcite-input-time-zone.entry.cjs.js","mappings":"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","names":["locale","getDateTimeFormat","componentFocusable","updateMessages","connectForm","connectLabel","connectLocalized","connectMessages","disconnectForm","disconnectLabel","disconnectLocalized","disconnectMessages","setUpLoadableComponent","setUpMessages","afterConnectDefaultValueSet","setComponentLoaded","updateHostInteraction","h","Host","InteractiveContainer","HiddenFormInputSlot"],"sources":["src/components/input-time-zone/resources.ts","src/components/input-time-zone/utils.ts","src/components/input-time-zone/input-time-zone.scss?tag=calcite-input-time-zone&encapsulation=shadow","src/components/input-time-zone/input-time-zone.tsx"],"sourcesContent":["export const CSS = {\n  offset: \"offset\",\n};\n","import { getDateTimeFormat, SupportedLocale } from \"../../utils/locale\";\nimport { OffsetStyle, TimeZone, TimeZoneItem, TimeZoneItemGroup, TimeZoneMode } from \"./interfaces\";\nimport { InputTimeZoneMessages } from \"./assets/input-time-zone/t9n\";\n\nconst hourToMinutes = 60;\n\nfunction timeZoneOffsetToDecimal(shortOffsetTimeZoneName: string): string {\n  const minusSign = \"−\";\n  const hyphen = \"-\";\n\n  return (\n    shortOffsetTimeZoneName\n      .replace(\":15\", \".25\")\n      .replace(\":30\", \".5\")\n      .replace(\":45\", \".75\")\n\n      // ensures decimal string representation is parseable\n      .replace(minusSign, hyphen)\n  );\n}\n\nfunction toOffsetValue(timeZoneName: TimeZone, referenceDateInMs: number): number {\n  // we use \"en-US\" to allow us to reliably remove the standard time token\n  const offset = getTimeZoneShortOffset(timeZoneName, \"en-US\", referenceDateInMs).replace(\"GMT\", \"\");\n\n  if (offset === \"\") {\n    return 0;\n  }\n\n  return Number(timeZoneOffsetToDecimal(offset)) * hourToMinutes;\n}\n\nexport function getUserTimeZoneOffset(): number {\n  const localDate = new Date();\n  return localDate.getTimezoneOffset() * -1;\n}\n\nexport function getUserTimeZoneName(): string {\n  const dateFormatter = new Intl.DateTimeFormat();\n  return dateFormatter.resolvedOptions().timeZone;\n}\n\nexport async function getNormalizer(mode: TimeZoneMode): Promise<(timeZone: TimeZone) => TimeZone> {\n  if (mode === \"offset\") {\n    return (timeZone: TimeZone) => timeZone;\n  }\n\n  const { normalize } = await import(\"timezone-groups/dist/utils/time-zones.mjs\");\n  return normalize;\n}\n\nexport async function createTimeZoneItems(\n  locale: SupportedLocale,\n  messages: InputTimeZoneMessages,\n  mode: TimeZoneMode,\n  referenceDate: Date,\n  standardTime: OffsetStyle,\n): Promise<TimeZoneItem[] | TimeZoneItemGroup[]> {\n  if (mode === \"name\") {\n    const { groupByName } = await import(\"timezone-groups/dist/groupByName/index.mjs\");\n    const groups = await groupByName();\n\n    return groups\n      .map<TimeZoneItem<string>>(({ label: timeZone }) => {\n        const label = toUserFriendlyName(timeZone);\n        const value = timeZone;\n\n        return {\n          label,\n          value,\n          metadata: {\n            filterValue: timeZone,\n          },\n        };\n      })\n      .filter((group) => !!group)\n      .sort();\n  }\n\n  const effectiveLocale =\n    standardTime === \"user\"\n      ? locale\n      : // we use locales that will always yield a short offset that matches `standardTime`\n        standardTime === \"utc\"\n        ? \"fr\"\n        : \"en-GB\";\n  const referenceDateInMs: number = referenceDate.getTime();\n\n  if (mode === \"region\") {\n    const [{ groupByRegion }, { getCountry, global: globalLabel }] = await Promise.all([\n      import(\"timezone-groups/dist/groupByRegion/index.mjs\"),\n      import(\"timezone-groups/dist/utils/region.mjs\"),\n    ]);\n    const groups = await groupByRegion();\n\n    return groups\n      .map<TimeZoneItemGroup>(({ label: region, tzs }) => {\n        tzs.sort((timeZoneA, timeZoneB) => {\n          const labeledTimeZoneA = getTimeZoneLabel(timeZoneA, messages);\n          const labeledTimeZoneB = getTimeZoneLabel(timeZoneB, messages);\n          const gmtTimeZoneString = \"Etc/GMT\";\n\n          if (timeZoneA.startsWith(gmtTimeZoneString) && timeZoneB.startsWith(gmtTimeZoneString)) {\n            // we use the IANA timezone for simpler and consistent sorting across locales\n            const offsetStringA = timeZoneA.substring(gmtTimeZoneString.length);\n            const offsetStringB = timeZoneB.substring(gmtTimeZoneString.length);\n\n            const offsetA = offsetStringA === \"\" ? 0 : parseInt(offsetStringA);\n            const offsetB = offsetStringB === \"\" ? 0 : parseInt(offsetStringB);\n\n            return offsetB - offsetA;\n          }\n\n          return labeledTimeZoneA.localeCompare(labeledTimeZoneB);\n        });\n\n        return {\n          label: getMessageOrKeyFallback(messages, region),\n          items: tzs.map((timeZone) => {\n            const decimalOffset = timeZoneOffsetToDecimal(\n              getTimeZoneShortOffset(timeZone, effectiveLocale, referenceDateInMs),\n            );\n            const label = getTimeZoneLabel(timeZone, messages);\n            const filterValue =\n              region === globalLabel\n                ? // we rely on the label for search since GMT items have their signs inverted (see https://en.wikipedia.org/wiki/Tz_database#Area)\n                  // in addition to the label we also add \"Global\" and \"Etc\" to allow searching for these items\n                  `${getTimeZoneLabel(globalLabel, messages)} Etc`\n                : toUserFriendlyName(timeZone);\n\n            const countryCode = getCountry(timeZone);\n            const country = getMessageOrKeyFallback(messages, countryCode);\n\n            return {\n              label,\n              value: timeZone,\n              metadata: {\n                country: country === label ? undefined : country,\n                filterValue,\n                offset: decimalOffset,\n              },\n            };\n          }),\n        };\n      })\n      .sort((groupA, groupB) =>\n        groupA.label === globalLabel ? -1 : groupB.label === globalLabel ? 1 : groupA.label.localeCompare(groupB.label),\n      );\n  }\n\n  const [{ groupByOffset }, { DateEngine }] = await Promise.all([\n    import(\"timezone-groups/dist/groupByOffset/index.mjs\"),\n    import(\"timezone-groups/dist/groupByOffset/strategy/native/index.mjs\"),\n  ]);\n\n  const groups = await groupByOffset({\n    dateEngine: new DateEngine(),\n    groupDateRange: 1,\n    startDate: new Date(referenceDateInMs).toISOString(),\n  });\n\n  const listFormatter = new Intl.ListFormat(locale, { style: \"long\", type: \"conjunction\" });\n  const offsetTimeZoneNameBlockList = [\"Factory\", \"Etc/UTC\"];\n\n  // we remove blocked entries from tzs and adjust label indices accordingly\n  groups.forEach((group) => {\n    const indexOffsets: number[] = [];\n    let removedSoFar = 0;\n\n    group.tzs.forEach((tz, index) => {\n      if (offsetTimeZoneNameBlockList.includes(tz)) {\n        removedSoFar++;\n      }\n      indexOffsets[index] = removedSoFar;\n    });\n\n    group.tzs = group.tzs.filter((tz) => !offsetTimeZoneNameBlockList.includes(tz));\n\n    group.labelTzIdx = group.labelTzIdx\n      .map((index) => index - indexOffsets[index])\n      .filter((index) => index >= 0 && index < group.tzs.length);\n  });\n\n  return groups\n    .map<TimeZoneItem<number>>(({ labelTzIdx, tzs }) => {\n      const groupRepTz = tzs[0];\n      const decimalOffset = timeZoneOffsetToDecimal(\n        getTimeZoneShortOffset(groupRepTz, effectiveLocale, referenceDateInMs),\n      );\n      const value = toOffsetValue(groupRepTz, referenceDateInMs);\n      const tzLabels = labelTzIdx.map((index: number) => getTimeZoneLabel(tzs[index], messages));\n      const label = createTimeZoneOffsetLabel(messages, decimalOffset, listFormatter.format(tzLabels));\n\n      return {\n        label,\n        value,\n        metadata: {\n          filterValue: tzs.map((tz) => toUserFriendlyName(tz)),\n        },\n      };\n    })\n    .filter((group) => !!group)\n    .sort((groupA, groupB) => groupA.value - groupB.value);\n}\n\nfunction getTimeZoneLabel(timeZone: string, messages: InputTimeZoneMessages): string {\n  return messages[timeZone] || getCity(timeZone);\n}\n\nexport function getSelectedRegionTimeZoneLabel(city: string, country: string, messages: InputTimeZoneMessages): string {\n  const template = messages.timeZoneRegionLabel;\n  return template.replace(\"{city}\", city).replace(\"{country}\", getMessageOrKeyFallback(messages, country));\n}\n\nexport function getMessageOrKeyFallback(messages: InputTimeZoneMessages, key: string): string {\n  return messages[key] || key;\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport function getCity(timeZone: string): string {\n  return timeZone.split(\"/\").pop();\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport function toUserFriendlyName(timeZoneName: string): string {\n  return timeZoneName.replace(/_/g, \" \");\n}\n\nfunction createTimeZoneOffsetLabel(messages: InputTimeZoneMessages, offsetLabel: string, groupLabel: string): string {\n  return messages.timeZoneLabel.replace(\"{offset}\", offsetLabel).replace(\"{cities}\", groupLabel);\n}\n\nfunction getTimeZoneShortOffset(\n  timeZone: TimeZone,\n  locale: SupportedLocale,\n  referenceDateInMs: number = Date.now(),\n): string {\n  const dateTimeFormat = getDateTimeFormat(locale, { timeZone, timeZoneName: \"shortOffset\" });\n  const parts = dateTimeFormat.formatToParts(referenceDateInMs);\n  return parts.find(({ type }) => type === \"timeZoneName\").value;\n}\n\nfunction isGroup(item: TimeZoneItem | TimeZoneItemGroup): item is TimeZoneItemGroup {\n  return (item as TimeZoneItemGroup).items !== undefined;\n}\n\nfunction flattenTimeZoneItems(timeZoneItems: TimeZoneItem[] | TimeZoneItemGroup[]): TimeZoneItem[] {\n  return isGroup(timeZoneItems[0]) ? timeZoneItems.flatMap((item) => item.items) : timeZoneItems;\n}\n\nexport function findTimeZoneItemByProp(\n  timeZoneItems: TimeZoneItem[] | TimeZoneItemGroup[],\n  prop: string,\n  valueToMatch: string | number | null,\n): TimeZoneItem | null {\n  return valueToMatch == null\n    ? null\n    : flattenTimeZoneItems(timeZoneItems).find(\n        (item) =>\n          // intentional == to match string to number\n          item[prop] == valueToMatch,\n      );\n}\n",":host {\n  display: block;\n}\n\n.offset {\n  white-space: nowrap;\n}\n\n@include base-component();\n@include disabled();\n@include hidden-form-input();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  SupportedLocale,\n} from \"../../utils/locale\";\nimport { Scale, Status } from \"../interfaces\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n} from \"../../utils/form\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS } from \"./resources\";\nimport {\n  createTimeZoneItems,\n  findTimeZoneItemByProp,\n  getNormalizer,\n  getSelectedRegionTimeZoneLabel,\n  getUserTimeZoneName,\n  getUserTimeZoneOffset,\n} from \"./utils\";\nimport { InputTimeZoneMessages } from \"./assets/input-time-zone/t9n\";\nimport { OffsetStyle, TimeZone, TimeZoneItem, TimeZoneItemGroup, TimeZoneMode } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-input-time-zone\",\n  styleUrl: \"input-time-zone.scss\",\n  assetsDirs: [\"assets\"],\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class InputTimeZone\n  implements\n    FormComponent,\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty value (`null`) will be allowed as a `value`.\n   *\n   * When `false`, an offset or name value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /** Specifies the component's maximum number of options to display before displaying a scrollbar. */\n  @Prop({ reflect: true }) maxItems = 0;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputTimeZoneMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputTimeZoneMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * This specifies the type of `value` and the associated options presented to the user:\n   *\n   * Using `\"offset\"` will provide options that show timezone offsets.\n   *\n   * Using `\"name\"` will provide options that show the IANA time zone names.\n   *\n   * @default \"offset\"\n   */\n  @Prop({ reflect: true }) mode: TimeZoneMode = \"offset\";\n\n  @Watch(\"messages\")\n  @Watch(\"mode\")\n  @Watch(\"referenceDate\")\n  handleTimeZoneItemPropsChange(): void {\n    if (!this.timeZoneItems) {\n      return;\n    }\n\n    this.updateTimeZoneItems();\n    this.updateTimeZoneSelection();\n  }\n\n  /**\n   * Specifies how the offset will be displayed, where\n   *\n   * `\"user\"` uses `UTC` or `GMT` depending on the user's locale,\n   * `\"gmt\"` always uses `GMT`, and\n   * `\"utc\"` always uses `UTC`.\n   *\n   * This only applies to the `offset` mode.\n   *\n   * @default \"user\"\n   */\n  @Prop({ reflect: true }) offsetStyle: OffsetStyle = \"user\";\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, displays and positions the component. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  openChanged(): void {\n    // we set the property instead of the attribute to ensure open/close events are emitted properly\n    this.comboboxEl.open = this.open;\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * This `date` will be used as a reference to Daylight Savings Time when creating time zone item groups.\n   *\n   * It can be either a Date instance or a string in ISO format (`\"YYYY-MM-DD\"`, `\"YYYY-MM-DDTHH:MM:SS.SSSZ\"`).\n   *\n   * @see [Date.prototype.toISOString](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n   */\n  @Prop() referenceDate: Date | string;\n\n  /**\n   * When `true`, the component must have a value in order for the form to submit.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * The component's value, where the value is the time zone offset or the difference, in minutes, between the selected time zone and UTC.\n   *\n   * If no value is provided, the user's time zone offset will be selected by default.\n   *\n   * @see https://www.w3.org/International/core/2005/09/timezone.html#:~:text=What%20is%20a%20%22zone%20offset,or%20%22%2D%22%20from%20UTC.\n   */\n  @Prop({ mutable: true }) value: string;\n\n  @Watch(\"value\")\n  handleValueChange(value: string, oldValue: string): void {\n    value = this.normalizeValue(value);\n\n    if (!value) {\n      if (this.clearable) {\n        this.value = value;\n        this.selectedTimeZoneItem = null;\n        return;\n      }\n\n      this.value = oldValue;\n      this.selectedTimeZoneItem = this.findTimeZoneItem(oldValue);\n      return;\n    }\n\n    const timeZoneItem = this.findTimeZoneItem(value);\n\n    if (!timeZoneItem) {\n      this.value = oldValue;\n      return;\n    }\n\n    this.selectedTimeZoneItem = timeZoneItem;\n  }\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    await this.comboboxEl.setFocus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is requested to be closed and before the closing transition begins.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneBeforeClose: EventEmitter<void>;\n\n  /**\n   * Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneBeforeOpen: EventEmitter<void>;\n\n  /**\n   * Fires when the component's `value` changes.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneChange: EventEmitter<void>;\n\n  /**\n   * Fires after the component is closed and animation is complete.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneClose: EventEmitter<void>;\n\n  /**\n   * Fires after the component is opened and animation is complete.\n   */\n  @Event({ cancelable: false }) calciteInputTimeZoneOpen: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputTimeZoneElement;\n\n  private comboboxEl: HTMLCalciteComboboxElement;\n\n  @State() defaultMessages: InputTimeZoneMessages;\n\n  defaultValue: InputTimeZone[\"value\"];\n\n  @State() effectiveLocale: SupportedLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleWatcher(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  formEl: HTMLFormElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  private selectedTimeZoneItem: TimeZoneItem;\n\n  private timeZoneItems: TimeZoneItem[] | TimeZoneItemGroup[];\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private setComboboxRef = (el: HTMLCalciteComboboxElement): void => {\n    this.comboboxEl = el;\n  };\n\n  /**\n   * Helps override the selected item's label for region mode outside of item rendering logic to avoid flickering text change\n   *\n   * @param open\n   * @private\n   */\n  private overrideSelectedLabelForRegion(open: boolean): void {\n    if (this.mode !== \"region\" || !this.selectedTimeZoneItem) {\n      return;\n    }\n\n    const { label, metadata } = this.selectedTimeZoneItem;\n\n    this.comboboxEl.selectedItems[0].textLabel =\n      !metadata.country || open\n        ? label\n        : getSelectedRegionTimeZoneLabel(label, metadata.country, this.messages);\n  }\n\n  private onComboboxBeforeClose = (event: CustomEvent): void => {\n    event.stopPropagation();\n    this.overrideSelectedLabelForRegion(false);\n    this.calciteInputTimeZoneBeforeClose.emit();\n  };\n\n  private onComboboxBeforeOpen = (event: CustomEvent): void => {\n    event.stopPropagation();\n    this.overrideSelectedLabelForRegion(true);\n    this.calciteInputTimeZoneBeforeOpen.emit();\n  };\n\n  private onComboboxChange = (event: CustomEvent): void => {\n    event.stopPropagation();\n    const combobox = event.target as HTMLCalciteComboboxElement;\n    const selectedItem = combobox.selectedItems[0];\n\n    if (!selectedItem) {\n      this.value = null;\n      this.selectedTimeZoneItem = null;\n      this.calciteInputTimeZoneChange.emit();\n      return;\n    }\n\n    const selected = this.findTimeZoneItemByLabel(selectedItem.getAttribute(\"data-label\"));\n    const selectedValue = `${selected.value}`;\n\n    if (this.value === selectedValue && selected.label === this.selectedTimeZoneItem.label) {\n      return;\n    }\n\n    this.value = selectedValue;\n    this.selectedTimeZoneItem = selected;\n    this.calciteInputTimeZoneChange.emit();\n  };\n\n  private onComboboxClose = (event: CustomEvent): void => {\n    event.stopPropagation();\n    this.open = false;\n    this.calciteInputTimeZoneClose.emit();\n  };\n\n  private onComboboxOpen = (event: CustomEvent): void => {\n    this.open = true;\n    event.stopPropagation();\n    this.calciteInputTimeZoneOpen.emit();\n  };\n\n  private findTimeZoneItem(value: number | string | null): TimeZoneItem | null {\n    return findTimeZoneItemByProp(this.timeZoneItems, \"value\", value);\n  }\n\n  private findTimeZoneItemByLabel(label: string | null): TimeZoneItem | null {\n    return findTimeZoneItemByProp(this.timeZoneItems, \"label\", label);\n  }\n\n  private async updateTimeZoneItems(): Promise<void> {\n    this.timeZoneItems = await this.createTimeZoneItems();\n  }\n\n  private async updateTimeZoneSelection(): Promise<void> {\n    if (this.value === \"\" && this.clearable) {\n      this.selectedTimeZoneItem = null;\n      return;\n    }\n\n    const fallbackValue = this.mode === \"offset\" ? getUserTimeZoneOffset() : getUserTimeZoneName();\n    const valueToMatch = this.value ?? fallbackValue;\n\n    this.selectedTimeZoneItem =\n      this.findTimeZoneItem(valueToMatch) || this.findTimeZoneItem(fallbackValue);\n  }\n\n  private async createTimeZoneItems(): Promise<TimeZoneItem[] | TimeZoneItemGroup[]> {\n    if (!this.effectiveLocale || !this.messages) {\n      return [];\n    }\n\n    return createTimeZoneItems(\n      this.effectiveLocale,\n      this.messages,\n      this.mode,\n      this.referenceDate instanceof Date\n        ? this.referenceDate\n        : new Date(this.referenceDate ?? Date.now()),\n      this.offsetStyle,\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectForm(this);\n    connectLabel(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectForm(this);\n    disconnectLabel(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  private normalizeValue(value: string | null): string {\n    value = value === null ? \"\" : value;\n\n    return value ? this.normalizer(value) : value;\n  }\n\n  private normalizer: (timeZone: TimeZone) => TimeZone;\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    const [, normalizer] = await Promise.all([setUpMessages(this), getNormalizer(this.mode)]);\n\n    this.normalizer = normalizer;\n    await this.updateTimeZoneItems();\n    this.value = this.normalizeValue(this.value);\n\n    await this.updateTimeZoneSelection();\n\n    const selectedValue = this.selectedTimeZoneItem ? `${this.selectedTimeZoneItem.value}` : null;\n    afterConnectDefaultValueSet(this, selectedValue);\n    this.value = selectedValue;\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.openChanged();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n    this.overrideSelectedLabelForRegion(this.open);\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <calcite-combobox\n            clearDisabled={!this.clearable}\n            disabled={this.disabled}\n            label={this.messages.chooseTimeZone}\n            lang={this.effectiveLocale}\n            maxItems={this.maxItems}\n            onCalciteComboboxBeforeClose={this.onComboboxBeforeClose}\n            onCalciteComboboxBeforeOpen={this.onComboboxBeforeOpen}\n            onCalciteComboboxChange={this.onComboboxChange}\n            onCalciteComboboxClose={this.onComboboxClose}\n            onCalciteComboboxOpen={this.onComboboxOpen}\n            overlayPositioning={this.overlayPositioning}\n            placeholder={\n              this.mode === \"name\"\n                ? this.messages.namePlaceholder\n                : this.mode === \"offset\"\n                  ? this.messages.offsetPlaceholder\n                  : this.messages.regionPlaceholder\n            }\n            placeholderIcon=\"search\"\n            readOnly={this.readOnly}\n            ref={this.setComboboxRef}\n            scale={this.scale}\n            selectionMode={this.clearable ? \"single\" : \"single-persist\"}\n            status={this.status}\n            validation-icon={this.validationIcon}\n            validation-message={this.validationMessage}\n          >\n            {this.renderItems()}\n          </calcite-combobox>\n          <HiddenFormInputSlot component={this} />\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  private renderItems(): VNode[] {\n    if (this.mode === \"region\") {\n      return this.renderRegionItems();\n    }\n\n    return this.timeZoneItems.map((group) => {\n      const selected = this.selectedTimeZoneItem === group;\n      const { label, metadata, value } = group;\n\n      return (\n        <calcite-combobox-item\n          data-label={label}\n          key={label}\n          metadata={metadata}\n          selected={selected}\n          textLabel={label}\n          value={value}\n        />\n      );\n    });\n  }\n\n  private renderRegionItems(): VNode[] {\n    return (this.timeZoneItems as TimeZoneItemGroup[]).flatMap(({ label, items }) => (\n      <calcite-combobox-item-group key={label} label={label}>\n        {items.map((item) => {\n          const selected = this.selectedTimeZoneItem === item;\n          const { label, metadata, value } = item;\n\n          return (\n            <calcite-combobox-item\n              data-label={label}\n              description={metadata.country}\n              key={label}\n              metadata={metadata}\n              selected={selected}\n              textLabel={label}\n              value={value}\n            >\n              <span class={CSS.offset} slot=\"content-end\">\n                {metadata.offset}\n              </span>\n            </calcite-combobox-item>\n          );\n        })}\n      </calcite-combobox-item-group>\n    ));\n  }\n}\n"],"version":3}