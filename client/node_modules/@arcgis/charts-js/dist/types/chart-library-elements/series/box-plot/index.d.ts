import type { Chart, XYChart } from "@amcharts/amcharts4/charts";
import { CandlestickSeries, LineSeries, StepLineSeries } from "@amcharts/amcharts4/charts";
import type { WebBoxPlot, WebChartDataItem } from "@arcgis/charts-spec";
import type { InitializeBoxPlotSeriesProps, UpdateBoxPlotSeriesProps } from "./interfaces";
/**
 * Finds a candle stick series from its id
 * @param chart The chart
 * @param seriesConfigId The series config id (same as the candle stick series)
 */
export declare function getCandleStickSeries(chart: XYChart, seriesConfigId: string): CandlestickSeries | undefined;
/**
 * Finds the step line series associated to a given candle series
 * @param chart The chart
 * @param candleStickSeriesId The candle stick series id
 */
export declare function getStepLineSeries(chart: XYChart, candleStickSeriesId: string): {
    topStepLineSeries: StepLineSeries | undefined;
    medianStepLineSeries: StepLineSeries | undefined;
    bottomStepLineSeries: StepLineSeries | undefined;
};
/**
 * Finds the outliers series associated to a given candle series
 * @param chart The chart
 * @param candleStickSeriesId The candle stick series id
 */
export declare function getOutliersSeries(chart: XYChart, candleStickSeriesId: string): LineSeries | undefined;
/**
 * Determines whether outliers for a series should be shown
 * @param showOutliers The chart config's showOutliers setting
 * @param seriesVisibility The (candleStick) series's visibility
 * @returns
 */
export declare function shouldShowSeriesOutliers(showOutliers?: boolean, seriesVisibility?: boolean): boolean;
/**
 * Function initializing the box plot series. Set only the properties that are not going to be modified
 * through a chart update. See updateBoxPlotChartSeries for the other properties.
 */
export declare function initializeBoxPlotSeries(props: InitializeBoxPlotSeriesProps): (CandlestickSeries | LineSeries | StepLineSeries)[];
/**
 * Retrieves the box-plot mean lines data from the chart storage; sorts it based on the order of the boxes using the category;
 * then updates the chart storage with the sorted data.
 * @param props.chart The chart
 * @param props.chartData The chart data items of which the order is used to sort the mean lines data
 * @param props.chartConfig The chart config
 */
export declare function sortBoxPlotMeanLinesData(props: {
    chart: Chart;
    chartData: WebChartDataItem[];
    chartConfig: WebBoxPlot;
}): void;
/**
 * Function updating a column series properties without having to recreate the whole series.
 * @param props
 */
export declare function updateBoxPlotSeries(props: UpdateBoxPlotSeriesProps): void;
