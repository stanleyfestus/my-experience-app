import type { WebChartAxis, WebChartTextSymbol } from "@arcgis/charts-spec";
import { WebChartTypes } from "@arcgis/charts-spec";
import type { DataItem } from "@amcharts/amcharts4/core";
import type { Axis, PieChart } from "@amcharts/amcharts4/charts";
import { ValueAxis, CategoryAxis, XYChart } from "@amcharts/amcharts4/charts";
import type { ErrorStrings } from "@arcgis/charts-shared-utils";
import type { AxisLabelFormatCallback } from "@arcgis/charts-js-common";
/**
 * Returns true if the input chart is a XYChart and uses a date axis
 * @param chart The instance of chart to be tested
 */
export declare function isDateXAxis(chart: PieChart | XYChart): boolean;
/**
 * Checks whether the WebChartAxis valueFormat is in sync with the amCharts Axis' instance type
 * @param props.axis The axis
 * @param props.valueFormat The axis value format
 * @param props.chartType The type of chart
 */
export declare function isValueFormatIncompatibleWithAxisType(props: {
    axis: Axis;
    chartType?: WebChartTypes;
    valueFormat: WebChartAxis["valueFormat"];
}): boolean;
/**
 * Label formatter for the value axis
 * @param axis The axis on which to format the labels
 * @param defaultOutput The default label output
 */
export declare function valueAxisFormatterCallback(axis: ValueAxis, defaultOutput: number | string): string;
/**
 * Label formatter for the category axis
 * @param props.axis The axis on which to format the labels
 * @param props.defaultOutput The default label output
 * @param props.dataItem The DataItem containing data related to the label to display
 */
export declare function categoryAxisFormatterCallback(props: {
    axis: CategoryAxis;
    defaultOutput: string;
    dataItem?: DataItem;
}): string;
/**
 * Sets an adapter on an axis labels that will format them according to either the config
 * or a custom formatter passed when the chart is created or updated.
 * @param axis The axis on which to assign set the label formatter
 */
export declare function initializeAxisFormatter(axis: Axis): void;
/**
 * Updates the formatter used by the axis to render the labels.
 * @param props.axis The axis on which to define the proper label formatting
 * @param props.isXAxis Boolean indicating whether the axis is the x-axis
 * @param props.chartType The type of chart
 * @param props.formatOptions The format options for the axis
 * @param props.labelsTextSymbol The config for the axis labels
 * @param props.overridePercentMultiplication Boolean indicating whether to divide the elements' value by 100 (true = divide)
 * @param props.axisValueFormatter Custom label formatter
 * @param props.errorStrings The t9n error strings
 */
export declare function updateAxisFormat(props: {
    axis: Axis;
    isXAxis: boolean;
    chartType?: WebChartTypes;
    formatOptions: WebChartAxis["valueFormat"];
    labelsTextSymbol?: WebChartTextSymbol;
    overridePercentMultiplication?: boolean;
    axisValueFormatter?: AxisLabelFormatCallback;
    errorStrings: ErrorStrings;
}): Promise<void>;
