import type { ColumnSeries, PieChart, Series, XYChart } from "@amcharts/amcharts4/charts";
import { GaugeChart, LineSeries } from "@amcharts/amcharts4/charts";
import type { Sprite } from "@amcharts/amcharts4/core";
import { Tooltip } from "@amcharts/amcharts4/core";
import type { WebChartAxis, WebChartBarChartSeries, WebChartDataItemValue, WebChartLineChartSeries, NumberFormatOptions, DateTimeFormatOptions, WebChartBoxPlotSeries } from "@arcgis/charts-spec";
import type { BarAndLineChartTooltipProps } from "../interfaces";
import type { StorageType } from "../../../utils/memory-storage/interfaces";
/**
 * Handles the tooltip color reversion.
 * @param tooltip The tooltip to reverse the color on
 * @param reverseColor Whether to reverse the color or not
 */
export declare function reverseTooltipColor(tooltip: Tooltip, reverseColor?: boolean): void;
/**
 * Formats and returns a value based on the formatter stored in the series memory storage property.
 * If no formatter is found, the stringified value is returned.
 * @param props
 */
export declare function formatTooltipValue(props: {
    series: Series;
    callbackName: keyof StorageType["series"];
    value: Date | number;
}): string;
/**
 * Creates a new tooltip on each series of the chart.
 * Sets max width for lengthy tooltip content on XY charts.
 * @param chart The chart
 */
export declare function initializeChartToolTip(chart: GaugeChart | PieChart | XYChart): void;
/**
 * Initializes the tooltip associated to the bars or markers on a bar chart or line chart
 * @param element The element on which to add the tooltip adapter
 * @param series The Series parent of the element
 */
export declare function initializeBarAndLineChartTooltip(element: Sprite, series: ColumnSeries | LineSeries): void;
/**
 * The tooltip x value is the value associated to the x-axis. It can be a category name, a date,
 * a date range, etc.
 * @param props
 */
export declare function getTooltipXContextValue(props: {
    seriesConfig: WebChartBarChartSeries | WebChartBoxPlotSeries | WebChartLineChartSeries;
    setTimeBinningInfoWhenNotProvided?: boolean;
    xAxisValueFormat?: WebChartAxis["valueFormat"];
    dataTooltipValueFormat?: NumberFormatOptions;
    dataTooltipDateFormat?: DateTimeFormatOptions;
    series: ColumnSeries | LineSeries;
    xValue?: WebChartDataItemValue;
    dateBinningRange?: number[];
}): string | undefined;
/**
 * Update bar and line chart tooltip with latest information provided through an update
 * @param props
 */
export declare function updateBarAndLineChartTooltip(props: BarAndLineChartTooltipProps): void;
