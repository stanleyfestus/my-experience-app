import type { Chart } from "@amcharts/amcharts4/charts";
import type { ChartOptions } from "@arcgis/charts-js-common";
import type { ErrorStrings, PieSlicesSymbols, QueryObject, ValidationStatus, CommonStrings } from "@arcgis/charts-shared-utils";
import type { WebChart, WebChartDataTypes, WebGaugeChart } from "@arcgis/charts-spec";
/**
 * Executes the callback provided by `options.chartWillRender` and validates the resulting config.
 * @param props.chart The chart
 * @param props.chartConfig The chart config
 * @param props.slices The pre-computed pie chart slices
 * @param props.queryObject The query object (layer or layer view)
 * @param props.options The runtime chart options
 * @param props.currentValidationStatus The current validation status
 * @param props.commonStrings The t9n common strings
 * @param props.errorStrings The t9n error strings
 */
export declare function chartWillRender(props: {
    chart: Chart;
    data?: WebChartDataTypes;
    chartConfig: WebChart | WebGaugeChart;
    pieSlicesSymbols?: PieSlicesSymbols;
    queryObject?: QueryObject;
    options?: ChartOptions;
    currentValidationStatus?: ValidationStatus;
    commonStrings: CommonStrings;
    errorStrings: ErrorStrings;
}): Promise<{
    alteredConfig: WebChart | WebGaugeChart;
    newValidationStatus?: ValidationStatus;
    alteredPieSlicesSymbols?: PieSlicesSymbols;
}>;
