/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import e from"../../../../core/Error.js";import r from"../../../../core/Logger.js";import{isFieldElement as t,isGroupElement as o}from"../../../../form/support/formUtils.js";import{getLowerCaseEditTrackingFields as n,isFieldVisibleByDefault as i}from"../../../../layers/support/fieldUtils.js";import{makeExpressionInfosMap as s,makeExecutorSetForFormElement as a}from"../../expressions/expressionUtils.js";import l from"../BatchFormTemplate.js";import{FieldElementTemplate as c}from"../FieldElementTemplate.js";import{GroupElementTemplate as m}from"../GroupElementTemplate.js";const d=()=>r.getLogger("esri.widgets.BatchAttributeForm.templates.templateUtils");async function p(e,r){return null!=e.formTemplate?u(e,r):f(e,r)}async function f(e,{arcadeExecutorProvider:r}){const t=new Set(n(e)),o={arcadeExecutorProvider:r,editTrackingFields:t,layer:e},i=[];for(const n of e.fields)b(n,e,t)&&i.push(h(n,o));const s=await Promise.all(i);return new l({elements:s})}async function u(e,r){const t=e.formTemplate;if(!t)return f(e,r);const o=s(t.expressionInfos),n={description:t.description,elements:new Array,title:t.title},{elements:i}=t;if(!i)return new l(n);const{arcadeExecutorProvider:a}=r;for(const s of i)try{n.elements.push(await w(s,{arcadeExecutorProvider:a,expressionInfos:o,layer:e}))}catch(c){d().warn(c)}return new l(n)}async function w(r,n){if(t(r))return y(r,n);if(o(r))return x(r,n);throw new e("batch-attribute-form:unsupported-element-type",`Form elements of type ${r.type} are not supported`)}async function y(r,{arcadeExecutorProvider:t,expressionInfos:o,layer:n}){const{fieldsIndex:i}=n,{description:s,domain:l,fieldName:m,hint:d,input:p,label:f}=r;if(null==m||!i.has(m))throw new e("batch-attribute-form:invalid-form-element",`Field element with label '${f}' does not refer to a valid field`);const u={description:s,domain:l,field:i.get(m),hint:d,input:p,label:f},w=new c(u),y=await a({element:r,expressionInfos:o,provider:t});return w.addLayer(n,y),w}async function x(e,r){const{arcadeExecutorProvider:t,expressionInfos:o,layer:n}=r,{description:i,label:s}=e,l={description:i,elements:[],label:s};for(const a of e.elements)try{l.elements.push(await w(a,r))}catch{continue}const c=new m(l),d=await a({element:e,expressionInfos:o,provider:t});return c.addLayer(n,d),c}async function h(e,{arcadeExecutorProvider:r,layer:t}){const o=new c({field:e,label:e.alias??e.name}),n={};return e.editable&&t.userHasUpdateItemPrivileges&&(n.editableExpression=await r.getArcadeExecutor("true")),o.addLayer(t,n),o}function b(e,r,t){return!t.has(e.name.toLowerCase())&&i(e,r)}export{u as convertFormTemplateToBatchFormTemplate,p as createBatchFormTemplate,f as createBatchFormTemplateFromFields};
