/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import r from"../../../core/Collection.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import{isFieldInput as i,isGroupInput as p}from"./support/inputUtils.js";let n=class extends e{constructor(t){super(t),this.template=null}get allFieldInputs(){const t=new r;for(const e of this.inputs)i(e)?t.add(e):p(e)&&t.addMany(e.inputs.filter(i));return t}get description(){return this.template?.description??null}get hasInvalidHiddenInputs(){return this.invalidHiddenInputs.length>0}get invalidHiddenInputs(){return this.inputs.filter((t=>!t.valid&&!t.visible))}get title(){return this.template?.title??null}};t([o()],n.prototype,"allFieldInputs",null),t([o()],n.prototype,"description",null),t([o()],n.prototype,"inputs",void 0),t([o()],n.prototype,"hasInvalidHiddenInputs",null),t([o()],n.prototype,"invalidHiddenInputs",null),t([o()],n.prototype,"template",void 0),t([o()],n.prototype,"title",null),n=t([s("esri.widgets.BatchAttributeForm.inputs.BatchFormInputs")],n);export{n as BatchFormInputs};
