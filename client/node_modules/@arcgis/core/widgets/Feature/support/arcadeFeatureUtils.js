/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{isSupportedLayer as e}from"../../../arcade/featureset/support/shared.js";import r from"../../../core/Logger.js";import{eachAlways as t}from"../../../core/promiseUtils.js";import a from"../../../layers/FeatureLayer.js";import{applyTextFormattingHTML as o,htmlEntities as i}from"./featureUtils.js";import{globalCss as n}from"../../support/globalCss.js";const s="esri.widgets.Feature.support.arcadeFeatureUtils",p=()=>r.getLogger(s);function c(e){return"string"==typeof e?o(i(e)):Array.isArray(e)?u(e):"esri.arcade.Dictionary"===e?.declaredClass?l(e):e}function u(e){return`<ul class="esri-widget__list">${e.map((e=>`<li>${"string"==typeof e?o(i(e)):e}</li>`)).join("")}</ul>`}function l(e){const r=e.keys().map((r=>{const t=e.field(r);return`<tr><th>${r}</th><td>${"string"==typeof t?o(i(t)):t}</td></tr>`})).join("");return`<table class="${n.table}">${r}</table>`}function d(){return import("../../../arcade.js")}function f(e){return"createQuery"in e&&"queryFeatures"in e}async function g({graphic:e,view:r,options:t}){const{isAggregate:a,layer:o}=e;if(!a||!o||"2d"!==r?.type)return[];const i=await r.whenLayerView(o);if(!f(i))return[];const n=i.createQuery(),s=e.getObjectId();n.aggregateIds=null!=s?[s]:[];const{features:p}=await i.queryFeatures(n,t);return p}function y({layer:e,aggregatedFeatures:r,interceptor:t}){const{fields:o,objectIdField:i,geometryType:n,spatialReference:s,displayField:p}=e;return new a({fields:o,objectIdField:i,geometryType:n,spatialReference:s,displayField:p,interceptor:t,..."feature"===e.type?{templates:e.templates,typeIdField:e.typeIdField,types:e.types}:null,source:r})}async function m({expressionInfo:r,arcade:t,interceptor:a,spatialReference:o,map:i,graphic:n,location:s,view:c,options:u}){if(!r?.expression)return null;const{isAggregate:l}=n,d=(n.sourceLayer||n.layer)??void 0,f=l?"feature-reduction-popup":"popup",m=t.createArcadeProfile(f),w=t.createArcadeExecutor(r.expression,m).catch((e=>p().error("arcade-executor-error",{error:e,expressionInfo:r}))),[h,F]=await Promise.all([g({graphic:n,view:c,options:u}),w]);if(!F)return null;const $="feature-reduction-popup"===f?y({layer:d,aggregatedFeatures:h,interceptor:a}):void 0,v={..."feature-reduction-popup"===f?{$aggregatedFeatures:$}:{$datastore:d?.url,$layer:null!=d&&e(d)?d:"scene"===d?.type&&null!=d.associatedLayer?d.associatedLayer:void 0,$map:i,$userInput:s,$graph:"knowledge-graph-sublayer"===d?.type?d?.parentCompositeLayer?.knowledgeGraph:void 0},$feature:n},x={abortSignal:u?.signal??void 0,interceptor:a??void 0,rawOutput:!0,spatialReference:o??void 0,timeZone:c?.timeZone};return await F.executeAsync(v,x).catch((e=>p().error("arcade-execution-error",{error:e,graphic:n,expressionInfo:r}))).finally((()=>$?.destroy()))}async function w({expressionInfos:e,spatialReference:r,graphic:a,interceptor:o,map:i,view:n,location:s,options:p}){if(!e?.length)return{};const u=await d(),l={};for(const t of e)l[`expression/${t.name}`]=m({expressionInfo:t,arcade:u,interceptor:o,spatialReference:r,map:i,graphic:a,location:s,view:n,options:p});const f=await t(l),g={};for(const t in f)g[t]=c(f[t].value);return g}export{m as createCompiledExpression,w as createCompiledExpressions,d as loadArcade};
