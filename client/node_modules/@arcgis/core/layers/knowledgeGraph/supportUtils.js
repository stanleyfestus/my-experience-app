/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import"../../geometry.js";import e from"../../Graphic.js";import t from"../../request.js";import"../../symbols.js";import r from"../../core/Error.js";import{getOrCreateMapValue as o}from"../../core/MapUtils.js";import n from"../GraphicsLayer.js";import{convertFromGeometry as i}from"../graphics/featureConversionUtils.js";import s from"../graphics/OptimizedGeometry.js";import{systemOidFieldName as a}from"./layerUtils.js";import l from"./SessionMemoryStorage.js";import{Direction2D as c}from"../../libs/linkchartlayout/LinkChartLayout.js";import{executeQueryStreaming as d}from"../../rest/knowledgeGraphService.js";import m from"../../rest/knowledgeGraph/GraphQueryStreaming.js";import{ProtoOutboundRelationshipFeatureCollectionAttributionIndexes as y,ProtoInboundFeatureCollectionAttributionNames as p,ProtoOutboundEntityFeatureCollectionAttributionIndexes as f}from"../../rest/knowledgeGraph/ProtoFeatureCollection.js";import{getWasmInterface as u}from"../../rest/knowledgeGraph/wasmInterface/knowledgeWasmAccess.js";import{EsriFieldTypes as g}from"../../rest/knowledgeGraph/wasmInterface/WasmDataModelWrapperInterfaces.js";import{WasmQuantizeOriginPositionTypeCode as h,SqlTypeCode as w,IdArrayType as _}from"../../rest/knowledgeGraph/wasmInterface/WasmSerializedLayerData.js";import{wasmToProtoFeatureCollection as b}from"../../rest/knowledgeGraph/wasmInterface/wasmToFeatureFactories.js";import T from"../../symbols/CIMSymbol.js";import M from"../../geometry/Polyline.js";import E from"../../symbols/SimpleFillSymbol.js";import k from"../../geometry/Polygon.js";import I from"../../symbols/TextSymbol.js";import S from"../../geometry/Point.js";function C(e){if(!e.spatialReference.isWGS84)throw new r("knowledge-graph:layer-support-utils","The extentToInBoundsRings function only supports WGS84 spatial references.");return e.clone().normalize().map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}async function A(e,t){const r=[],o=new Map,n=[];if(t.dataModel?.relationshipTypes)for(const i of t.dataModel.relationshipTypes)i.name&&o.set(i.name,[]);for(const i of e)o.has(i.typeName)&&o.get(i.typeName)?.push(i.id);for(const[i,s]of o){if(s.length<1)continue;const e=new m({openCypherQuery:`MATCH (n)-[r:${i}]->(m) WHERE id(r) in $ids RETURN id(n), labels(n)[0], id(m), labels(m)[0]`,bindParameters:{ids:s}});n.push(d(t,e).then((async e=>{const t=e.resultRowsStream.getReader();for(;;){const{done:e,value:o}=await t.read();if(e)break;for(const t of o)r.push({id:t[0],typeName:t[1]}),r.push({id:t[2],typeName:t[3]})}})))}return await Promise.all(n),r}async function G(e,t){const r=new Map,o=new Map,n=[];if(t.dataModel?.relationshipTypes)for(const i of t.dataModel.relationshipTypes)i.name&&o.set(i.name,[]);for(const i of e)o.has(i.typeName)&&o.get(i.typeName)?.push(i.id);for(const[i,s]of o){if(s.length<1)continue;const e=new m({openCypherQuery:`MATCH (n)-[r:${i}]->(m) WHERE id(r) in $ids RETURN id(r), id(n), id(m)`,bindParameters:{ids:s}});n.push(d(t,e).then((async e=>{const t=e.resultRowsStream.getReader();for(;;){const{done:e,value:o}=await t.read();if(e)break;for(const t of o)r.set(t[0],[t[1],t[2]])}})))}return await Promise.all(n),r}async function N(e){const t=[],r={generateAllSublayers:!1,namedTypeDefinitions:new Map};return e.entitiesUrl&&t.push(L(e.entitiesUrl).then((e=>{v(e,r)}))),e.relationshipsUrl&&t.push(L(e.relationshipsUrl).then((e=>{v(e,r)}))),e.idCollectionsUrl&&t.push(P(e.idCollectionsUrl).then((e=>{z(e,r)}))),await Promise.all(t),r}async function F(e,t){t??=!1;const r={generateAllSublayers:t,namedTypeDefinitions:new Map};return await P(e).then((e=>{z(e,r)})),r}async function j(e,t,r){const o=await u(),n=new o.FeatureCollection,i=new o.FeatureCollection;try{x(n,o,e,"entities",t,r),x(i,o,e,"relationships",t,r);const s=new o.FeatureCollectionEncoder,a=new o.FeatureCollectionEncoder,l=H(n,s),c=structuredClone(l),d=H(i,a),m={entitiesFC:c,relationshipsFC:structuredClone(d),idCollections:await R(e)};return s.delete(),a.delete(),m}finally{n.delete(),i.delete()}}async function R(e){const t=await u(),o=new t.MapOfObjectIdentifierSets;D(o,t,e);const n=new t.MapOfObjectIdentifierSetsEncoder;try{n.set_map_of_identifier_sets(o),n.encode();const e=n.get_encoding_result();if(0!==e.error.error_code)throw new r("knowledge-graph:layer-support-utils",e.error.error_message);const t=structuredClone(e.get_byte_buffer());return n.delete(),t}finally{o.delete()}}function x(e,t,r,o,n,s){e.version="";const a=new t.QueryResult,l=new t.FeatureResult,c="entities"===o?f:y;l.unique_id_field={name:c[c.ELEMENTUID],isSystemMaintained:!1},l.globalid_field_name=c[c.ELEMENTUID],l.geohash_field_name="",l.geometry_properties={shapeAreaFieldName:"",shapeLengthFieldName:"",units:""},l.spatial_reference={wkid:4326,latestWkid:4326,vcsWkid:0,latestVcsWkid:0,wkt:""},l.exceeded_transfer_limit=!1,l.has_z=!1,l.has_m=!1,l.transform={quantizeOriginPosition:{value:h.upperLeft},scale:{xScale:1e-9,yScale:1e-9,mScale:1e-4,zScale:1e-4},translate:{xTranslate:-400,yTranslate:-400,mTranslate:-1e5,zTranslate:-1e5}};for(const i of Object.keys(c).filter((e=>isNaN(Number(e))))){const e=new t.Field;if(e.name=i,e.alias=i,e.sql_type={value:w.sqlTypeBigInt},"entities"===o)switch(i){case c[c.ELEMENTUID]:case c[c.TYPENAME]:e.field_type={value:g.esriFieldTypeString}}else switch(i){case c[c.ELEMENTUID]:case c[c.TYPENAME]:case y[y.FROMUID]:case y[y.TOUID]:e.field_type={value:g.esriFieldTypeString}}e.domain="",l.add_field(e),e.delete()}const d=new Map;for(const i of n.dataModel.entityTypes)d.set(i.name,"entities");for(const i of n.dataModel.relationshipTypes)d.set(i.name,"relationships");for(const[m,p]of r.namedTypeDefinitions)if(o===d.get(m))for(const e of p.members.values()){const r=new t.Feature;for(const i of Object.keys(c).filter((e=>isNaN(Number(e)))))if("entities"===o)switch(i){case c[c.ELEMENTUID]:r.add_attribute(e.id,t.esriFieldType.esriFieldTypeString);break;case c[c.TYPENAME]:r.add_attribute(m,t.esriFieldType.esriFieldTypeString)}else switch(i){case c[c.ELEMENTUID]:r.add_attribute(e.id,t.esriFieldType.esriFieldTypeString);break;case y[y.FROMUID]:r.add_attribute(s.has(e.id)?s.get(e.id)[0]:"",t.esriFieldType.esriFieldTypeString);break;case y[y.TOUID]:r.add_attribute(s.has(e.id)?s.get(e.id)[1]:"",t.esriFieldType.esriFieldTypeString);break;case c[c.TYPENAME]:r.add_attribute(m,t.esriFieldType.esriFieldTypeString)}let n;if(e.linkChartLocation&&"x"in e.linkChartLocation?n=i(e.linkChartLocation):e.linkChartLocation&&(n=e.linkChartLocation),e.linkChartLocation&&n){const e=new t.FeatureCollectionGeometry;let i=!1;switch(o){case"entities":e.geometry_type=t.esriGeometryType.esriGeometryPoint,i=!0;break;case"relationships":e.geometry_type=t.esriGeometryType.esriGeometryPolyline}e.coords=new Float64Array(n.coords),e.lengths=new Uint32Array(i?[1]:n.lengths),r.set_compressed_geometry(e),e.delete()}l.add_feature(r),r.delete()}switch(o){case"entities":l.geometry_type=t.esriGeometryType.esriGeometryPoint;break;case"relationships":l.geometry_type=t.esriGeometryType.esriGeometryPolyline}return a.set_feature_result(l),e.set_query_result(a),l.delete(),a.delete(),e}function D(e,t,r){for(const[o,n]of r.namedTypeDefinitions){if(!n.members||n.useAllData)continue;const r=n.members.keys();let i=!1,s=!0;const a=new t.ObjectIdArray,l=new t.StringArray,c=new t.GlobalIdArray,d=new t.IdentifierArray,m=new t.ObjectIdentifierSet;for(const e of r)s&&(i=!isNaN(Number(e)),s=!1),i?a.add_objectid(Number(e)):(l.add_string(e),c.add_globalid(e)),d.add_identifier(e);m.set_oid_array(a),m.set_string_array(l),m.set_globalid_array(c),m.set_identifier_array(d),a.delete(),l.delete(),c.delete(),d.delete(),e.put_identifier_set(o,m),m.delete()}return e}async function L(e){const r=await t(e,{responseType:"array-buffer"});return U(await r.data)}async function U(e){const t=new((await u()).FeatureCollectionDecoder),o=t.decode(new Uint8Array(e));if(0!==o.error_code)throw new r("knowledge-graph:layer-support-utils",o.error_message);const n=t.get_feature_collection(),i=b(n);return t.delete(),i}async function P(e){const r=await t(e,{responseType:"array-buffer"}),o=await r.data;return O(new Uint8Array(o))}async function O(e){const t=new((await u()).MapOfObjectIdentifierSetsDecoder),o=t.decode(new Uint8Array(e)),n=new Map;if(0!==o.error_code)throw new r("knowledge-graph:layer-support-utils",o.error_message);const i=t.get_map_of_identifier_sets(),s=i.keys,a=s.size();for(let l=0;l<a;l++){const e=s.get(l),t=i.query_identifier_set(e),o=[];if(t.id_array_type.value===_.GLOBALID_ARRAY){const e=t.get_globalid_array(),r=e.count();for(let t=0;t<r;t++)o.push(e.get_globalid_at(t))}else if(t.id_array_type.value===_.IDENTIFIER_ARRAY){const e=t.get_identifier_array(),r=e.count();for(let t=0;t<r;t++)o.push(e.get_identifier_at(t).toString())}else if(t.id_array_type.value===_.STRING_ARRAY){const e=t.get_string_array(),r=e.count();for(let t=0;t<r;t++)o.push(e.get_string_at(t))}else{if(t.id_array_type.value!==_.OID_ARRAY)throw new r("knowledge-graph:layer-support-utils","Tried to encode an unexpected ID Array type.");{const e=t.get_oid_array(),r=e.count();for(let t=0;t<r;t++)o.push(e.get_objectid_at(t).toString())}}n.set(e,o)}return t.delete(),n}function v(e,t){if(!e?.queryResult?.featureResult)return t;const r=e.queryResult.featureResult.fieldNameToAttributeIndexMap;for(const n of e.queryResult.featureResult.features){const e=n.attributes[r[p.TYPENAME]],i=o(t.namedTypeDefinitions,e,(()=>({useAllData:!1,members:new Map}))),a=n.attributes[r[p.ELEMENTUID]];if(n.compressedGeometry?.coords?.length>0){let e=n.compressedGeometry.lengths;"esriGeometryPoint"===n.compressedGeometry.geometryType&&(e=[]),i.members.set(a,{id:a,linkChartLocation:new s(e,n.compressedGeometry.coords)})}else i.members.set(a,{id:a})}return t}function z(e,t){for(const[r,n]of e){const e=o(t.namedTypeDefinitions,r,(()=>({useAllData:!1,members:new Map})));for(const t of n)e.members.has(t)||e.members.set(t,{id:t})}return t}const W="ESRI__ChronologicalLayoutOverlay",q=()=>W,Y=t=>{const r=[],o={type:"CIMGeometricEffectCut",beginCut:3,endCut:3};for(const n of t.chronologicalAuxiliaryGraphics?.lines??[]){const t={type:"CIMSolidStroke",enable:!0,width:n.width,color:[n.color.r,n.color.g,n.color.b,Math.round(n.color.a/100*255)],effects:n.dashPattern.length>0?[{type:"CIMGeometricEffectDashes",dashTemplate:n.dashPattern,lineDashEnding:"NoConstraint"},o]:[o]},i={type:"CIMVectorMarker",enable:!0,size:10,frame:{xmin:-5,ymin:-5,xmax:0,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{rings:[[[-12,-3.47],[-12,3.6],[-2.06,-.03],[-12,-3.47]]]},symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:[n.color.r,n.color.g,n.color.b,Math.round(n.color.a/100*255)]}]}}],markerPlacement:{type:"CIMMarkerPlacementOnLine",angleToLine:!0,relativeTo:"LineEnd",offsetAlongLine:0}},s=new T({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:n.arrowheadSizeAtEnd?[t,i]:[t]}}});for(const o of n.elements){const t=new M({paths:[[[o.origin.x,o.origin.y],[o.destination.x,o.destination.y]]]});r.push(new e({geometry:t,symbol:s}))}}for(const n of t.chronologicalAuxiliaryGraphics?.polygons??[]){const t=new E({color:[n.color.r,n.color.g,n.color.b,n.color.a/100],style:"solid",outline:null});for(const o of n.elements){const n=new k({rings:[o.points.map((e=>[e.x,e.y]))]});r.push(new e({geometry:n,symbol:t}))}}for(const n of t.chronologicalAuxiliaryGraphics?.texts??[]){let t="middle",o="center";switch(n.direction?.value){case c.left:o="right";break;case c.right:o="left";break;case c.bottom:t="bottom"}for(const i of n.elements){const s=new I({color:[n.color.r,n.color.g,n.color.b,n.color.a/100],text:i.str,font:{size:n.height,weight:"bold"},verticalAlignment:t,horizontalAlignment:o}),a=new S({x:i.anchor.x,y:i.anchor.y});r.push(new e({geometry:a,symbol:s}))}}return new n({graphics:r,listMode:"hide",title:W,id:W})},H=(e,t)=>{t.set_feature_collection(e),t.encode();const o=t.get_encoding_result();if(0!==o.error.error_code)throw new r("knowledge-graph:layer-support-utils",o.error.error_message);return o.get_byte_buffer()},Q=(e,t)=>{const r=new Map;for(const n of[...t.entityTypes??[],...t.relationshipTypes??[]])for(const e of n.properties??[])e.geometryType&&"esriGeometryNull"!==e.geometryType&&r.set(n.name,e.name??"");const o=l.getInstance();for(const n of e)o.writeToStore([n],a,r.get(n.typeName??"")??"")};export{v as addFeatureCollectionToInclusionDefinition,z as addIdMapToInclusionDefinition,U as deserializeFeatureCollection,O as deserializeIdCollectionMap,C as extentToInBoundsRings,F as fetchAndConvertSerializedKgIdMap,N as fetchAndConvertSerializedLinkChart,L as fetchAndDeserializeFeatureCollection,P as fetchAndDeserializeIdCollectionMap,Y as getChronologicalOverlay,q as getDefaultChronologicalOverlayLayerId,A as getRelationshipEndNodeIds,G as getRelationshipEndNodeMap,Q as loadRecordsIntoLocalCache,j as serializeInclusionDefinitionToAllPbf,R as serializeInclusionDefinitionToIdCollectionsMapPbf,x as setFeatureCollectionProperties};
