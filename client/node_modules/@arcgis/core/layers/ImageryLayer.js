/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import r from"../PopupTemplate.js";import{ClonableMixin as t}from"../core/Clonable.js";import s from"../core/Error.js";import{MultiOriginJSONMixin as i}from"../core/MultiOriginJSONSupport.js";import{debounce as o,throwIfAbortError as a}from"../core/promiseUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"../core/has.js";import"../core/Logger.js";import"../core/RandomLCG.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{writer as l}from"../core/accessorSupport/decorators/writer.js";import m from"./Layer.js";import{ArcGISImageService as c}from"./mixins/ArcGISImageService.js";import{ArcGISService as u}from"./mixins/ArcGISService.js";import{BlendLayer as d}from"./mixins/BlendLayer.js";import{CustomParametersMixin as y}from"./mixins/CustomParametersMixin.js";import{OperationalLayer as f}from"./mixins/OperationalLayer.js";import{PortalLayer as h}from"./mixins/PortalLayer.js";import{RasterPresetRendererMixin as g}from"./mixins/RasterPresetRendererMixin.js";import{RefreshableLayer as v}from"./mixins/RefreshableLayer.js";import{ScaleRangeLayer as S}from"./mixins/ScaleRangeLayer.js";import{TemporalLayer as j}from"./mixins/TemporalLayer.js";import{legendEnabled as L,popupEnabled as w}from"./support/commonProperties.js";import{serviceSupportsSpatialReference as I}from"./support/versionUtils.js";import{createPopupTemplate as b}from"../support/popupUtils.js";import{SaveOperationType as T}from"../webdoc/interfaces.js";let x=class extends(d(j(S(f(h(g(c(v(y(u(i(t(m))))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=o((async(e,r,t)=>{const{save:s,saveAs:i}=await import("./save/imageryUtils.js");switch(e){case T.SAVE:return s(this,r);case T.SAVE_AS:return i(this,t,r)}}))}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(a).then((()=>this._fetchService(r)))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,r,t){const s="vector-field"===this.renderer?.type;r[t]=s?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const r=this.rasterFields,t=this.title,s=new Set;let i=!1,o=!1;this.capabilities&&(i=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,o="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const a=new Set;i&&a.add("raster.itempixelvalue");for(const n of r){const e=n.name.toLowerCase();a.has(e)||e.includes("raster.servicepixelvalue.")||s.add(n.name)}o&&s.add("raster.magnitude").add("raster.direction");const p=b({fields:r,title:t},{...e,visibleFieldNames:s});return p?.fieldInfos&&this.rasterInfo?.pixelType.startsWith("f")&&p.fieldInfos.forEach((({format:e,fieldName:r})=>{e&&r&&/^raster\.(item|service)pixelvalue/i.test(r)&&(e.places=2)})),p}queryFeatures(e,r){return this.queryRasters(e,r).then((e=>{if(e?.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))}queryFeatureCount(e,r){return this.queryRasterCount(e,r)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(T.SAVE,e)}async saveAs(e,r){return this._debouncedSaveOperations(T.SAVE_AS,r,e)}serviceSupportsSpatialReference(e){return I(this,e)}write(e,r){if(!this._isPreviewLayer)return super.write(e,r);if(r?.messages){const e=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new s("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}};e([p(L)],x.prototype,"legendEnabled",null),e([p({type:["show","hide"]})],x.prototype,"listMode",null),e([p({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],x.prototype,"isReference",void 0),e([p({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],x.prototype,"operationalLayerType",void 0),e([l("web-map","operationalLayerType")],x.prototype,"writeOperationalLayerType",null),e([p(w)],x.prototype,"popupEnabled",void 0),e([p({type:r,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],x.prototype,"popupTemplate",void 0),e([p({readOnly:!0})],x.prototype,"defaultPopupTemplate",null),e([p({readOnly:!0,json:{read:!1}})],x.prototype,"type",void 0),e([p({readOnly:!0})],x.prototype,"_isPreviewLayer",null),x=e([n("esri.layers.ImageryLayer")],x);const P=x;export{P as default};
