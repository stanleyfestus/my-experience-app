/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import o from"../../request.js";import t from"../../core/Error.js";import{once as s}from"../../core/events.js";import r from"../../core/Logger.js";import{isAbsolute as i,makeAbsolute as n,getProxyRule as d,addProxy as a,isBlobProtocol as l,isDataProtocol as c}from"../../core/urlUtils.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/RandomLCG.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{writer as u}from"../../core/accessorSupport/decorators/writer.js";import h from"./MediaElementBase.js";import{mediaElementUrlProperty as v,mediaTypeProperty as y}from"./mediaUtils.js";import{i as g}from"../../chunks/persistableUrlUtils.js";let f=class extends h{constructor(e){super(e),this.autoplay=!0,this.content=null,this.type="video"}load(){const e=this.video;return"string"==typeof e?this.addResolvingPromise(this._preProcessVideoUrl(e).then((e=>{const o=document.createElement("video");return o.src=e,o.crossOrigin="anonymous",o.autoplay=!0,o.muted=!0,o.loop=!0,o.playsInline=!0,this._loadVideo(o).then((()=>{this._set("content",o)}))}))):e instanceof HTMLVideoElement?this.addResolvingPromise(this._loadVideo(e).then((()=>{this._set("content",e)}))):this.addResolvingPromise(Promise.reject(new t("video-element:invalid-video-type","Invalid video type",{video:e}))),Promise.resolve(this)}get contentWidth(){return this.content?.videoWidth??0}get contentHeight(){return this.content?.videoHeight??0}set video(e){"not-loaded"===this.loadStatus?this._set("video",e):r.getLogger(this).error("#video","video cannot be changed after the element is loaded.")}writeVideo(e,o,s,r){if(!e)return void(r?.messages&&r.messages.push(new t("video-element:unsupported-video","video source is missing")));const d=b(e)?e:null;if(!d)return void(r?.messages&&r.messages.push(new t("video-element:unsupported-video","video source must be an absolute url")));!i(d)&&r?.blockedRelativeUrls&&r.blockedRelativeUrls.push(d);const a=n(d);!g(a)?o[s]=a:r?.messages&&r.messages.push(new t("video-element:unsupported-video","video source cannot be an item resource"))}async _preProcessVideoUrl(e){if(d(e))return a(e);try{return await o(e,{method:"head"}),e}catch{return a(e,!0)}}_loadVideo(e){return new Promise(((o,t)=>{const r=s(e,"canplay",(()=>{this.removeHandles("canplay"),this.autoplay?e.play().then(o,t):o()}));this.addHandles(r,"canplay"),"anonymous"!==e.crossOrigin&&(e.crossOrigin="anonymous",l(e.src)||(e.src=e.src))}))}};e([p()],f.prototype,"autoplay",void 0),e([p({readOnly:!0})],f.prototype,"content",void 0),e([p({readOnly:!0})],f.prototype,"contentWidth",null),e([p({readOnly:!0})],f.prototype,"contentHeight",null),e([p(v)],f.prototype,"video",null),e([u("video")],f.prototype,"writeVideo",null),e([p(y)],f.prototype,"type",void 0),f=e([m("esri.layers.support.VideoElement")],f);const j=f;function b(e){return"string"==typeof e&&!c(e)&&!l(e)}export{j as default};
