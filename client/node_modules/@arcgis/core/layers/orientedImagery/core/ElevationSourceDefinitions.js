/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{ClonableMixin as o}from"../../../core/Clonable.js";import r from"../../../core/Error.js";import{JSONSupport as t}from"../../../core/JSONSupport.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{fetchArcGISServiceJSON as i}from"../../../support/requestPresets.js";let p=class extends(o(t)){constructor(){super(...arguments),this.url=null}};e([s({type:Number,json:{write:!0}})],p.prototype,"lod",void 0),e([s({type:String,json:{write:!0}})],p.prototype,"rasterFunction",void 0),e([s({type:String,json:{write:!0}})],p.prototype,"url",void 0),p=e([n("esri.layers.orientedImagery.core.ElevationSourceDefinitions.ElevationSource")],p);let a=class extends(o(t)){constructor(){super(...arguments),this.constantElevation=null}};e([s({type:Number,json:{write:!0}})],a.prototype,"constantElevation",void 0),a=e([n("esri.layers.orientedImagery.core.ElevationSourceDefinitions.ConstantElevation")],a);const c=e=>null!=e&&"number"==typeof e.constantElevation,l=e=>null!=e&&e.url?.length>0;async function u(e){const o=await i(e),{tileInfo:t,cacheType:s}=o;return o.hasOwnProperty("bandCount")&&o.hasOwnProperty("pixelSizeX")?"LERC"!==t?.format?.toUpperCase()||s&&"elevation"!==s.toLowerCase()?{isSupported:!0,isDynamic:!0}:{isSupported:!0}:{isSupported:!1,error:new r("elevation-source:invalid-service-url",`ElevationSource URL expects an elevation 3D image service but given ${e}`)}}export{a as ConstantElevation,p as ElevationSource,c as isConstantElevation,l as isElevationSource,u as validateElevationSourceURL};
