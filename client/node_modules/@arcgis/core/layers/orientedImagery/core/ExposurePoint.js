/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import{ClonableMixin as t}from"../../../core/Clonable.js";import r from"../../../core/Error.js";import{JSONSupport as o}from"../../../core/JSONSupport.js";import a from"../../../core/Logger.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import{cast as n}from"../../../core/accessorSupport/decorators/cast.js";import{enumeration as p}from"../../../core/accessorSupport/decorators/enumeration.js";import{reader as s}from"../../../core/accessorSupport/decorators/reader.js";import{subclass as c}from"../../../core/accessorSupport/decorators/subclass.js";import{writer as l}from"../../../core/accessorSupport/decorators/writer.js";import{getGeometryZScaler as m}from"../../../geometry/support/zscale.js";import u from"./CameraOrientation.js";import y from"./cameraOrientationFactory.js";import{appendPrefixAndSuffix as d,getEffectiveElevationSource as f,orientedImageryTypeMap as g}from"./utils.js";import{CameraOrientationType as h}from"../enums/CameraOrientationType.js";import{ltpToGeographic as v}from"../transformations/utils.js";import w from"../../../geometry/Point.js";function j(e){throw new r("exposure-point:missing-default-value",`a value for ${e} is missing in default properties`)}function b(e,t){throw new r("exposure-point:missing-attribute-value",`a value for ${e} is missing in attribute table`,{exposurePoint:t})}const O=e=>({cast:e=>{const t=parseFloat(e);return Number.isFinite(t)?t:void 0},json:{name:e,write:{writer:(e,t,r)=>{t[r]=Number.isFinite(e)?e:void 0}}}}),I=e=>({cast:e=>"string"==typeof e?e.split(";").map(Number):e,json:{default:e,write:{writer:(e,t,r)=>{t[r]=e?.join(";")}}}});let N=class extends(t(o)){constructor(e){super(e),this.cameraOrientation=null,this.elevation=null,this.elevationSource=null,this.name=null,this.sourceMap=null}read(e,t){const r={},{attributes:o,layer:a,geometry:i}=e,n={};for(const p in o)r[p.toLowerCase()]=o[p],n[p.toLowerCase()]=p;super.read({geometry:i,layer:a??{},sourceMap:n,...r},t)}write(e,t){const r=super.write(e,t),{sourceMap:o}=this;if(!o||!r)return r;const a={};for(const i in r){const e=o[i.toLowerCase()];e&&(a[e]=r[i])}return a}readCameraHeading(e,t){const{cameraheading:r,camheading:o,layer:a}=t;return r??o??a.cameraHeading}readCameraHeight(e,t){const{cameraheight:r,avghtag:o,layer:a}=t;return r??o??a.cameraHeight}readCamOffset(e,t){const{cameraoffset:r,camoffset:o}=t;return r?.split(";").map(Number)??o?.split(";").map(Number)??null}writeCameraOffset(e,t){e&&(t.cameraOffset=e.join(";"))}readCameraOrientation(e,t){const{cameraorientation:r,camori:o}=t;return r??o}readCameraPitch(e,t){const{camerapitch:r,campitch:o,layer:a}=t;return r??o??a.cameraPitch}readCameraRoll(e,t){const{cameraroll:r,camroll:o,layer:a}=t;return r??o??a.cameraRoll}readDepthImage(e,t){const{depthimage:r,depthimg:o,layer:a}=t,i=r??o??null,{depthImagePathPrefix:n,depthImagePathSuffix:p}=a??{};return d(i,n,p)}readElevationSource(e,t){const{elevationsource:r,layer:o}=t,{demPathSuffix:a,demPathPrefix:i}=o;if(r){const e=this._parseIfJSON(r);return f(e,i,a)}return o.effectiveElevationSource}readFarDistance(e,t){const{fardistance:r,fardist:o,layer:a}=t;return r??o??a.farDistance}readHFOV(e,t){const{horizontalfieldofview:r,hfov:o,layer:a}=t;return r??o??a.horizontalFieldOfView}readImageURL(e,t){const{imagepath:r,layer:o}=t;r||b("imagePath",this);const{imagePathPrefix:a,imagePathSuffix:i}=o;return d(r,a,i)}readImageRotation(e,t){const{imagerotation:r,imgrot:o,layer:a}=t;return r??o??a.imageRotation}get isHorizontal(){return"horizontal"===this.orientedImageryType}get isInspection(){return"inspection"===this.orientedImageryType}get isNadir(){return"nadir"===this.orientedImageryType}get isOblique(){return"oblique"===this.orientedImageryType}get isSpherical(){return"360"===this.orientedImageryType}get location(){const{cameraOrientation:e,cameraHeight:t,elevation:r}=this;if(e){const{type:t,x:r,y:o,z:a,horizontalWKID:i,verticalWKID:n}=e,p="number"==typeof i?{wkid:i}:{wkt:i};if(t===h.LTP){const{latitude:t,longitude:r,ellipsoidRadius:o,squaredEccentricity:a,properties:i}=e,{x:n,y:p,z:s}=i;return new w(v([n,p,s],[t,r,o,a]))}const s=new w({x:r,y:o,z:a,spatialReference:p}),c=n?m("point",{wkid:n},p):null;return c&&c(s),s}if("number"!=typeof t)throw j("cameraHeight");const o=this.geometry.clone();return o.z=o.hasZ?o.z:(r??0)+t,o}set matrix(e){if(!e||9!==e.length)return a.getLogger(this).warn("Ignoring rotation matrix because it doesn't have 9 values",{value:e}),void this._set("matrix",null);this._set("matrix",e)}readNearDistance(e,t){const{neardistance:r,neardist:o,layer:a}=t;return r??o??a.nearDistance}readOrientationAccuracy(e,t){const{accuracy:r,orientationaccuracy:o}=t;return o?.split(";").map(Number)??r?.split(";").map(Number)??null}writeOrientationAccuracy(e,t){e&&(t.orientationAccuracy=e.join(";"))}readOIType(e,t){const{orientedimagerytype:r,oitype:o,camerapitch:a,campitch:i,layer:n}=t,p=g.read(r??o??n.orientedImageryType),s=a??i??n.cameraPitch;return"oblique"===p?s<10?"nadir":"oblique":p}set radial(e){if(e)if("string"!=typeof e)this._set("radial",e);else{const[t,r,o]=e.split(";").map(Number);this._set("radial",[t??0,r??0,o??0])}else this._set("radial",[0,0,0])}set tangential(e){if(e)if("string"!=typeof e)this._set("tangential",e);else{const[t,r]=e.split(";").map(Number);this._set("tangential",[t??0,r??0])}else this._set("tangential",[0,0])}readVFOV(e,t){const{verticalfieldofview:r,vfov:o,layer:a}=t;return r??o??a.verticalFieldOfView}_parseIfJSON(e){let t=null;try{t=JSON.parse(e)}catch(r){a.getLogger(this).error("couldn't parse the given elevation source JSON",e,r)}return t}};e([i(O())],N.prototype,"a0",void 0),e([i(O())],N.prototype,"a1",void 0),e([i(O())],N.prototype,"a2",void 0),e([i({type:Date,json:{write:{enabled:!0,target:"acquisitionDate"},name:"acquisitiondate"}})],N.prototype,"acquisitionDate",void 0),e([i(O())],N.prototype,"b0",void 0),e([i(O())],N.prototype,"b1",void 0),e([i(O())],N.prototype,"b2",void 0),e([i({type:Number,json:{write:!0,read:{source:["cameraheading","camheading","layer.cameraHeading"]}}})],N.prototype,"cameraHeading",void 0),e([s("cameraHeading")],N.prototype,"readCameraHeading",null),e([i({type:Number,json:{write:!0}})],N.prototype,"cameraHeight",void 0),e([s("cameraHeight",["cameraheight","avghtag","layer.cameraHeight"])],N.prototype,"readCameraHeight",null),e([i()],N.prototype,"cameraOffset",void 0),e([s("cameraOffset",["cameraoffset","camoffset"])],N.prototype,"readCamOffset",null),e([l("cameraOffset")],N.prototype,"writeCameraOffset",null),e([i({json:{write:{writer:(e,t,r)=>{t[r]=e.toString()}}},type:u}),n((e=>e?y.getCameraOrientation(e):null))],N.prototype,"cameraOrientation",void 0),e([s("cameraOrientation",["cameraorientation","camori"])],N.prototype,"readCameraOrientation",null),e([i({type:Number,json:{write:!0}})],N.prototype,"cameraPitch",void 0),e([s("cameraPitch",["camerapitch","campitch","layer.cameraPitch"])],N.prototype,"readCameraPitch",null),e([i({type:Number,json:{write:!0}})],N.prototype,"cameraRoll",void 0),e([s("cameraRoll",["cameraroll","camroll","layer.cameraRoll"])],N.prototype,"readCameraRoll",null),e([i({json:{write:!0},type:String})],N.prototype,"depthImage",void 0),e([s("depthImage",["depthimage","depthimg"])],N.prototype,"readDepthImage",null),e([i({type:Number,json:{write:!0}})],N.prototype,"elevation",void 0),e([i({json:{write:!0},clonable:"reference"})],N.prototype,"elevationSource",void 0),e([s("elevationSource",["elevationsource","layer.effectiveElevationSource"])],N.prototype,"readElevationSource",null),e([i({json:{name:"exposurestationid",write:{target:"exposureStationId"}},type:String})],N.prototype,"exposureStationId",void 0),e([i({type:Number,json:{write:!0}})],N.prototype,"farDistance",void 0),e([s("farDistance",["fardistance","fardist","layer.farDistance"])],N.prototype,"readFarDistance",null),e([i(O("focallength"))],N.prototype,"focalLength",void 0),e([i({type:w,json:{name:"geometry"}})],N.prototype,"geometry",void 0),e([i({type:Number,json:{write:!0}})],N.prototype,"horizontalFieldOfView",void 0),e([s("horizontalFieldOfView",["horizontalfieldofview","hfov","layer.horizontalFieldOfView"])],N.prototype,"readHFOV",null),e([i({json:{write:!0},type:String})],N.prototype,"imagePath",void 0),e([s("imagePath",["imagepath"])],N.prototype,"readImageURL",null),e([i({type:Number,json:{write:!0}})],N.prototype,"imageRotation",void 0),e([s("imageRotation",["imagerotation","imgrot","layer.imageRotation"])],N.prototype,"readImageRotation",null),e([i()],N.prototype,"isHorizontal",null),e([i()],N.prototype,"isInspection",null),e([i()],N.prototype,"isNadir",null),e([i()],N.prototype,"isOblique",null),e([i()],N.prototype,"isSpherical",null),e([i()],N.prototype,"location",null),e([i(I())],N.prototype,"matrix",null),e([i({json:{write:!0},type:String})],N.prototype,"name",void 0),e([i({type:Number,json:{write:!0}})],N.prototype,"nearDistance",void 0),e([s("nearDistance",["neardistance","neardist","layer.nearDistance"])],N.prototype,"readNearDistance",null),e([i({json:{write:!0,name:"objectid"},type:Number})],N.prototype,"objectId",void 0),e([i()],N.prototype,"orientationAccuracy",void 0),e([s("orientationAccuracy",["accuracy","orientationaccuracy"])],N.prototype,"readOrientationAccuracy",null),e([l("orientationAccuracy")],N.prototype,"writeOrientationAccuracy",null),e([p(g)],N.prototype,"orientedImageryType",void 0),e([s("orientedImageryType",["orientedimagerytype","oitype","layer.orientedImageryType"])],N.prototype,"readOIType",null),e([i({type:Number,json:{write:!0}})],N.prototype,"principalX",void 0),e([i({type:Number,json:{write:!0}})],N.prototype,"principalY",void 0),e([i(I([0,0,0]))],N.prototype,"radial",null),e([i({type:Number,json:{name:"sortorder",write:{target:"sortOrder"}}})],N.prototype,"sortOrder",void 0),e([i({type:Object})],N.prototype,"sourceMap",void 0),e([i(I([0,0]))],N.prototype,"tangential",null),e([i({type:Number,json:{write:!0}})],N.prototype,"verticalFieldOfView",void 0),e([s("verticalFieldOfView",["verticalfieldofview","vfov","layer.verticalFieldOfView"])],N.prototype,"readVFOV",null),N=e([c("esri.layers.orientedImagery.core.ExposurePoint")],N);const S=N;export{S as default};
