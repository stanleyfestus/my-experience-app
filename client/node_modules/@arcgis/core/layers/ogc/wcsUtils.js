/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import r from"../../request.js";import e from"../../core/Error.js";import{isAbortError as s}from"../../core/promiseUtils.js";import{parseCapabilities as t}from"../support/rasterDatasets/wcsCapabilitiesParser.js";import{parseCoverages as o}from"../support/rasterDatasets/wcsCoverageParser.js";async function a(o,a){const{version:i,customParameters:c,signal:n}=a??{},p=i?.startsWith("1.0")?"version":"acceptVersions",m={service:"WCS",request:"GetCapabilities",[p]:i,...c};try{const{data:e}=await r(o,{query:m,responseType:"xml",signal:n});return t(e)}catch(l){if(!s(l))throw new e("wcslayer:open","wcs capabilities is not valid or supported");throw l}}async function i(t,a){const{coverageIds:i,version:c,customParameters:n,signal:p}=a,m=c.slice(0,3),l="1.0"===m?"coverage":"1.1"===m?"identifiers":"coverageId",u={service:"WCS",request:"DescribeCoverage",version:c,[l]:i.join(","),...n};try{const{data:e}=await r(t,{query:u,responseType:"xml",signal:p});return o(e,c)}catch(v){if(!s(v))throw new e("wcslayer:open","wcs coverage description is not valid or supported");throw v}}export{i as describeCoverage,a as getCapabilities};
