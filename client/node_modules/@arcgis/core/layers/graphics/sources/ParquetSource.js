/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Error.js";import r from"../../../core/Loadable.js";import{throwIfAborted as o}from"../../../core/promiseUtils.js";import{getFilename as i}from"../../../core/urlUtils.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{createDrawingInfo as n}from"./support/clientSideDefaults.js";import{inferGeometrySource as l}from"../../support/parquetLayerUtils.js";import{ParquetMetadata as m}from"../../../libs/parquet/parquet.js";import{toJSONGeometryType as p}from"../../../views/2d/layers/support/util.js";const c=["parquet"];let u=class extends r{constructor(e){super(e),this.type="parquet"}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._initialize(t)),Promise.resolve(this)}async _initialize(e){const r=this.loadOptions.url;if(null==r)throw new t("missing-metadata","Unable to create parquet source: no url specified",this.loadOptions);const s=this.loadOptions.metadata??await m.create(r,(()=>this.customParameters));o(e);const a=this._createGeometrySource(s,this.loadOptions);if(null==a)throw new t("missing-metadata","Unable to create parquet source: cannot infer geometrySource",this.loadOptions);this.geometryInfo=a,this.sourceJSON={name:i(r,c)||"parquet",drawingInfo:n(p(a.geometryType)),geometryType:p(a.geometryType),spatialReference:a.spatialReference,objectIdField:this.loadOptions.objectIdField??"__OBJECTID",fields:s.fields}}_createGeometrySource(e,t){const r=t.geometrySourceInfo??l(e);if(!r)return null;switch(r.type){case"location":return this._createLocationInfo(r);case"geometry":return this._createGeometryInfo(r)}}_createLocationInfo(e){if(null==e.latitudeFieldName)throw new t("missing-metadata","Missing latitudeFieldName",e);if(null==e.longitudeFieldName)throw new t("missing-metadata","Missing longitudeFieldName",e);return{type:"location",latitudeFieldName:e.latitudeFieldName,longitudeFieldName:e.longitudeFieldName,geometryType:"point",spatialReference:e.spatialReference??{wkid:4326}}}_createGeometryInfo(e){if(null==e.geometryType)throw new t("missing-metadata","Missing geometryType",e);if(null==e.spatialReference)throw new t("missing-metadata","Missing spatialReference",e);if(null==e.primaryFieldName)throw new t("missing-metadata","Missing primaryFieldName",e);if("WKB"!==e.format)throw new t("unsupported","Geometry encoding must be 'WKB'",e);return{type:"geometry",format:"WKB",spatialReference:e.spatialReference,primaryFieldName:e.primaryFieldName,geometryType:e.geometryType}}};e([s()],u.prototype,"type",void 0),e([s()],u.prototype,"loadOptions",void 0),e([s()],u.prototype,"sourceJSON",void 0),e([s()],u.prototype,"geometryInfo",void 0),e([s()],u.prototype,"customParameters",void 0),u=e([a("esri.layers.graphics.sources.ParquetSource")],u);export{u as ParquetSource};
