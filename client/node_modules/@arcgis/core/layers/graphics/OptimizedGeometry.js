/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
const t=2;class s{constructor(t=[],s=[]){this.lengths=t??[],this.coords=s??[]}static fromJSON(t){return new s(t.lengths,t.coords)}static fromRect(t){const[e,r,h,o]=t,n=h-e,l=o-r;return new s([5],[e,r,n,0,0,l,-n,0,0,-l])}get isPoint(){return 0===this.lengths.length&&this.coords.length>=2}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce(((t,s)=>t+s))}forEachVertex(s){let e=0;this.lengths.length||s(this.coords[0],this.coords[1]);for(let r=0;r<this.lengths.length;r++){const h=this.lengths[r];for(let r=0;r<h;r++){s(this.coords[t*(r+e)],this.coords[t*(r+e)+1])}e+=h}}deltaDecode(){const t=this.clone(),{coords:s,lengths:e}=t;let r=0;for(const h of e){for(let t=1;t<h;t++)s[2*(r+t)]+=s[2*(r+t)-2],s[2*(r+t)+1]+=s[2*(r+t)-1];r+=h}return t}clone(e){if(0===this.lengths.length)return new s([],[this.coords[0],this.coords[1]]);const r=(0===this.lengths.length?1:this.lengths.reduce(((t,s)=>t+s)))*t,h=this.coords.slice(0,r);return e?(e.set(h),new s(this.lengths,e)):new s(Array.from(this.lengths),Array.from(h))}}export{s as default};
