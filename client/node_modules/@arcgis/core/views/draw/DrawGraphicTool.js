/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Graphic.js";import{UndoRedo as o}from"../../UndoRedo.js";import{createTask as r}from"../../core/asyncUtils.js";import i from"../../core/Evented.js";import{makeHandle as s}from"../../core/handleUtils.js";import{destroyMaybe as n}from"../../core/maybe.js";import{watch as a,syncAndInitial as p,sync as l}from"../../core/reactiveUtils.js";import{property as c}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as h}from"../../core/accessorSupport/decorators/subclass.js";import{load as d}from"../../geometry/coordinateFormatter.js";import u from"../../layers/GraphicsLayer.js";import{pointEquals as m}from"../../layers/graphics/dehydratedFeatureComparison.js";import{CreateOperationGeometry as y}from"./support/CreateOperationGeometry.js";import{createCircle as g,createEllipse as v,createSquare as f,createRectangle as _,createPolygon as O,createPolyline as w,createMultipoint as C}from"./support/createUtils.js";import{createViewAlignedCoordinateSystem as G}from"./support/surfaceCoordinateSystems.js";import{createTooltipInfos as x,initializeConstraints as V,unlockConstraintsOnVertexAddOrRemove as b,lockElevationOnVertexAdd as S,getActiveTooltipInfo as U,updateTooltipInfo as j,getConstraintZ as T}from"./support/tooltipUtils.js";import{InteractiveToolBase as k}from"../interactive/InteractiveToolBase.js";import H from"../interactive/sketch/SketchOptions.js";import{makeTooltip as R,pasteLocation as L,enterInputModeIfAvailable as z}from"../interactive/tooltip/tooltipCommonUtils.js";import{autorun as E}from"../../core/accessorSupport/trackingUtils.js";let I=class extends(i.EventedMixin(k)){constructor(t){super(t),this._graphic=null,this._coordinateFormatterLoadTask=null,this._createOperationGeometry=null,this.defaultZ=0,this.directionOptions=null,this.geometryType=null,this.hasZ=!0,this.geometryToPlace=null,this.snappingManager=null,this.snapToScene=!1,this.sketchOptions=new H}initialize(){const{view:t}=this;this.internalGraphicsLayer=new u({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer);const e=this.drawOperation=this.makeDrawOperation();this.tooltipInfos=x(t.type,this.sketchOptions);const o=R((()=>({view:t,options:this.sketchOptions.tooltips})));this.tooltip=o,V(this._tooltipsContext),this._coordinateFormatterLoadTask=r((()=>d())),this.addHandles([e.on("vertex-add",(t=>this.onVertexAdd(t))),e.on("vertex-remove",(t=>this.onVertexRemove(t))),e.on("vertex-update",(t=>this.onVertexUpdate(t))),e.on("cursor-update",(t=>this.onCursorUpdate(t))),e.on("cursor-remove",(()=>this._updateGraphic())),e.on("complete",(t=>this.onComplete(t))),this._coordinateFormatterLoadTask,o.on("paste",(t=>L(t,this.activeTooltipInfo))),a((()=>this.cursor),(t=>{e.cursor=t}),p),E((()=>{const{activeTooltipInfo:t,sketchOptions:e}=this;j(t,this._tooltipsContext),o.info=e.tooltips.effectiveEnabled?t:null})),E((()=>{e.constraintZ=T(this._tooltipsContext)}),l)]),this.finishToolCreation()}destroy(){this.drawOperation=n(this.drawOperation),this.tooltip=n(this.tooltip),this._destroyAllVisualizations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=n(this.internalGraphicsLayer),this._set("view",null)}get _drawSpatialReference(){return this.drawOperation.coordinateHelper.spatialReference}get _tooltipsContext(){return{createOperationGeometry:this._createOperationGeometry,defaultZ:this.defaultZ,directionOptions:this.directionOptions,drawOperation:this.drawOperation,forceUniformSize:this.forceUniformSize,geometryType:this.geometryType,graphic:this.graphic,sketchOptions:this.sketchOptions,tooltipInfos:this.tooltipInfos,view:this.view}}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(t){this._set("centered",t),this._updateGraphic()}get cursor(){return this._get("cursor")}set cursor(t){this._set("cursor",t)}set enabled(t){this.drawOperation.interactive=t,this._set("enabled",t)}set forceUniformSize(t){this._set("forceUniformSize",t),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(t){this._set("graphicSymbol",t),null!=this._graphic&&(this._graphic.symbol=t)}set mode(t){const e=this.drawOperation;e&&(e.drawingMode=t),this._set("mode",t)}get updating(){return this.drawOperation?.updating??!1}get undoRedo(){const{view:{type:t,map:e}}=this;return"2d"===t&&e&&"undoRedo"in e&&e.undoRedo instanceof o?e.undoRedo:null}set undoRedo(t){this._override("undoRedo",t)}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(t){this.destroyed||z(t,this.tooltip)||this.drawOperation.onInputEvent(t)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo(),0===this.drawOperation.numCommittedVertices&&V(this._tooltipsContext)}_destroyAllVisualizations(){this.removeHandles(F.outline),this.removeHandles(F.regularVertices),this.removeHandles(F.activeVertex),this.removeHandles(F.activeEdge),this.removeHandles(A)}_createOrUpdateGraphic(t){if(null!=this._graphic)return this.updateGraphicGeometry(t),this._graphic;const o=new e({...this.graphicProperties,symbol:this.graphicSymbol});return this._graphic=o,this.updateGraphicGeometry(t),this.internalGraphicsLayer.add(o),this.addHandles(this.initializeGraphic(o)),this.notifyChange("graphic"),this.addHandles(s((()=>{this.internalGraphicsLayer.remove(o),this._graphic===o&&(this._graphic=null)})),A),o}updateGraphicGeometry(t){this._graphic.geometry=t}_getCreateOperationGeometry(t={operationComplete:!1}){if(null==this.drawOperation)return;const{coordinateHelper:e,view:o,visualizationCursorVertex:r,lastVertex:i,committedVertices:s,geometryIncludingUncommittedVertices:n,numCommittedVertices:a}=this.drawOperation;if(!(a>0||null!=r))return;const p=t.operationComplete?s:n,l=p.length,c=null!=r?e.pointToArray(r):null,h=this._drawSpatialReference,d="3d"===o.type&&"global"===o.viewingMode,u=new y;u.committedVertices=s,u.cursorVertex=c;const{geometryType:x}=this;switch(x){case"point":case"mesh":u.full=e.arrayToPoint(p[0]);break;case"multipoint":u.full=l>0?C(p,h):null;break;case"polyline":case"polygon":l>0&&(u.full="polygon"===x?O([p],h,d,!0):w([p],h,d),u.cursorEdge=null!=c&&i&&!m(r,i)?w([[c,e.pointToArray(i)]],h,d):null,u.outline=l>1?u.full:null);break;case"circle":case"rectangle":{if(u.committedVertices=u.cursorVertex=null,!l)break;const e=G(o,p[0]),r=p[0],i=e.makeMapPoint(r[0]+Z*o.resolution,r[1]);"circle"===x?1===l&&t.operationComplete?u.circle=g([r,i],e,!0):2===l&&(this.forceUniformSize?u.circle=g(p,e,this.centered):u.rectangle=v(p,e,this.centered)):1===l&&t.operationComplete?u.rectangle=f([r,i],e,!0):2===l&&(u.rectangle=this.forceUniformSize?f(p,e,this.centered):_(p,e,this.centered)),u.full=null!=u.circle?u.circle.geometry:u.rectangle?.geometry,u.outline="polygon"===u.full?.type?u.full:null;break}default:return null}return u}initializeGraphic(t){return s()}onComplete(t){if(!this.drawOperation)return;this._updateGraphic();let e=null;if(this.drawOperation.isCompleted){const t=this._getCreateOperationGeometry({operationComplete:!0});null!=t&&(e=this._createOrUpdateGraphic(t.full))}this._createOperationGeometry=null,this.emit("complete",{graphic:e,...t})}onCursorUpdate(t){this._updateGraphic(),this.emit("cursor-update",t)}onDeactivate(){const{drawOperation:t}=this;t&&(t.isCompleted||t.cancel())}onOutlineChanged(t){return s()}onCursorEdgeChanged(t){return s()}onVertexAdd(t){b(this._tooltipsContext),this._updateGraphic(),S(t.vertices.at(0)?.coordinates,this._tooltipsContext),this.emit("vertex-add",t)}onVertexRemove(t){b(this._tooltipsContext),this._updateGraphic(),this.emit("vertex-remove",t)}onVertexUpdate(t){this._updateGraphic(),this.emit("vertex-update",t)}_updateGraphic(){const t=this._getCreateOperationGeometry();this._createOperationGeometry=t,null!=t?(null!=t.cursorEdge?this.addHandles(this.onCursorEdgeChanged(t.cursorEdge),F.activeEdge):this.removeHandles(F.activeEdge),null!=t.outline?this.addHandles(this.onOutlineChanged(t.outline),F.outline):this.removeHandles(F.outline),null!=t.committedVertices?this.addHandles(this.onRegularVerticesChanged(t.committedVertices),F.regularVertices):this.removeHandles(F.regularVertices),null!=t.cursorVertex?this.addHandles(this.onActiveVertexChanged(t.cursorVertex),F.activeVertex):this.removeHandles(F.activeVertex),null!=t.full?this._createOrUpdateGraphic(t.full):this.removeHandles(A)):this._destroyAllVisualizations()}get activeTooltipInfo(){return this._coordinateFormatterLoadTask?.finished?U(this._tooltipsContext):null}};t([c()],I.prototype,"_coordinateFormatterLoadTask",void 0),t([c()],I.prototype,"_createOperationGeometry",void 0),t([c()],I.prototype,"_tooltipsContext",null),t([c({value:!0})],I.prototype,"centered",null),t([c()],I.prototype,"cursor",null),t([c({nonNullable:!0})],I.prototype,"defaultZ",void 0),t([c({constructOnly:!0})],I.prototype,"directionOptions",void 0),t([c()],I.prototype,"drawOperation",void 0),t([c({value:!0})],I.prototype,"enabled",null),t([c({value:!0})],I.prototype,"forceUniformSize",null),t([c({constructOnly:!0})],I.prototype,"geometryType",void 0),t([c()],I.prototype,"graphic",null),t([c({constructOnly:!0})],I.prototype,"graphicProperties",void 0),t([c()],I.prototype,"graphicSymbol",null),t([c({constructOnly:!0})],I.prototype,"hasZ",void 0),t([c({constructOnly:!0})],I.prototype,"geometryToPlace",void 0),t([c()],I.prototype,"mode",null),t([c()],I.prototype,"snappingManager",void 0),t([c()],I.prototype,"snapToScene",void 0),t([c()],I.prototype,"tooltip",void 0),t([c()],I.prototype,"tooltipInfos",void 0),t([c({constructOnly:!0,type:H})],I.prototype,"sketchOptions",void 0),t([c()],I.prototype,"updating",null),t([c({constructOnly:!0,nonNullable:!0})],I.prototype,"view",void 0),t([c({constructOnly:!0})],I.prototype,"undoRedo",null),t([c()],I.prototype,"activeTooltipInfo",null),I=t([h("esri.views.draw.DrawGraphicTool")],I);const A=Symbol("create-operation-graphic"),F={outline:Symbol("outline-visual"),regularVertices:Symbol("regular-vertices-visual"),activeVertex:Symbol("active-vertex-visual"),activeEdge:Symbol("active-edge-visual")};function M(t){switch(t){case"point":case"polyline":case"polygon":case"multipoint":return t;case"circle":case"rectangle":return"segment";case"mesh":return"point"}}const Z=48;export{I as DrawGraphicTool,M as geometryTypeToDrawOperationGeometryType};
