/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import"../../../../../../../symbols.js";import e from"../../../../../../../core/Logger.js";import{pt2px as i}from"../../../../../../../core/screenUtils.js";import{generateGradient as a}from"../../../../../../../renderers/support/heatmapUtils.js";import{CIMSymbolHelper as l,slsDashToTemplateArray as r}from"../../../../../../../symbols/cim/CIMSymbolHelper.js";import{Alignment as t,ExtremityPlacement as o}from"../../../../../../../symbols/cim/enums.js";import{getSDFInfo as s}from"../../../../../../../symbols/cim/SDFHelper.js";import{getAlignmentFromPlacement as n}from"../../../../../engine/webgl/alignmentUtils.js";import{writeColor as u}from"../../../../../engine/webgl/color.js";import{dotDensityMaxFields as c}from"../../../../../engine/webgl/definitions.js";import{Techniques as p}from"../../../../../engine/webgl/shaderGraph/techniques/TechniqueRegistry.js";import{premultiplyColor as f}from"../schemaUtils.js";import{createVisualVariableUniforms as b,getMaxSizeVVSize as m,noVisualVariables as S}from"../VisualVariablesSchema.js";import{createComplexSymbolInstances as V}from"./ComplexSymbolSchema.js";import{hasSizeVVUniform as y,hasRotationVVUniform as v}from"./utils.js";import h from"../../../../../../../symbols/SimpleFillSymbol.js";import z from"../../../../../../../symbols/SimpleMarkerSymbol.js";import d from"../../../../../../../symbols/SimpleLineSymbol.js";async function g(i,a){if(!i)return[];switch(i.type){case"simple-fill":return P(i,a);case"picture-fill":return U(i,a);case"simple-marker":return w(i,a);case"picture-marker":return O(i,a);case"simple-line":return F(i,a,!1);case"text":return L(i,a);case"label":return R(i,a);case"cim":return V(i.data,a);case"web-style":{const e=await i.fetchCIMSymbol();return V(e.data,a)}case"line-3d":return e.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${i.type}" unsupported in MapView. Defaulting to simple-line`),F(new d,a,!1);case"point-3d":return e.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${i.type}" unsupported in MapView. Defaulting to simple-marker`),w(new z,a);case"polygon-3d":return e.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${i.type}" unsupported in MapView. Defaulting to simple-fill`),P(new h,a);case"mesh-3d":case"label-3d":return e.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${i.type}" unsupported in MapView. Ignoring`),[];case"CIMSymbolReference":throw new Error("InternalError: CIMSymbolReference should already be resolved")}}async function M(e,i){const{schemaOptions:a}=i,{store:l}=a,r=new Array(c),t=new Array(c/4);for(let p=0;p<c;p++){const i=p<e.attributes.length?e.attributes[p].color:null;r[p]=[0,0,0,0],u(r[p],i)}for(let u=0;u<c/4;u++)t[u]=[0,0,0,0],t[u][0]=4*u<e.attributes.length?1:0,t[u][1]=4*u+1<e.attributes.length?1:0,t[u][2]=4*u+2<e.attributes.length?1:0,t[u][3]=4*u+3<e.attributes.length?1:0;const o={uniforms:{isActive:t,colors:r,dotValue:e.dotValue,dotScale:e.referenceScale,blending:e.dotBlendingEnabled,dotSize:e.dotSize,seed:e.seed},optionalAttributes:{}},s=l.ensureInstance(p.dotDensity,o).createMeshInfo({effects:null}),n=[],f=new h({color:e.backgroundColor??[0,0,0,0],outline:null}),b=await g(f,i);if(n.push(...b),n.push(s),e.outline){const a=F(e.outline,i,!0);n.push(...a)}return n}async function x(e,l){const{store:r}=l,{radius:t,minDensity:o,maxDensity:s,referenceScale:n,field:u,valueExpression:c,colorStops:f}=e,b=a(f);return[r.ensureInstance(p.heatmap,{uniforms:{radius:i(t),minDensity:o,maxDensity:s,referenceScale:n,isFieldActive:!(!u&&!c),gradient:b,gradientHash:b.join(",")},optionalAttributes:{}}).createMeshInfo({effects:null})]}async function C(e,a){const{store:l}=a,r=e.outline?.width||0,t=b(e),o=l.ensureInstance(p.pieChart,{uniforms:{shader:{outlineWidth:Math.round(i(r)),defaultColor:f(e.defaultColor),outlineColor:f(e.outline?.color),othersColor:f(e.othersCategory?.color),donutRatio:e.holePercentage,sectorThreshold:e.othersCategory?.threshold||0,colors:e.attributes.map((e=>f(e.color))),visualVariableOpacity:t.visualVariableOpacity,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue,hittestUniforms:null},numberOfFields:e.attributes.length},optionalAttributes:{}}).createMeshInfo({size:e.size,outlineWidth:r,effects:null,scaleInfo:null,minPixelBuffer:m(t)});return[...e.backgroundFillSymbol?await P(e.backgroundFillSymbol,{schemaOptions:a,path:"",uniforms:S}):[],o]}function I(e){if("path"===e.style){if(null==e.path)throw new Error("Symbol with a style of type path must define a path");return{type:"sprite-rasterization-param",overrides:[],resource:{type:"path",path:e.path,asFill:!0}}}const i=l.fromSimpleMarker(e);if("outline"in e&&e.outline&&"none"!==e.outline.style){if("solid"!==e.outline.style){if(!i||!i.symbolLayers)throw new Error("Error handling marker! ");return{type:"sprite-rasterization-param",resource:i.symbolLayers[0],overrides:[]}}}return{type:"sprite-rasterization-param",resource:s(i),overrides:[]}}async function w(e,i){const{uniforms:a,schemaOptions:r}=i,{store:o}=r;if("path"===e.style||e.outline&&"solid"!==e.outline.style&&"none"!==e.outline.style){const r=l.fromSimpleMarker(e);if(!r||!r.symbolLayers)throw new Error("Error handling marker! ");if(a.visualVariableRotation&&(r.angleAlignment="Map"),"path"!==e.style){const e=r.symbolLayers[0];if(y(i.uniforms)){const a=m(i.uniforms,0,1);if(a>e.size){const i=a/e.size;e.size=a;const l=e.markerGraphics?.[0].symbol;(l.symbolLayers&&l.symbolLayers[0]).width*=i}}}return V({type:"CIMSymbolReference",symbol:r},i)}const s=o.ensureInstance(p.marker,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableSizeMinMaxValue:a.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:a.visualVariableSizeScaleStops,visualVariableSizeStops:a.visualVariableSizeStops,visualVariableSizeUnitValue:a.visualVariableSizeUnitValue,visualVariableRotation:a.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),n=I(e);let u=e.color?.toArray()??[0,0,0,0];"CIMVectorMarker"===n.resource.type&&(u=[255,255,255,255]);const c="triangle"===e.style?124/116:1,f=e.size,b=f*c,S=null!=a.visualVariableColor&&("cross"===e.style||"x"===e.style);return[s.createMeshInfo({type:"simple",color:u,height:f,width:b,offsetX:e.xoffset,offsetY:e.yoffset,angle:e.angle,alignment:v(a)?t.MAP:t.SCREEN,outlineColor:e.outline?.color?.toArray()??[0,0,0,0],outlineSize:e.outline?.width??1,referenceSize:f,sprite:n,overrideOutlineColor:S,hasSizeVV:y(a),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:m(a)})]}function O(e,i){const{uniforms:a,schemaOptions:r}=i,{store:o}=r,s=o.ensureInstance(p.marker,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableSizeMinMaxValue:a.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:a.visualVariableSizeScaleStops,visualVariableSizeStops:a.visualVariableSizeStops,visualVariableSizeUnitValue:a.visualVariableSizeUnitValue,visualVariableRotation:a.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),n=l.createPictureMarkerRasterizationParam(e);if(!n)return[];return[s.createMeshInfo({type:"picture",color:[255,255,255,255],height:e.height,width:e.width,offsetX:e.xoffset,offsetY:e.yoffset,angle:e.angle,alignment:v(a)?t.MAP:t.SCREEN,outlineColor:null,outlineSize:0,referenceSize:e.height,sprite:n,overrideOutlineColor:!1,hasSizeVV:y(a),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:m(a)})]}function A(e,i,a){const{uniforms:l,schemaOptions:r}=a,{store:s}=r,n=s.ensureInstance(p.marker,{uniforms:{visualVariableColor:l.visualVariableColor,visualVariableOpacity:l.visualVariableOpacity,visualVariableSizeMinMaxValue:l.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:l.visualVariableSizeScaleStops,visualVariableSizeStops:l.visualVariableSizeStops,visualVariableSizeUnitValue:l.visualVariableSizeUnitValue,visualVariableRotation:l.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),u=I(e),c=6,f=c*i.width,b=f,S=e.color?.toArray()??i.color?.toArray()??[0,0,0,0],V="cross"===e.style||"x"===e.style;let h;switch(e.placement){case"begin-end":h=o.Both;break;case"begin":h=o.JustBegin;break;case"end":h=o.JustEnd;break;default:h=o.None}const z={type:"cim-marker-placement-param",placement:{type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:h,offsetAlongLine:0},overrides:[]};return[n.createMeshInfo({type:"simple",color:S,height:b,width:f,offsetX:0,offsetY:0,angle:0,alignment:v(l)?t.MAP:t.SCREEN,outlineColor:S,outlineSize:V?i.width:0,referenceSize:b/c,sprite:u,overrideOutlineColor:V&&null!=l.visualVariableColor,hasSizeVV:y(l),placement:z,transforms:null,effects:null,scaleInfo:null,minPixelBuffer:m(l)})]}function L(e,i){const{uniforms:a,schemaOptions:r}=i,{store:t}=r;return[t.ensureInstance(p.text,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableRotation:a.visualVariableRotation,visualVariableSizeMinMaxValue:a.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:a.visualVariableSizeScaleStops,visualVariableSizeStops:a.visualVariableSizeStops,visualVariableSizeUnitValue:a.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1,clipAngle:!1,referenceSymbol:!1}}).createMeshInfo({boxBackgroundColor:e.backgroundColor?.toArray(),boxBorderLineColor:e.borderLineColor?.toArray(),boxBorderLineSize:e.borderLineSize??0,color:e.color?.toArray()??[0,0,0,0],offsetX:e.xoffset,offsetY:e.yoffset,postAngle:e.angle,fontSize:e.font.size,decoration:e.font.decoration,haloColor:e.haloColor?.toArray()??[0,0,0,0],haloSize:e.haloSize??0,outlineColor:[0,0,0,0],outlineSize:0,lineWidth:e.lineWidth,lineHeightRatio:e.lineHeight,horizontalAlignment:e.horizontalAlignment,verticalAlignment:e.verticalAlignment,useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:e.font.toJSON(),textString:e.text,symbol:l.createCIMTextSymbolfromTextSymbol(e)},overrides:[]},referenceSize:null,effects:null,placement:null,scaleInfo:null,transforms:null,scaleFactor:1,minPixelBuffer:m(a),repeatLabel:null,repeatLabelDistance:null,allowOverrun:null,labelPosition:null})]}function R(e,a){const{schemaOptions:r,uniforms:t}=a,{store:o}=r,s=e.symbol,{allowOverrun:u,repeatLabel:c,repeatLabelDistance:f}=e,b={maxScale:e.maxScale??0,minScale:e.minScale??0},S=o.ensureInstance(p.label,{uniforms:{visualVariableColor:null,visualVariableOpacity:null,visualVariableRotation:t.visualVariableRotation,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!0,clipAngle:!0,referenceSymbol:!0}}),V=e.labelPlacement,[y,v]=n(V);return[S.createMeshInfo({boxBackgroundColor:s.backgroundColor?.toArray(),boxBorderLineColor:s.borderLineColor?.toArray(),boxBorderLineSize:s.borderLineSize??0,color:s.color?.toArray()??[0,0,0,0],offsetX:s.xoffset,offsetY:s.yoffset,postAngle:s.angle,fontSize:s.font.size,decoration:s.font.decoration,outlineColor:[0,0,0,0],outlineSize:0,haloColor:s.haloColor?.toArray()??[0,0,0,0],haloSize:s.haloSize??0,lineWidth:s.lineWidth,lineHeightRatio:s.lineHeight,horizontalAlignment:y,verticalAlignment:v,repeatLabel:c,repeatLabelDistance:i(f),allowOverrun:u,labelPosition:e.labelPosition,scaleInfo:b,minPixelBuffer:m(t),useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:s.font.toJSON(),textString:s.text,symbol:l.createCIMTextSymbolfromTextSymbol(s),primitiveName:"label-override"},useLegacyLabelEvaluationRules:null==e.labelExpressionInfo?.expression,overrides:[{type:"CIMPrimitiveOverride",valueExpressionInfo:{type:"CIMExpressionInfo",expression:e.labelExpressionInfo?.expression??e.labelExpression,returnType:"String"},primitiveName:"label-override",propertyName:"textString",defaultValue:""}]},referenceSize:null,effects:null,placement:null,transforms:null,scaleFactor:1})]}function k(e,i){const a=e.width;return{outlineColor:e.color?.toArray()||[0,0,0,1],width:a,referenceWidth:a,capType:e.cap??"round",joinType:e.join??"round",miterLimit:e.miterLimit,hasSizeVV:i}}function j(e,i){const{uniforms:a,schemaOptions:l}=i,{store:r}=l,t=e.color?.toArray()??[0,0,0,0],o={type:"sprite-rasterization-param",resource:{type:"fill-style",style:e.style},overrides:[]};if("solid"===e.outline?.style){return[r.ensureInstance(p.patternOutlineFill,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableSizeScaleStops:a.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:t,...k(e.outline,!!a.visualVariableSizeOutlineScaleStops),sprite:o,scaleInfo:null,effects:null})]}const s=[],n=r.ensureInstance(p.patternFill,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:e.color?.toArray()??[0,0,0,0],sprite:o,scaleInfo:null,effects:null});return s.push(n),e.outline&&s.push(...F(e.outline,i,!0)),s}function E(e,i){const{uniforms:a,schemaOptions:l}=i,{store:r}=l,t=e.color?.toArray()??[0,0,0,0];if("none"!==e.style&&"solid"===e.outline?.style){return[r.ensureInstance(p.outlineFill,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity,visualVariableSizeScaleStops:a.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:t,...k(e.outline,!!a.visualVariableSizeOutlineScaleStops),scaleInfo:null,effects:null})]}const o=[];if("none"!==e.style){const e=r.ensureInstance(p.fill,{uniforms:{visualVariableColor:a.visualVariableColor,visualVariableOpacity:a.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:t,scaleInfo:null,effects:null});o.push(e)}return e.outline&&o.push(...F(e.outline,i,!0)),o}async function P(e,i){if("cim"===e.type)return V(e.data,i);const{style:a}=e;return a&&"none"!==a&&"solid"!==a?j(e,i):E(e,i)}function U(e,i){const{outline:a}=e,{uniforms:r,schemaOptions:t}=i,{store:o}=t,s=[],n=l.createPictureFillRasterizationParam(e);if(!n)return[];const{width:u,height:c,xoffset:f,yoffset:b,xscale:m,yscale:S}=e,V={color:[255,255,255,255],sprite:n,height:c,aspectRatio:u/c,offsetX:f,offsetY:b,scaleX:m,scaleY:S,angle:0,applyRandomOffset:!1,sampleAlphaOnly:!1,scaleProportionally:!1,effects:null,scaleInfo:null};if("solid"===a?.style){return[o.ensureInstance(p.complexOutlineFill,{uniforms:{visualVariableColor:r.visualVariableColor,visualVariableOpacity:r.visualVariableOpacity,visualVariableSizeScaleStops:r.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({...V,...k(a,!!r.visualVariableSizeOutlineScaleStops)})]}const y=o.ensureInstance(p.complexFill,{uniforms:{visualVariableColor:r.visualVariableColor,visualVariableOpacity:r.visualVariableOpacity},optionalAttributes:{zoomRange:!1}});return s.push(y.createMeshInfo(V)),a&&s.push(...F(a,i,!0)),s}function F(e,i,a){const{color:l,style:t,width:o,cap:s,join:n}=e,{schemaOptions:u}=i,{store:c}=u,f=[],b=a?{...S,visualVariableSizeScaleStops:i.uniforms.visualVariableSizeOutlineScaleStops}:i.uniforms,m={uniforms:{visualVariableColor:b.visualVariableColor,visualVariableOpacity:b.visualVariableOpacity,visualVariableSizeMinMaxValue:b.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:b.visualVariableSizeScaleStops,visualVariableSizeStops:b.visualVariableSizeStops,visualVariableSizeUnitValue:b.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1}},V={color:l?.toArray()??[0,0,0,0],width:o,referenceWidth:o,capType:s,joinType:n,miterLimit:e.miterLimit,hasSizeVV:y(b),effects:null,scaleInfo:null};if(null==t||"solid"===t){const e=c.ensureInstance(p.line,m).createMeshInfo(V);f.push(e)}else if("none"!==t){const e=c.ensureInstance(p.texturedLine,m).createMeshInfo({...V,offsetAlongLine:0,shouldScaleDash:!0,shouldSampleAlphaOnly:!1,isSDF:!0,sprite:{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:r(t,s)},overrides:[]}});f.push(e)}return null!=e.marker&&f.push(...A(e.marker,e,i)),f}export{M as createDotDensityMeshSchemas,x as createHeatmapMeshSchemas,F as createLineInstance,C as createPieChartMeshSchemas,g as createSymbolMeshSchemas};
