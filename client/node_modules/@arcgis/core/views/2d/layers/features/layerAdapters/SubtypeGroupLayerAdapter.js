/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import has from"../../../../../core/has.js";import{clone as e}from"../../../../../core/lang.js";import{floatEqualAbsolute as t}from"../../../../../core/mathUtils.js";import{sqlAnd as r}from"../../../../../core/sql.js";import{isHostedAgolService as s}from"../../../../../layers/support/arcgisLayerUrl.js";import i from"../../../../../layers/support/FeatureFilter.js";import{exceedsMinimumSnapshotCoverage as o}from"./featureServiceUtils.js";import{hasFloorFilter as a,addFloorFilter as l}from"./floorFilterUtils.js";import{getServiceGeometryType as n}from"./geometryUtils.js";import{getLayerDeconflictionEnabled as p}from"./labelingUtils.js";import{createFeatureSourceSchema as u}from"../schema/SourceSchema.js";import{createSubtypeProcessorSchema as y}from"../schema/processor/SubtypeProcessorSchema.js";class m{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){return[{vvEvaluators:{},deconflictionEnabled:this.layer.sublayers.every((e=>p(e)))}]}async createServiceOptions(t){const r=this.layer,{capabilities:i,datesInUnknownTimezone:a,editingInfo:l,globalIdField:p,objectIdField:u,refreshInterval:y,subtypeField:m}=r,c=r.fieldsIndex.toJSON(),d=n(r),h=r.timeInfo?.toJSON(),f=r.spatialReference.toJSON(),b=e(this.layer.parsedUrl),g=u,S=!(null!=l?.lastEditDate)&&y>0,F=!!has("featurelayer-snapshot-enabled")&&"point"===r.geometryType&&i?.query.supportsPagination&&!i?.operations.supportsEditing&&!S,x=F&&o(t,r.fullExtent);return{type:"feature-service",source:b,isSourceHosted:s(b.path),orderByFields:g,outSpatialReference:t.spatialReference.toJSON(),metadata:{timeReferenceUnknownClient:a,subtypeField:m,globalIdField:p,fieldsIndex:c,geometryType:d,objectIdField:u,timeInfo:h,spatialReference:f,subtypes:this.layer.subtypes?.map((e=>e.toJSON())),typeIdField:null,types:null},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:l?.lastEditDate?.getTime(),snapshotInfo:{supportsSnapshotMinThreshold:F,supportsSnapshotMaxThreshold:x,snapshotCountThresholds:{min:has("featurelayer-snapshot-point-min-threshold"),max:has("featurelayer-snapshot-point-max-threshold")}}}}}createSourceSchema(e,t){const{definitionExpression:r,customParameters:s,gdbVersion:i,historicMoment:o,subtypeField:a,timeExtent:l,apiKey:n}=this.layer,p={queryScaleRanges:this.layer.sublayers.items.map((e=>({subtypeCode:e.subtypeCode,minScale:e.minScale,maxScale:e.maxScale}))),definitionExpression:r,customParameters:s,gdbVersion:i,historicMoment:o,subtypeField:a,timeExtent:l};return u(p,e,t,n)}createProcessorSchema(e,t,r){const s={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers,(e=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:e.labelingInfo,labelsVisible:e.labelsVisible,renderer:e.renderer,subtypeCode:e.subtypeCode,orderBy:null})))};return y(e,t,s,r)}hasFilters(e){return a(this.layer,e)||c(this.layer,e)}addFilters(e,t){e=l(this.layer,e,t);const s=this.layer.sublayers.filter((e=>!d(e,t))).map((e=>e.subtypeCode));if(!s.length)return e;e??=new i;const o=`NOT ${this.layer.subtypeField} IN (${s.join(",")})`;return e.where=r(e.where,o),e}get hasRequiredSupport(){return!0}get timeOptions(){return this.layer}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:r,gdbVersion:s,apiKey:i}=t,o=t.historicMoment?.getTime()??void 0,l=JSON.stringify(t.customParameters),n=a(this.layer,e)?e.floors:null,p=this.layer.sublayers.map((({renderer:e,labelsVisible:t,labelingInfo:r,visible:s})=>({renderer:e,labelsVisible:t,labelingInfo:r,visible:s})));return{outFields:this.layer.outFields,gdbVersion:s,definitionExpression:r,historicMoment:o,customParameters:l,apiKey:i,sublayers:p,floors:n}}setGraphicOrigin(e){const t=this.layer.fieldsIndex.get(this.layer.subtypeField),r=e.attributes[t.name],s=this.layer.sublayers.find((e=>e.subtypeCode===r));e.layer=e.sourceLayer=s}}function c(e,t){return e.sublayers.some((e=>!d(e,t)))}function d(e,r){return e.visible&&(0===e.minScale||t(r.scale,e.minScale)||r.scale<e.minScale)&&(0===e.maxScale||t(r.scale,e.maxScale)||r.scale>e.maxScale)}export{m as SubtypeGroupLayerAdapter};
