/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{numericHash as t}from"../../../../../../core/string.js";import{FeatureTechniqueInstance as n}from"./TechniqueInstance.js";import{castInstanceId as e}from"./mesh/instanceIdUtils.js";class s{constructor(){this._instanceById=new Map}destroy(){this._instanceById.clear()}get size(){return this._instanceById.size}entries(){return this._instanceById.entries()}updateStart(){this._instanceByIdNext=new Map}updateEnd(){if(!this._instanceByIdNext)throw new Error("InternalError: Found updateEnd call without corresponding updateStart");for(const t of this._instanceById.keys())this._instanceByIdNext.has(t)||this._instanceById.delete(t);for(const[t,n]of this._instanceByIdNext.entries()){const e=this._instanceById.get(t);e?e.setInput(n.getInput()):this._instanceById.set(t,n)}this._instanceByIdNext=null}values(){return this._instanceById.values()}ensureInstance(s,i){let r;if("object"==typeof i&&"optionalAttributes"in i&&"uniforms"in i){r=`${s.type}${JSON.stringify(i.optionalAttributes)}`;const t=i.uniforms;if("object"==typeof t)for(const n in t)r+=`${n}.${null!=t[n]}`}else r=`${s.type}.${JSON.stringify(i)}`;const a=t(r);if(this._instanceByIdNext){const t=new n(e(a),s,i);return this._instanceByIdNext.set(a,t),t}if(!this._instanceById.has(a)){const t=new n(e(a),s,i);this._instanceById.set(a,t)}return this._instanceById.get(a)}getInstance(t){return this._instanceById.get(t)}}export{s as default};
