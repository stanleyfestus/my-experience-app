/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as l,a as t}from"../../../../../../../chunks/tslib.es6.js";import{location as e,uniform as r,GraphShaderModule as n,define as i,VertexInput as a,UniformGroup as o,FragmentOutput as u,input as p,FragmentInput as s}from"../../GraphShaderModule.js";import{Vec4 as c,texture2D as y,ifElse as d,equal as m,Float as g,clamp as w,Vec3 as b,abs as f,max as k,min as F,step as C,cond as v,sqrt as h,lessThanEqual as x,greaterThan as j,dot as T,lessThan as M,Vec2 as O,Sampler2D as G}from"../../graph/glsl.js";import{uvToClip as P,oneMinus as S,minusOne as _,minusScalar as q}from"./utils.js";class z extends a{}l([e(0,O)],z.prototype,"position",void 0);class A extends s{}class B extends o{}l([r(G)],B.prototype,"layerTexture",void 0),l([r(G)],B.prototype,"backbufferTexture",void 0),l([r(g)],B.prototype,"opacity",void 0),l([r(g)],B.prototype,"inFadeOpacity",void 0);class D extends n{vertex(l){return{uv:l.position,glPosition:new c(P(l.position),0,1)}}fragment(l){const t=new u,e=y(this.config.layerTexture,l.uv),r=y(this.config.backbufferTexture,l.uv),n=d(m(e.a,new g(0)),e.rgb,e.rgb.divide(e.a)),i=d(m(r.a,new g(0)),r.rgb,r.rgb.divide(r.a)),a=this.config.opacity.multiply(e.a),o=r.a;switch(this.blendMode){case"destination-over":t.glFragColor=new c(n.multiply(a).multiply(S(o)).add(i.multiply(o)),a.add(o).subtract(a.multiply(o)));break;case"source-in":{const l=new c(n.multiply(a).multiply(o),a.multiply(o)),e=new c(i.multiply(o),o).multiply(S(this.config.opacity)).multiply(this.config.inFadeOpacity);t.glFragColor=l.add(e)}break;case"destination-in":{const l=new c(i.multiply(o).multiply(a),o.multiply(a)),e=new c(i.multiply(o),o).multiply(new c(S(this.config.opacity).multiply(this.config.inFadeOpacity)));t.glFragColor=l.add(e)}break;case"source-out":t.glFragColor=new c(n.multiply(a).multiply(S(o)),a.multiply(S(o)));break;case"destination-out":t.glFragColor=new c(i.multiply(o).multiply(S(a)),o.multiply(S(a)));break;case"source-atop":t.glFragColor=new c(n.multiply(a).multiply(o).add(i.multiply(o.multiply(S(a)))),o);break;case"destination-atop":t.glFragColor=new c(n.multiply(a.multiply(S(o))).add(i.multiply(o).multiply(a)),a);break;case"xor":t.glFragColor=new c(n.multiply(a.multiply(S(o))).add(i.multiply(o.multiply(S(a)))),a.multiply(S(o)).add(o.multiply(S(a))));break;case"multiply":t.glFragColor=new c(n.multiply(a).multiply(i.multiply(o)).add(n.multiply(a).multiply(S(o))).add(i.multiply(o).multiply(S(a))),a.add(o.multiply(S(a))));break;case"screen":t.glFragColor=new c(n.add(i).subtract(n.multiply(i)).multiply(a.multiply(o)).add(n.multiply(a).multiply(S(o))).add(i.multiply(o).multiply(S(a))),a.add(o.multiply(S(a))));break;case"overlay":{const l=new b(H(i.r,n.r),H(i.g,n.g),H(i.b,n.b));t.glFragColor=E(l,n,i,a,o)}break;case"darken":{const l=F(n,i);t.glFragColor=E(l,n,i,a,o)}break;case"lighter":t.glFragColor=new c(n.multiply(a).add(i.multiply(o)),a.add(o));break;case"lighten":{const l=k(n,i);t.glFragColor=E(l,n,i,a,o)}break;case"color-dodge":{const l=w(new b(I(i.r,n.r),I(i.g,n.g),I(i.b,n.b)),new b(0),new b(1));t.glFragColor=E(l,n,i,a,o)}break;case"color-burn":{const l=new b(J(i.r,n.r),J(i.g,n.g),J(i.b,n.b));t.glFragColor=E(l,n,i,a,o)}break;case"hard-light":{const l=new b(K(i.r,n.r),K(i.g,n.g),K(i.b,n.b));t.glFragColor=E(l,n,i,a,o)}break;case"soft-light":{const l=new b(L(i.r,n.r),L(i.g,n.g),L(i.b,n.b));t.glFragColor=E(l,n,i,a,o)}break;case"difference":{const l=f(i.subtract(n));t.glFragColor=E(l,n,i,a,o)}break;case"exclusion":{const l=n.add(i).subtract(new g(2).multiply(n).multiply(i));t.glFragColor=E(l,n,i,a,o)}break;case"invert":t.glFragColor=new c(new b(1).subtract(i).multiply(a).multiply(o).add(i.multiply(o).multiply(S(a))),o);break;case"vivid-light":{const l=new b(w(N(i.r,n.r),new g(0),new g(1)),w(N(i.g,n.g),new g(0),new g(1)),w(N(i.b,n.b),new g(0),new g(1)));t.glFragColor=E(l,n,i,a,o)}break;case"hue":{const l=Y(n,i,i);t.glFragColor=E(l,n,i,a,o)}break;case"saturation":{const l=Y(i,n,i);t.glFragColor=E(l,n,i,a,o)}break;case"color":{const l=X(n,i);t.glFragColor=E(l,n,i,a,o)}break;case"luminosity":{const l=X(i,n);t.glFragColor=E(l,n,i,a,o)}break;case"plus":t.glFragColor=w(new c(e.r.add(i.r),e.g.add(i.g),e.b.add(i.b),a.add(o)),new c(0),new c(1));break;case"minus":t.glFragColor=new c(w(new b(i.r.subtract(e.r),i.g.subtract(e.g),i.b.subtract(e.b)),new b(0),new b(1)),o.multiply(a));break;case"average":{const l=i.add(n).divide(2);t.glFragColor=E(l,n,i,a,o)}break;case"reflect":{const l=w(new b(Z(i.r,n.r),Z(i.g,n.g),Z(i.b,n.b)),new b(0),new b(1));t.glFragColor=E(l,n,i,a,o)}break;default:t.glFragColor=e.multiply(this.config.opacity)}return t}}function E(l,t,e,r,n){return new c(l.multiply(r).multiply(n).add(t.multiply(r).multiply(S(n))).add(e.multiply(n).multiply(S(r))),r.add(n.multiply(S(r))))}function H(l,t){return new g(1).subtract(C(new g(.5),t)).multiply(S(new g(2).multiply(S(t).multiply(S(l))))).add(C(new g(.5),t).multiply(new g(2).multiply(t).multiply(l)))}function I(l,t){return d(m(l,new g(0)),new g(0),d(m(t,new g(1)),new g(1),F(new g(1),l.divide(new g(1).subtract(t)))))}function J(l,t){return d(m(l,new g(1)),new g(1),d(m(t,new g(0)),new g(0),S(F(new g(1),S(l).divide(t)))))}function K(l,t){return new g(1).subtract(C(new g(.5),t)).multiply(new g(2).multiply(t).multiply(l)).add(C(new g(.5),t).multiply(S(new g(2).multiply(S(t).multiply(S(l))))))}function L(l,t){return v([x(t,new g(.5)),()=>{const e=new g(2).multiply(t),r=S(e),n=S(l);return l.subtract(r.multiply(l).multiply(n))}],[x(l,new g(.25)),()=>{const e=new g(2).multiply(t),r=_(e).multiply(l),n=new g(16).multiply(l).subtract(new g(12)).multiply(l).add(new g(3));return l.add(r.multiply(n))}],[!0,()=>{const e=new g(2).multiply(t),r=_(e),n=h(l).subtract(l);return l.add(r.multiply(n))}])}function N(l,t){const e=S(C(new g(.5),t)).multiply(J(l,new g(2).multiply(t))),r=C(new g(.5),t).multiply(I(l,new g(2).multiply(q(t,.5))));return e.add(r)}function Q(l){return F(F(l.r,l.g),l.b)}function R(l){return k(k(l.r,l.g),l.b)}function U(l){return T(l,new b(.3,.59,.11))}function V(l){return R(l).subtract(Q(l))}function W(l){const t=U(l),e=Q(l),r=R(l);return v([M(e,new g(0)),()=>{const r=l.subtract(t).multiply(t),n=t.subtract(e);return t.add(r.divide(n))}],[j(r,new g(1)),()=>{const e=l.subtract(t),n=S(t),i=e.multiply(n),a=r.subtract(t);return t.add(i.divide(a))}],[!0,l])}function X(l,t){const e=U(l),r=U(t).subtract(e);return W(l.add(new b(r)))}function Y(l,t,e){const r=Q(l),n=V(l),i=V(t);return X(d(j(n,new g(0)),(()=>l.subtract(r).multiply(i).divide(n)),new b(0)),e)}function Z(l,t){return d(m(t,new g(1)),t,(()=>{const e=S(t),r=l.multiply(l).divide(e);return F(r,new g(1))}))}l([i],D.prototype,"blendMode",void 0),l([r(B)],D.prototype,"config",void 0),l([t(0,p(z))],D.prototype,"vertex",null),l([t(0,p(A))],D.prototype,"fragment",null);export{D as BlendShader};
