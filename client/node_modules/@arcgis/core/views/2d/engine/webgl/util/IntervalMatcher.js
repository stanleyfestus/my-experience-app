/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{FeatureMatcher as t}from"./Matcher.js";class e extends t{constructor(t,e){super(),this._intervals=[],this._isMaxInclusive=e,this._field=t}static async fromIntervalSchema(t,s){const i=await t.storage.createComputedField(s),r=new e(i,s.isMaxInclusive);await Promise.all(s.intervals.map((async e=>{const s=await t.createMeshWriters(e.meshes);r.add(e,s)})));const a=await t.createMeshWriters(s.defaultSymbol);r.setDefault(a);const n=await t.createMeshWriters(s.backgroundFill);return r.setBackgroundFill(n),r}add(t,e){this._intervals.push({interval:t,result:e}),this._intervals.sort(((t,e)=>t.interval.min-e.interval.min))}size(){return super.size()+this._intervals.length}doMatch(t,e){const s=this._field?.read(t,e);if(null==s||isNaN(s)||s===1/0||s===-1/0)return null;for(let i=0;i<this._intervals.length;i++){const{interval:t,result:e}=this._intervals[i],r=s>=t.min,a=this._isMaxInclusive?s<=t.max:s<t.max;if(r&&a)return e}return null}}export{e as IntervalMatcher};
