/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{createTask as t}from"../../../core/asyncUtils.js";import{handlesGroup as e,makeHandle as o}from"../../../core/handleUtils.js";import{floatEqualUlp as n}from"../../../core/mathUtils.js";import{createAngle as r,createScalar as i,valueInUnit as a}from"../../../core/quantityUtils.js";import{watch as l}from"../../../core/reactiveUtils.js";import{verticalLengthUnitFromSpatialReference as s}from"../../../core/unitUtils.js";import{v as u,h as c,H as p}from"../../../chunks/vec32.js";import{clone as f,ONES as m,create as d,UNIT_Z as y}from"../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{isLoaded as g,load as v}from"../../../geometry/coordinateFormatter.js";import x from"../../../geometry/Point.js";import j from"../../../geometry/support/MeshTransform.js";import{isRelativeVertexSpace as b}from"../../../geometry/support/meshVertexSpaceUtils.js";import{isWebMercator as S}from"../../../geometry/support/spatialReferenceUtils.js";import{lngLatToXY as h}from"../../../geometry/support/webMercatorUtils.js";import{tooltipKeys as U}from"../keybindings.js";import M from"../Tooltip.js";import{parseLatitudeLongitude as w,parseXY as z}from"./fields/parsingAndFormattingUtils.js";import{getDegreesArithmetic as A,getDegreesGeographic as R}from"../../support/angularMeasurementUtils.js";function k(t){const e=new M(t());return e.addHandles(l((()=>t()),(({view:t,options:o,info:n})=>{e.view=t,void 0!==o&&(e.options=o),void 0!==n&&(e.info=n)}))),e}function P(t,e){const o=b(e.vertexSpace),{scale:n,orientation:a}=t,{transform:l}=e,s=q(l);o&&null!=s?(a.actual=r(s,"degrees","arithmetic"),a.visible=!0):(a.actual=null,a.visible=!1),o?(n.actual=i(C(l)),n.visible=!0):(n.actual=null,n.visible=!1)}function V(t,e,o){if(!e||!b(e.vertexSpace))return;const n=e.transform??=new j;D(t,n,o),F(t,n,o)}function D(t,e,o){const n=A(t.orientation.actual),r=B(e.rotationAxis);if(null==n||null==r)return;const i=e.rotationAngle,a=n*r,l=(n-i)*r;i!==a&&(o?.onRotateStart(0),e.rotationAngle=a,o?.onRotate(l),o?.onRotateStop(l))}function F(t,e,o){const n=t.scale.actual?.value,r=C(e);if(null==n||n===r)return;const{scale:i}=e;let a;if(0===r)a=f(m);else{const t=n/r;a=c(d(),i,t)}o?.onScaleStart(i[0],i[1],i[2]),e.scale=a,o?.onScale(a[0],a[1],a[2]),o?.onScaleStop(a[0],a[1],a[2])}function E(t,e,o){if(!e||!b(e.vertexSpace))return;const{origin:n,spatialReference:r}=e,{x:i,y:a,z:l}=I(t,r),{dx:s,dy:u,dz:c}=H(t,n);0===s&&0===u&&0===c||(o.onMoveStart(),e.centerAt(new x({x:i??n.x,y:a??n.y,z:l??n.z,spatialReference:r})),o.onMove(s,u,c),o.onMoveStop())}function H(t,e){const{x:o,y:r,z:i}=e,{x:a,y:l,z:s}=I(t,e.spatialReference);return{dx:null==a||n(a,o)?0:a-o,dy:null==l||n(l,r)?0:l-r,dz:null==s||null==i||n(s,i)?0:s-i}}function I(t,e){let o,n;t.geographic?(o=R(t.longitude.actual),n=R(t.latitude.actual),S(e)&&(null!=o&&null!=n?[o,n]=h(o,n,T):null!=o?o=h(o,0,T)[0]:null!=n&&(n=h(0,n,T)[1]))):(o=t.x.actual?.value,n=t.y.actual?.value);const r=t.elevation.actual,i=s(e);return{x:o,y:n,z:null!=i&&null!=r?a(r,i):void 0}}const T=[0,0];function q(t){if(!t)return 0;const e=B(t.rotationAxis);return null!=e?e*t.rotationAngle:null}function B(t){return p(t,y)?1:p(t,O)?-1:null}const O=u(d(),y);function C(t){return t?Math.max(...t.scale):1}function G(t,e){return!("key-down"!==t.type||t.key!==U.enterInputMode||!e||!J(e.info))&&(e.enterInputMode(),t.preventDefault(),t.stopPropagation(),!0)}function J(t){const e=t?.sketchOptions;if(!e)return!1;const{inputEnabled:o,visibleElements:n}=e.tooltips;return o&&!0===t.editableFields.some((({name:t})=>"x"===t||"y"===t?n.coordinates:n[t]))}function K(n,r){let i=null;return e([n.on("paste",(async e=>{i?.abort(),i=t((async()=>{g()||await v(),L(e,n.info,r)}))})),t((()=>v())),o((()=>i?.abort()))])}function L(t,e,o){if(!e||!("geographic"in e))return;const n=t.clipboardData?.getData("text");if(!n)return;const r=e=>{t.stopPropagation(),t.preventDefault(),o?.onBeforePaste(),e(),o?.onAfterPaste()};if(e.geographic){const t=w(n);t&&r((()=>{e.longitude.applyValue(t.longitude),e.latitude.applyValue(t.latitude)}))}else{const t=z(n);t&&r((()=>{e.x.applyValue(t.x),e.y.applyValue(t.y)}))}}export{K as connectPasteEvent,G as enterInputModeIfAvailable,H as getXYZDeltasFromTooltipInfo,k as makeTooltip,L as pasteLocation,E as updateMeshOriginFromTooltipInfo,V as updateMeshTransformFromTooltipInfo,P as updateTooltipInfoFromMeshTransform};
