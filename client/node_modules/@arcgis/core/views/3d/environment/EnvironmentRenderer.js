/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import"../../../core/has.js";import{destroyMaybe as e}from"../../../core/maybe.js";import{watch as i,sync as s}from"../../../core/reactiveUtils.js";import{signal as r}from"../../../core/signal.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import{l as a}from"../../../chunks/vec32.js";import{getReferenceEllipsoid as u}from"../../../geometry/ellipsoidUtils.js";import{CubeMapState as c}from"./Clouds.js";import{cloudPresets as p}from"./CloudsPresets.js";import{CloudsRenderer as l}from"./CloudsRenderer.js";import{Precipitation as h}from"./Precipitation.js";import{heightLimit as d}from"./weather.js";import{SyncRenderPlugin as _}from"../webgl-engine/effects/RenderPlugin.js";let m=class extends _{constructor(t){super(t),this.produces=new Map([]),this._clouds=r(null),this._incarnation=0,this._precipitation=null}initialize(){this.view._stage.addRenderPlugin(this)}destroy(){this.removeHandles(),this.uninitializeRenderContext(),this.view?._stage?.removeRenderPlugin(this),this._set("view",null)}get updating(){return!!this._clouds.value?.running}get weatherVisible(){return a(this.view.state.camera.eye)-u(this.view.spatialReference).radius<=d}get usedMemory(){return this._clouds.value?.usedMemory??0}_fadeOutPrecipitation(){this._precipitation&&(this._precipitationOutgoing?.destroy(),this._precipitationOutgoing=this._precipitation,this._precipitationOutgoing.fadeOut((()=>{this._precipitationOutgoing=e(this._precipitationOutgoing)})),this._precipitation=null,++this._incarnation)}get weather(){return this.view?.environmentManager?.weatherEnabled?this.view.environment.weather:null}initializeRenderContext(t){this._context=t;const e=this.view,r=()=>this._requestRender();this.addHandles([i((()=>this._precipitation),r,s),i((()=>this._clouds.value?.state),r,s),i((()=>e.state.mode),r,s),i((()=>this._updateClouds()),r,s),i((()=>this._updatePrecipitation()),r,s),i((()=>this.weather),(t=>this._initWeather(t)))])}uninitializeRenderContext(){this._context=null,this._clouds.value=e(this._clouds.value),this._precipitation=e(this._precipitation),this._precipitationOutgoing=e(this._precipitationOutgoing)}prepareRender(t){const{bind:e,time:i}=t;if("local"!==this.view.viewingMode&&e.clouds.data){e.clouds.fade(e.camera,i,this.view.qualitySettings.fadeDuration);const t=this._clouds.value;t&&t.state===c.Idle&&0===t.coverage&&!t.running&&t.destroyCubeMap()}}acquireTechniques(){return[]}render(){}_requestRender(){this._context?.requestRender()}_initWeather(t){const i=this._context;if(!t||!i)return void(this._clouds.value=e(this._clouds.value));if(this._clouds.value)return;const s=this.view;this._clouds.value=new l({context:i,view:s,requestRender:()=>this._requestRender()})}_updateClouds(){const t=this.view.environment.weather;return null==t||null==this._clouds.value||this._clouds.value.applyPreset(p[t.type],v(t)),++this._incarnation}_updatePrecipitation(){const t=this.view.environment.weather;if(t.type===this._precipitation?.type)return this._incarnation;this._fadeOutPrecipitation();const e="rainy"===t.type||"snowy"===t.type,i=this._context;return e&&i&&(this._precipitation=new h({view:this.view,techniques:i.techniques,type:t.type}),++this._incarnation),this._incarnation}get test(){}};function v(t){switch(t.type){case"rainy":case"snowy":case"cloudy":case"sunny":return t.cloudCover;case"foggy":return t.fogStrength}}t([n({constructOnly:!0})],m.prototype,"view",void 0),t([n({type:Boolean,readOnly:!0})],m.prototype,"updating",null),t([n({readOnly:!0})],m.prototype,"weatherVisible",null),t([n()],m.prototype,"_context",void 0),m=t([o("esri.views.3d.environment.EnvironmentRenderer")],m);export{m as EnvironmentRenderer};
