/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import{releaseMaybe as r,disposeMaybe as s}from"../../../core/maybe.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/has.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{equals as n,copy as c}from"../../../core/libs/gl-matrix-2/math/vec2.js";import{N as a}from"../../../chunks/NoiseTextureAtlas.glsl.js";import{NoiseTextureAtlasTechniqueConfiguration as h,NoiseTextureRenderMode as u}from"./NoiseTextureAtlasConfiguration.js";import{atlasSize as m}from"./NoiseTextureAtlasDimensions.js";import{NoiseTextureAtlasTechnique as p}from"./NoiseTextureAtlasTechnique.js";import{FramebufferObject as d}from"../../webgl/FramebufferObject.js";import{TextureDescriptor as f}from"../../webgl/TextureDescriptor.js";let _=class extends t{constructor(e){super(e),this._needsRender=!0,this._passParameters=new a,this._configuration=new h,this._fbo=new d(e.context.renderContext.rctx,new f(m)),this._configuration.mode=u.Full,e.context.techniques.precompile(p,this._configuration),this._configuration.mode=u.WeatherMap,e.context.techniques.precompile(p,this._configuration)}get textureAtlas(){if(this._texture&&!this._needsRender)return this._texture;this._configuration.mode=this._texture?u.WeatherMap:u.Full;const e=this.context.techniques.acquire(p,this._configuration);return e.compiled&&(this._texture=this._render(e)),e.release(),this._texture}updateWeatherMap(e){n(this._passParameters.weatherTile,e)||(c(this._passParameters.weatherTile,e),this._needsRender=!0)}destroy(){this._weatherMapTechniqueCached=r(this._weatherMapTechniqueCached),this._fbo=s(this._fbo)}_render(e){if(!this._fbo)return null;const t=this.context.renderContext.rctx,r=t.getViewport();return t.setViewport(0,0,m,m),t.bindFramebuffer(this._fbo),t.bindTechnique(e,this.context.renderContext.bind,this._passParameters),t.screen.draw(),t.setViewport(r.x,r.y,r.width,r.height),this._needsRender=!1,this._fbo.colorTexture}};e([o({constructOnly:!0})],_.prototype,"context",void 0),_=e([i("esri.views.3d.environment.NoiseTextureAtlas")],_);export{_ as NoiseTextureAtlas};
