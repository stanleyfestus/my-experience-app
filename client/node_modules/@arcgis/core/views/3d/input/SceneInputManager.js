/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import"../../../core/has.js";import{destroyMaybe as o}from"../../../core/maybe.js";import{watch as r,initial as i}from"../../../core/reactiveUtils.js";import{property as n}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/Logger.js";import"../../../core/RandomLCG.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import{DoubleClickZoom as s}from"./handlers/DoubleClickZoom.js";import{DragRotate as p}from"./handlers/DragRotate.js";import{DragZoom as m}from"./handlers/DragZoom.js";import{GamepadNavigation as d}from"./handlers/GamepadNavigation.js";import{KeyboardNavigation as c}from"./handlers/KeyboardNavigation.js";import{MouseWheelZoom as l}from"./handlers/MouseWheelZoom.js";import{PinchAndPanNavigation as g}from"./handlers/PinchAndPanNavigation.js";import{PointerDownCancelAnimation as u}from"./handlers/PointerDownCancelAnimation.js";import{SingleKeyResetHeading as h}from"./handlers/SingleKeyResetHeading.js";import{SingleKeyResetTilt as w}from"./handlers/SingleKeyResetTilt.js";import{TwoFingerTilt as y}from"./handlers/TwoFingerTilt.js";import{BrowserEventSource as f}from"../../input/BrowserEventSource.js";import{InputManager as _,ViewEventPriorities as v}from"../../input/InputManager.js";import{PreventContextMenu as D}from"../../input/handlers/PreventContextMenu.js";import{Drag as j}from"../../input/recognizers/Drag.js";import{ImmediateDoubleClick as A}from"../../input/recognizers/ImmediateDoubleClick.js";import{PointerClickHoldAndDrag as M}from"../../input/recognizers/PointerClickHoldAndDrag.js";import{SingleAndDoubleClick as T}from"../../input/recognizers/SingleAndDoubleClick.js";import{VerticalTwoFingerDrag as P}from"../../input/recognizers/VerticalTwoFingerDrag.js";import{PivotPoint as b}from"../state/controllers/RotateController.js";let R=class extends e{destroy(){this.disconnect()}get primaryDragAction(){return this._get("primaryDragAction")}set primaryDragAction(t){"pan"!==t&&"rotate"!==t||t===this._get("primaryDragAction")||(this._set("primaryDragAction",t),this._updateMode())}get mode(){return this._get("mode")}set mode(t){"default"!==t&&"pro"!==t||t===this._get("mode")||(this._set("mode",t),this._updateMode())}get updating(){return!!this._inputManager?.updating}get latestPointerType(){return this._inputManager?.latestPointerType}get latestPointerLocation(){return this._inputManager?.latestPointerLocation}get multiTouchActive(){return this._inputManager?.multiTouchActive??!1}disconnect(){this.view.viewEvents.disconnect(),this._inputManager=o(this._inputManager)}connect(){const t=this.view;this._source=new f(this.view.surface,t.input);const e=[new A,new M,new T,new j(this.view.navigation),new P],o=new _({eventSource:this._source,recognizers:e});this._inputManager=o,o.installHandlers("prevent-context-menu",[new D],v.INTERNAL);const n={fov:"Shift",lookAround:"b",pan:{left:"ArrowLeft",right:"ArrowRight",forward:"ArrowUp",backward:"ArrowDown",up:"u",down:"j",headingLeft:"a",headingRight:"d",tiltUp:"w",tiltDown:"s",zoomIn:"+",zoomOut:"-"},resetHeading:"n",resetTilt:"p"};this._modeDragPan=new g(t,"primary"),this._modeDragRotate=new p(t,"secondary",b.CENTER),this._modeDragZoom=new m(t,"tertiary",n.fov),this._modeKeyboardNavigation=new c(t,n.pan),o.installHandlers("navigation",[new u(t),new s(t),new d(t),new l(t,n.fov),new w(t,n.resetTilt),new h(t,n.resetHeading),new p(t,"primary",b.EYE,[n.lookAround]),new p(t,"secondary",b.CENTER,[n.lookAround]),new g(t,"tertiary",[n.lookAround]),this._modeDragRotate,this._modeDragZoom,this._modeDragPan,this._modeKeyboardNavigation,new y(t)],v.INTERNAL),this.view.viewEvents.connect(o),this._updateMode(),this.addHandles(r((()=>this.view.navigation?.browserTouchPanEnabled),(t=>{this._source.browserTouchPanningEnabled=!t}),i))}isModifierKeyDown(t){return this._inputManager?.isModifierKeyDown(t)??!1}_updateMode(){const t=this.mode,e=this.primaryDragAction,o=z.get(t)?.get(e);o&&(this._modeDragPan&&(this._modeDragPan.pointerAction=o.pan),this._modeDragRotate&&(this._modeDragRotate.pointerAction=o.rotate),this._modeDragZoom&&(this._modeDragZoom.pointerAction=o.zoom))}get test(){}};t([n()],R.prototype,"view",void 0),t([n({value:"pan"})],R.prototype,"primaryDragAction",null),t([n({value:"default"})],R.prototype,"mode",null),t([n({readOnly:!0})],R.prototype,"updating",null),t([n()],R.prototype,"latestPointerType",null),t([n()],R.prototype,"latestPointerLocation",null),t([n()],R.prototype,"multiTouchActive",null),t([n()],R.prototype,"_inputManager",void 0),R=t([a("esri.views.3d.input.SceneInputManager")],R);const z=new Map,E=new Map,N=new Map;E.set("pan",{pan:"primary",rotate:"secondary",zoom:"tertiary"}),E.set("rotate",{pan:"secondary",rotate:"primary",zoom:"tertiary"}),N.set("pan",{pan:"primary",rotate:"tertiary",zoom:"secondary"}),N.set("rotate",{pan:"tertiary",rotate:"primary",zoom:"secondary"}),z.set("default",E),z.set("pro",N);const k=R;export{k as default};
