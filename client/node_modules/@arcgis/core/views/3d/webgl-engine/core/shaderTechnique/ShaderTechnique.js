/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{disposeMaybe as i}from"../../../../../core/maybe.js";import{Default3D as e}from"../../lib/DefaultVertexAttributeLocations.js";import{Program as t}from"../../lib/Program.js";import{PrimitiveType as r}from"../../../../webgl/enums.js";import{makePipelineState as o,blendWithPremultipliedAlpha as s,defaultColorWrite as a}from"../../../../webgl/renderState.js";class n{constructor(o,s,a,n,l=e){this.release=n,this.locations=l,this.primitiveType=r.TRIANGLES,this.key=s.key,this._program=new t(o.rctx,a.get().build(s),l),this._pipeline=this.initializePipeline(s),this.reload=async e=>{if(e&&await a.reload(),!this.key.equals(s.key))throw new Error("Configuration was changed after construction, cannot reload shader");i(this._program),this._program=new t(o.rctx,a.get().build(s),l),this._pipeline=this.initializePipeline(s)}}destroy(){this._program=i(this._program),this._pipeline=null}get program(){return this._program}get compiled(){return this.program.compiled}ensureAttributeLocations(i){this.program.assertCompatibleVertexAttributeLocations(i)}getPipeline(i,e){return this._pipeline}initializePipeline(i){return o({blending:s,colorWrite:a})}}export{n as ShaderTechnique};
