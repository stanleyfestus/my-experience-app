/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import has from"../../../../../core/has.js";import{disposeMaybe as t,releaseMaybe as i}from"../../../../../core/maybe.js";import{watch as r,initial as s}from"../../../../../core/reactiveUtils.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/Logger.js";import"../../../../../core/RandomLCG.js";import{subclass as l}from"../../../../../core/accessorSupport/decorators/subclass.js";import{set as n}from"../../../../../core/libs/gl-matrix-2/math/vec2.js";import{ZEROS as h}from"../../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{InternalRenderCategory as a}from"../../../webgl.js";import{ColorFormat as c}from"../../../webgl/formats.js";import u from"../../../webgl/RenderNode.js";import{HighlightApplyTechnique as g}from"./HighlightApplyTechnique.js";import{HighlightDownsampleTechnique as p}from"./HighlightDownsampleTechnique.js";import{HighlightPassParameters as m}from"./HighlightPassParameters.js";import{HighlightToSingleTechnique as d}from"./HighlightToSingleTechnique.js";import{SingleHighlightApplyTechnique as f}from"./SingleHighlightApplyTechnique.js";import{SingleHighlightBlurTechnique as T}from"./SingleHighlightBlurTechnique.js";import{RenderRequestType as b}from"../../lib/basicInterfaces.js";import{Default3D as x}from"../../lib/DefaultVertexAttributeLocations.js";import{NoVertex as w}from"../../lib/DefaultVertexBufferLayouts.js";import{VertexArrayObject as _}from"../../lib/VertexArrayObject.js";import{H as v,g as C}from"../../../../../chunks/HighlightDownsample.glsl.js";import{S as q}from"../../../../../chunks/SingleHighlightBlur.glsl.js";import{maximumHighlights as H}from"../../../../support/HighlightDefaults.js";import{BufferObject as j}from"../../../../webgl/BufferObject.js";import{PixelFormat as y,TextureSamplingMode as D,FramebufferBit as P,Usage as R,TextureType as S,PrimitiveType as A,DataType as O}from"../../../../webgl/enums.js";import{Texture as M}from"../../../../webgl/Texture.js";import{TextureDescriptor as I}from"../../../../webgl/TextureDescriptor.js";let G=class extends u{constructor(e){super(e),this.produces=a.HIGHLIGHTS,this.consumes={required:[a.HIGHLIGHTS,"highlights"]},this.useMultipleHighlights=!!has("enable-feature:multiple-highlights"),this._optionsTexture=null,this._downsampleDrawParameters=new v,this._passParameters=new m,this._singleHighlightBlurDrawParameters=new q,this._grid=new L,e.techniques.precompile(p),this.useMultipleHighlights?e.techniques.precompile(g):(e.techniques.precompile(d),e.techniques.precompile(T),e.techniques.precompile(f))}initialize(){this.addHandles([r((()=>F(this.view.highlights)),(()=>{this._optionsTexture=t(this._optionsTexture),this.requestRender(b.UPDATE)}),s)])}destroy(){this._passParameters&&(this._passParameters.highlightOptionsTexture=null),this._grid.coverage=i(this._grid.coverage),this._grid.vao=t(this._grid.vao),this._optionsTexture=i(this._optionsTexture)}_updateOptionsTexture(e){const t=this.renderingContext;let i=this._optionsTexture;if(null==i){const e=new I(16,2);e.internalFormat=y.RGBA,e.samplingMode=D.NEAREST,i=new M(t,e,null),this._optionsTexture=i}i.setData(e),this._passParameters.highlightOptionsTexture=i}render(e){const t=e.find((({name:e})=>e===a.HIGHLIGHTS)),{techniques:i,bindParameters:r,_passParameters:s,renderingContext:o}=this;if(!r.decorations)return t;const l=i.acquire(p);if(!l.compiled)return l.release(),this.requestRender(b.UPDATE),t;const n=e.find((({name:e})=>"highlights"===e)).getTexture(),h=()=>{const{highlights:e}=this.view;this._optionsTexture||this._updateOptionsTexture(E(e)),s.highlightOptionsTexture=this._optionsTexture,this._gridUpdateResources(n);const t=this._gridComputeCoverage(l,n,r);l.release();const{horizontalCellCount:i,verticalCellCount:o}=t;return s.horizontalCellCount=i,s.verticalCellCount=o,s.coverageTexture=t.coverage?.getTexture(),t},c=e=>{const t=e.verticalCellCount*e.horizontalCellCount;o.bindVAO(e.vao),o.drawElementsInstanced(A.TRIANGLES,6,O.UNSIGNED_BYTE,0,t)},{camera:u}=r,g=()=>{o.bindFramebuffer(t.fbo),o.setViewport4fv(u.fullViewport)};return this.useMultipleHighlights?this._renderMultiple(n,h,c,g):this._renderSingle(n,h,c,g),s.highlightTexture=null,s.coverageTexture=null,t}_renderMultiple(e,t,i,r){const{techniques:s,bindParameters:o,_passParameters:l,renderingContext:n}=this,h=s.acquire(g);if(!h.compiled)return h.release(),void this.requestRender(b.UPDATE);const a=t();l.highlightTexture=e,l.pixelRatio=o.camera.pixelRatio,l.maxHighlightLevel=k(this.view.highlights)-1,n.bindTechnique(h,o,l),r(),i(a),h.release()}_renderSingle(e,t,i,r){const{fboCache:s,techniques:o,bindParameters:l,_passParameters:h,renderingContext:a}=this,u=o.acquire(d),g=o.acquire(T),p=o.acquire(f);if(!p.compiled||!g.compiled||!u.compiled)return p.release(),g.release(),u.release(),void this.requestRender(b.UPDATE);const m=t(),{width:x,height:w}=e.descriptor;h.maxHighlightLevel=k(this.view.highlights)-1,h.highlightTexture=e;const{camera:_}=l,{fullWidth:v,fullHeight:C,pixelRatio:q}=_,H=Math.ceil(v/q),j=Math.ceil(C/q),{_singleHighlightBlurDrawParameters:y}=this;for(let d=0;d<=h.maxHighlightLevel;++d){h.highlightLevel=d,a.setClearColor(0,0,0,0);const e=s.acquire(x,w,"single highlight",c.RG);a.bindFramebuffer(e.fbo),a.setViewport(0,0,x,w),a.clear(P.COLOR),a.bindTechnique(u,l,h),i(m),y.blurInput=e.getTexture(),n(y.blurSize,1/H,0);const t=s.acquire(H,j,"single highlight blur h",c.RG);a.unbindTexture(t.fbo?.colorTexture),a.bindFramebuffer(t.fbo),a.setViewport(0,0,H,j),a.clear(P.COLOR),y.blurInput=e.getTexture(),n(y.blurSize,1/H,0),a.bindTechnique(g,l,h,y),i(m),e.release(),n(y.blurSize,0,1/j),h.singleHighlightBlurTexture=t.getTexture(),r(),a.bindTechnique(p,l,h,y),i(m),t.release()}u.release(),g.release(),p.release()}_gridUpdateResources(e){const t=this.renderingContext,i=this._grid,{width:r,height:s}=e.descriptor;if(i.horizontalCellCount=Math.ceil(r/C),i.verticalCellCount=Math.ceil(s/C),i.vao)return;const o=j.createIndex(t,R.STATIC_DRAW,N);i.vao=new _(t,x,new Map([["geometry",w]]),new Map([["geometry",j.createVertex(t,R.STATIC_DRAW)]]),o)}_gridComputeCoverage(e,t,i){const r=this.renderingContext,s=this._grid,o=t.descriptor,l=Math.ceil(o.width/C),n=Math.ceil(o.height/C);this._downsampleDrawParameters.input=t,s.coverage?.release();const h=this.fboCache.acquire(l,n,"highlight coverage",c.RG);return s.coverage=h,r.bindFramebuffer(h.fbo),r.bindTechnique(e,i,this._passParameters,this._downsampleDrawParameters),r.setViewport(0,0,l,n),r.screen.draw(),s}get test(){}};e([o()],G.prototype,"produces",void 0),e([o()],G.prototype,"consumes",void 0),e([o({constructOnly:!0})],G.prototype,"techniques",void 0),G=e([l("esri.views.3d.webgl-engine.effects.highlight.Highlight")],G);class L{constructor(){this.coverage=null,this.vao=null,this.verticalCellCount=0,this.horizontalCellCount=0,this.viewportWidth=0,this.viewportHeight=0}}function E(e){const t=new Uint8Array(128),i=(e,i)=>{t[e]=i},r=(e,t)=>{const r=4*e,s=4*e+64,{color:o}=t,l=t.haloColor??o;i(r+0,o.r),i(r+1,o.g),i(r+2,o.b),i(r+3,t.fillOpacity*o.a*255),i(s+0,l.r),i(s+1,l.g),i(s+2,l.b),i(s+3,t.haloOpacity*l.a*255)};return V(e,((e,t)=>{r(t,e.options)})),t}const z=new Array(H),U=new Array(H);function V(e,t){const i=Math.min(e.length,H);let r=H;for(let o=i-1;o>=0;--o){const t=e.at(o);if(t){const e=t.name;z.includes(e,r)||(--r,z[r]=e,U[r]=o)}}const s=H-r;for(let o=0;o<s;++o){const i=U[H-s+o];t(e.at(i),o)}}let B=0;function F(e){let t=0;const i=Math.min(H,e.length);for(let r=0;r<i;++r){const i=e.at(r);if(i){const{name:e,options:r}=i;t+=e.length;const{color:s,fillOpacity:o,haloColor:l,haloOpacity:n}=r;t+=s.r+(l?.r??1)+o+n}}{const i=e.at(0);if(i){const{shadowOpacity:e,shadowDifference:r,shadowColor:s}=i.options;t+=e+r+s.r}}return B+++(t>=0?0:1)}const N=new Uint8Array([0,1,2,2,1,3]);function W(e,t,i,r,s,o,l=0,a){const{highlightGroupIndices:u}=s;u.clear();const g=[];V(r,(e=>{const{name:t}=e;u.set(t,g.length),g.push(t)}));const p=u.size,{gl:m}=e;n(s.highlightMixOrigin,l,0);let d=null;p>1&&(d=t.acquire(i.width,i.height,"highlight mix",c.RG),e.bindFramebuffer(d.fbo),e.clearFramebuffer(h));const f=d?.getTexture()??null;s.highlightMixTexture=f,a();for(let n=0;n<p;++n)n>0&&(e.bindTexture(f,0),m.copyTexSubImage2D(S.TEXTURE_2D,0,0,0,l,0,i.width,i.height),e.bindTexture(null,0)),e.clear(P.DEPTH),s.highlightLevel=n,s.highlightGroupName=g[n],o();d?.release()}function k(e){const t=new Set;for(let i=0;i<H;++i){const r=e.at(i)?.name;r&&t.add(r)}return t.size}export{G as Highlight,W as renderHighlightBuffer,F as trackHighlightOptions};
