/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{C as e}from"../../../../../chunks/Compositing.glsl.js";import{CompositingTechnique as i}from"../../shaders/CompositingTechnique.js";import{CompositingTechniqueConfiguration as t,BlitMode as r}from"../../shaders/CompositingTechniqueConfiguration.js";import{FramebufferBit as s}from"../../../../webgl/enums.js";class o{constructor(s,o=r.None){this._techniques=s,this._parameters=new e,this._configuration=new t,this._configuration.blitMode=o,s.precompile(i,this._configuration)}blit(e,t,r,o){e.bindFramebuffer(r.fbo),e.setClearColor(0,0,0,1),e.clear(s.COLOR),this._parameters.texture=t.getTexture();const n=this._techniques.acquire(i,this._configuration);e.bindTechnique(n,o,this._parameters),e.screen.draw(),n.release()}blend(e,t,r,s,o=1){this._configuration.hasOpacityFactor=o<1;const n=this._techniques.acquire(i,this._configuration);return n.compiled?(e.bindFramebuffer(r.fbo),this._parameters.texture=t.getTexture(),this._parameters.opacity=o,e.bindTechnique(n,s,this._parameters),e.screen.draw(),n.release(),!0):(n.release(),!1)}}export{o as Blit};
