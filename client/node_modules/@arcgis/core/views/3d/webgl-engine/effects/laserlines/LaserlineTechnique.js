/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{deg2rad as e}from"../../../../../core/mathUtils.js";import{fromValues as s,create as t}from"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{create as i}from"../../../../../geometry/support/lineSegment.js";import{NoParameters as r}from"../../core/shaderModules/interfaces.js";import{ReloadableShaderModule as o}from"../../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as l}from"../../core/shaderTechnique/ShaderTechnique.js";import{L as n}from"../../../../../chunks/Laserlines.glsl.js";class a extends r{constructor(){super(...arguments),this.innerColor=s(1,1,1),this.innerWidth=1,this.glowColor=s(1,.5,0),this.glowWidth=8,this.glowFalloff=8,this.globalAlpha=.75,this.globalAlphaContrastBoost=2,this.angleCutoff=e(6),this.pointDistanceOrigin=t(),this.pointDistanceTarget=t(),this.lineVerticalPlaneSegment=i(),this.intersectsLineSegment=i(),this.intersectsLineRadius=3,this.heightManifoldTarget=t(),this.lineStartWorld=t(),this.lineEndWorld=t()}}class h extends l{constructor(e,s,t){super(e,s,new o(n,(()=>import("../../shaders/Laserlines.glsl.js"))),t)}}export{a as LaserlinePassParameters,h as LaserlineTechnique};
