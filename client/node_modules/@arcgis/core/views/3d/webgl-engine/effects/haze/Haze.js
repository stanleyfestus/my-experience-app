/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{lerp as t,clamp as s,smoothstep as r}from"../../../../../core/mathUtils.js";import{disposeMaybe as i}from"../../../../../core/maybe.js";import{watch as a,syncAndInitial as o}from"../../../../../core/reactiveUtils.js";import"../../../../../core/Logger.js";import"../../../../../core/has.js";import"../../../../../core/RandomLCG.js";import"../../../../../core/Error.js";import{subclass as n}from"../../../../../core/accessorSupport/decorators/subclass.js";import{set as h}from"../../../../../core/libs/gl-matrix-2/math/vec2.js";import{l as m,k as c}from"../../../../../chunks/vec32.js";import{s as u}from"../../../../../chunks/vec42.js";import{earth as p}from"../../../../../geometry/support/Ellipsoid.js";import{InternalRenderCategory as d}from"../../../webgl.js";import{ColorFormat as l}from"../../../webgl/formats.js";import{TransparentEnvironment as _}from"../TransparentEnvironment.js";import{H as f}from"../../../../../chunks/HazeCompositing.glsl.js";import{HazeCompositingTechnique as g}from"./HazeCompositingTechnique.js";import{HazePassParameters as b,HazeTechnique as w}from"./HazeTechnique.js";import{HazeTechniqueConfiguration as P}from"./HazeTechniqueConfiguration.js";import{createQuadVAO as j,Layout as A}from"../../lib/glUtil3D.js";import{applyTextureResizeModulo as C}from"../../lib/textureUtils.js";import{PrimitiveType as T}from"../../../../webgl/enums.js";let v=class extends _{constructor(e){super(e),this._compositingPassParameters=new f,this._passParameters=new b,this._hazeConfiguration=new P,this._vao=null,this.requireGeometryDepth=!0,this._oldAmount=1,this._newAmount=1,this._amount=this._newAmount;const{techniques:t}=e;t.precompile(w,this._hazeConfiguration),t.precompile(g),this._hazeConfiguration.reduced=!0,t.precompile(w,this._hazeConfiguration),this._hazeConfiguration.reduced=!1}initialize(){this.addHandles([a((()=>this.view.environment.atmosphereEnabled),(e=>e?this._enable():this._disable()),o),a((()=>this.view._stage?.renderer.renderContext.bind.clouds.fadeFactor??1),(e=>this._fade(e)),o),a((()=>this.view.environment.weather.type),(e=>this._newAmount="rainy"===e?0:1),o),a((()=>this.view._stage.renderer?.fullResolutionAtmosphere),(e=>this._hazeConfiguration.reduced=!e),o)])}_fade(e){e>=1?(this._amount=this._newAmount,this._oldAmount=this._newAmount):this._amount=e<=0?this._oldAmount:t(this._oldAmount,this._newAmount,e)}destroy(){this._vao=i(this._vao)}render(e){const s=e.find((({name:e})=>e===d.TRANSPARENT_ENVIRONMENT));if(!this.bindParameters.mainDepth)return s;const r=this.renderingContext;this._vao??=j(r,A.Pos2Tex);const i=this.techniques.acquire(w,this._hazeConfiguration);if(!i.compiled)return i.release(),s;const a=s.getAttachment(r.gl.DEPTH_STENCIL_ATTACHMENT);if(this._update(),!this._hazeConfiguration.reduced)return s.detachDepth(),r.bindFramebuffer(s.fbo),r.bindTechnique(i,this.bindParameters,this._passParameters),this._renderCommon(r),s.attachDepth(a),i.release(),s;const o=this.techniques.acquire(g);if(!o.compiled)return i.release(),o.release(),s;const n=r.getViewport(),h=this.camera,c=m(h.eye)-p.radius;let u;const _=p.atmosphereHeight;if(c<_){const e=Math.min(1,Math.max(0,c/_));u=t(.4,.5,e)}else{const e=Math.min(1,Math.max(0,(c-_)/(15*_)));u=t(.5,1,e)}const f=C(Math.round(u*h.fullViewport[2])),b=C(Math.round(u*h.fullViewport[3]));r.setViewport(0,0,f,b);const P=this.fboCache.acquire(f,b,"haze",l.RGBA);return r.bindFramebuffer(P.fbo),r.clearFramebuffer([0,0,0,1],!0,!0),r.bindTechnique(i,this.bindParameters,this._passParameters),this._renderCommon(r),r.setViewport(n.x,n.y,n.width,n.height),this._compositingPassParameters.color=P.getTexture(),s.detachDepth(),r.bindFramebuffer(s.fbo),r.bindTechnique(o,this.bindParameters,this._compositingPassParameters),r.screen.draw(),s.attachDepth(a),o.release(),i.release(),P.release(),s}_renderCommon(e){null!=this._vao&&(e.bindVAO(this._vao),e.drawArrays(T.TRIANGLE_STRIP,0,4))}_update(){const e=this.bindParameters.camera,i=c(e.eye),a=Math.sqrt(i),o=i-this._passParameters.radii[1]*this._passParameters.radii[1],n=s((a-this._passParameters.radii[0])/p.atmosphereHeight,0,1);u(this._passParameters.heightParameters,a,i,o,n);const m=this.view.basemapTerrain.getLowerBoundRadius();h(this._passParameters.radii,m,m+p.atmosphereHeight),this._passParameters.hazeStrength=t(t(.6,1,r(9500,10500,a-p.radius)),1,this._amount)}};v=e([n("esri.views.3d.webgl-engine.effects.haze.Haze")],v);export{v as Haze};
