/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import e from"../../../../core/PooledArray.js";import{isPromiseLike as t,createAbortError as r}from"../../../../core/promiseUtils.js";import{signal as n}from"../../../../core/signal.js";import{ShaderOutput as s}from"../core/shaderLibrary/ShaderOutput.js";import{releaseTechniques as o}from"./RenderPlugin.js";import{union as i,DepthRange as d}from"../lib/depthRange.js";import{RenderOccludedFlag as u}from"../lib/Material.js";import{RenderSlot as l}from"../lib/RenderSlot.js";class c{constructor(t){this.context=t,this._renderPlugins=new e,this._slots=new Array,this._version=n(0);for(let e=0;e<l.MAX_SLOTS;++e)this._slots[e]=[]}destroy(){this._renderPlugins.forEach((e=>e.destroy())),this._renderPlugins.clear()}get plugins(){return this._renderPlugins}add(e,n){const s=()=>{if(n?.aborted)throw e.uninitializeRenderContext(),r();this._renderPlugins.push(e),e.produces.forEach(((t,r)=>this._slots[r].push(e))),this.context.requestRender(),this._version.value++},o=e.initializeRenderContext(this.context,n);if(t(o))return o.then(s);s()}remove(e){this._renderPlugins.removeUnordered(e),e.uninitializeRenderContext();for(let t=0;t<this._slots.length;++t)this._slots[t]=this._slots[t].filter((t=>t!==e));this.context.requestRender(),this._version.value++}prepareRender(){this._renderPlugins.forAll((e=>{e.prepareRender&&e.prepareRender(this.context.renderContext)}))}updateAnimation(e){let t=!1;return this._renderPlugins.forAll((r=>t=r.updateAnimation?.(e)||t)),t}renderFeatureChanged(){this._renderPlugins.forAll((e=>{e.renderFeatureChanged&&e.renderFeatureChanged()}))}precompile(...e){++this.context.techniques.precompiling;const t=this.context.renderContext.bind.slot;for(const r of e)this.context.renderContext.bind.slot=r,this._slots[r].forEach((e=>{const t=e.produces.get(r);t?.(this.context.renderContext.output)&&e.precompile(this.context.renderContext)}));this.context.renderContext.bind.slot=t,--this.context.techniques.precompiling}_acquireRenderables(){const e=this.context.renderContext.bind.slot,t=this.context.renderContext.output??s.Color,r=new Map;return this._slots[e].forEach((n=>{const s=n.produces.get(e);if(!s?.(t)||n.isDecoration&&!this.context.renderContext.bind.decorations)return;const o=n.acquireTechniques(this.context.renderContext);o&&r.set(n,o)})),r}render(e,...t){for(const r of t)this.context.renderContext.bind.slot=r,this._acquireRenderables().forEach(((t,r)=>{r.render(this.context.renderContext,t,e),o(t)}))}queryDepthRange(e){const t=new d;return this._renderPlugins.forAll((r=>{const n=r.queryDepthRange?.(e);i(t,n)})),t}get updating(){return this._version.value>=0&&this._renderPlugins.some((e=>e.running))}produces(e,...t){for(const r of t)if(this._slots[r].some((t=>{const n=t.produces.get(r);return!!n&&n(e)})))return!0;return!1}consumes(e){return this._renderPlugins.some((t=>t.consumes().required.includes(e)))}get hasDecorations(){return this._renderPlugins.some((e=>e.isDecoration))}get hasOccludees(){return this._renderPlugins.some((e=>e.hasOccludees))}get hasEmissions(){return this._renderPlugins.some((e=>e.hasEmissions))}get renderOccludedFlags(){return this._renderPlugins.reduce(((e,t)=>e|t.renderOccludedFlags),u.None)}get usedMemory(){return this._renderPlugins.reduce(((e,t)=>t.material?e:e+(t.usedMemory??0)),0)}get test(){}}export{c as RenderPluginManager};
