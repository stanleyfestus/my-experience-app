/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../core/shaderLibrary/ShaderOutput.js";import{ReloadableShaderModule as r}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as o}from"../core/shaderTechnique/ShaderTechnique.js";import{OITPass as t}from"../lib/OITPass.js";import{blending as s,depthWrite as i,getDrawBuffers as l,OITPolygonOffset as n}from"../lib/OrderIndependentTransparency.js";import{VertexAttribute as a}from"../lib/VertexAttribute.js";import{S as d}from"../../../../chunks/ShadedColorMaterial.glsl.js";import{CompareFunction as p}from"../../../webgl/enums.js";import{makePipelineState as m,cullingParams as u,defaultColorWrite as c}from"../../../webgl/renderState.js";class h extends o{constructor(e,o,t){super(e,o,new r(d,(()=>import("./ShadedColorMaterial.glsl.js"))),t,f)}initializePipeline(r){const{oitPass:o,output:a,transparent:d,cullFace:h,shadingEnabled:f}=r,S=o===t.NONE,b=o===t.FrontFace;return m({blending:a===e.Color&&d?s(o):null,culling:u(h),depthTest:{func:b?p.LESS:f?p.LEQUAL:p.LESS},depthWrite:i(r),drawBuffers:l(o,a),colorWrite:c,polygonOffset:S||b?null:n})}}const f=new Map([[a.POSITION,0],[a.NORMAL,1],[a.OFFSET,2]]);export{h as ShadedColorMaterialTechnique,f as vertexAttributeLocations};
