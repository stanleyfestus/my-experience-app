/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{ReloadableShaderModule as e}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as r}from"../core/shaderTechnique/ShaderTechnique.js";import{OITPass as o}from"../lib/OITPass.js";import{blending as t,oitDepthTest as s,depthWrite as n,getDrawBuffers as i}from"../lib/OrderIndependentTransparency.js";import{C as a}from"../../../../chunks/CheckerBoard.glsl.js";import{makePipelineState as l,defaultColorWrite as c}from"../../../webgl/renderState.js";class p extends r{constructor(r,o,t){super(r,o,new e(a,(()=>import("./CheckerBoard.glsl.js"))),t)}initializePipeline(e){const{oitPass:r,transparent:a,polygonOffset:p,output:u}=e,f=r===o.NONE,m=r===o.FrontFace;return l({blending:a?t(r):null,depthTest:{func:s(r)},depthWrite:n(e),drawBuffers:i(r,u),colorWrite:c,polygonOffset:f||m?p?d:null:{factor:-1,units:-25}})}}const d={factor:0,units:-25};export{p as CheckerBoardTechnique};
