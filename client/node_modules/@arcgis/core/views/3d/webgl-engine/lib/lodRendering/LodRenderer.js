/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../chunks/tslib.es6.js";import{isSome as t}from"../../../../../core/arrayUtils.js";import r from"../../../../../core/Error.js";import{someMap as n}from"../../../../../core/MapUtils.js";import{destroyMaybe as a}from"../../../../../core/maybe.js";import{isAborted as s,throwIfAborted as i}from"../../../../../core/promiseUtils.js";import{property as o}from"../../../../../core/accessorSupport/decorators/property.js";import"../../../../../core/has.js";import"../../../../../core/Logger.js";import{subclass as l}from"../../../../../core/accessorSupport/decorators/subclass.js";import{create as c}from"../../../../../core/libs/gl-matrix-2/factories/mat4f64.js";import{d as h,f as d,t as u}from"../../../../../chunks/vec32.js";import{create as f}from"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{create as m,fromValues as p}from"../../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{debugFlags as _}from"../../../support/debugFlags.js";import{glLayout as g}from"../../../support/buffer/glUtil.js";import{newLayout as I}from"../../../support/buffer/InterleavedLayout.js";import y from"../../../webgl/RenderCamera.js";import{ShaderOutput as C}from"../../core/shaderLibrary/ShaderOutput.js";import{AsyncRenderPlugin as v}from"../../effects/RenderPlugin.js";import{Default3D as E}from"../DefaultVertexAttributeLocations.js";import{IntersectorType as R}from"../IntersectorInterfaces.js";import b from"../Octree.js";import{RenderSlot as D}from"../RenderSlot.js";import{assert as A}from"../Util.js";import{VertexAttribute as T}from"../VertexAttribute.js";import{InstanceData as L,StateFlags as S}from"./InstanceData.js";import{InstanceOctree as O}from"./InstanceOctree.js";import{LevelSelector as M}from"./LevelSelector.js";import{LodLevel as j}from"./LodLevel.js";import{RenderInstanceData as x}from"./RenderInstanceData.js";import{colorMixModes as N}from"../../materials/internal/MaterialUtil.js";import{encodeDoubleVec3 as w}from"../../materials/renderers/utils.js";import{DefaultMaterialDrawParameters as U}from"../../shaders/DefaultMaterialTechnique.js";import{TaskPriority as H,noBudget as F}from"../../../../support/Scheduler.js";import{bindVertexBufferLayout as V,unbindVertexBufferLayout as B}from"../../../../webgl/Util.js";const G=e=>{const t=e.baseBoundingSphere.radius,r=e.levels.map((e=>e.minScreenSpaceRadius));return new M(t,r)};let q=class extends v{constructor(e,t){super(e),this.type=R.LOD,this.isGround=!1,this._levels=[],this._defaultRenderInstanceData=new Array,this._highlightRenderInstanceDataMap=new Map,this._instanceIndex=0,this._cycleStartIndex=0,this._slicePlane=!1,this._camera=new y,this._updateCyclesWithStaticCamera=-1,this._needFullCycle=!1,this.produces=new Map([[D.OPAQUE_MATERIAL,e=>this._produces(e)],[D.TRANSPARENT_MATERIAL,e=>!!this._hasTransparentLevels()&&this._produces(e)]]),this._instanceData=new L({shaderTransformation:e.shaderTransformation},e.optionalFields),this.addHandles(t.registerTask(H.LOD_RENDERER,this))}initialize(){this._instanceBufferLayout=k(this.optionalFields),this._glInstanceBufferLayout=g(this._instanceBufferLayout,1),this.addHandles([this._instanceData.events.on("instances-changed",(()=>this._requestUpdateCycle())),this._instanceData.events.on("instance-transform-changed",(({index:e})=>{this._requestUpdateCycle(),this.metadata.notifyGraphicGeometryChanged(e)})),this._instanceData.events.on("instance-visibility-changed",(({index:e})=>{this._requestUpdateCycle(!0),this.metadata.notifyGraphicVisibilityChanged(e)})),this._instanceData.events.on("instance-highlight-changed",(()=>this._requestUpdateCycle(!0)))])}get _allRenderInstanceData(){const e=[this._defaultRenderInstanceData];for(const t of this._highlightRenderInstanceDataMap)e.push(t[1]);return e}get _enableLevelSelection(){return this.symbol.levels.length>1}get levels(){return this._levels}get baseBoundingBox(){return this._levels[this._levels.length-1].boundingBox}get baseBoundingSphere(){return this._levels[this._levels.length-1].boundingSphere}get baseMaterial(){return this._levels[this._levels.length-1].components[0].material}get slicePlaneEnabled(){return this._slicePlane}set slicePlaneEnabled(e){this._slicePlane=e}get layerUid(){return this.metadata.layerUid}get instanceData(){return this._instanceData}get hasEmissions(){return this.baseMaterial.hasEmissions}get usedMemory(){return this._allRenderInstanceData.reduce(((e,t)=>t.reduce(((e,t)=>e+t.usedMemory),e)),0)}get renderStats(){const e=this._instanceData.size,t=[];return this._levels.forEach(((e,r)=>{const n=this._allRenderInstanceData[0][r].size+this._allRenderInstanceData[1][r].size,a=e.triangleCount;t.push({renderedInstances:n,renderedTriangles:n*a,trianglesPerInstance:a})})),{totalInstances:e,renderedInstances:t.reduce(((e,t)=>e+t.renderedInstances),0),renderedTriangles:t.reduce(((e,t)=>e+t.renderedTriangles),0),levels:t}}_createRenderInstanceDataArray(e=[]){const{rctx:t}=this._context.renderContext;return this.symbol.levels.map((r=>{e.push(new x(t,this._instanceBufferLayout))})),e}async initializeRenderContext(e,r){this._context=e,this._createRenderInstanceDataArray(this._defaultRenderInstanceData);const n=await Promise.allSettled(this.symbol.levels.map((t=>j.create(e,t,r)))),a=n.map((e=>"fulfilled"===e.status?e.value:null)).filter(t);if(s(r)||a.length!==n.length){a.forEach((e=>e.destroy())),i(r);for(const e of n)if("rejected"===e.status)throw e.reason}this._levels=a,this._levelSelector=G(this)}uninitializeRenderContext(){this._invalidateOctree(),this._levels.forEach((e=>e.destroy())),this._defaultRenderInstanceData.forEach((e=>e.destroy())),this._highlightRenderInstanceDataMap.forEach((e=>e.forEach((e=>e.destroy()))))}_hasTransparentLevels(){return this._levels.some((e=>e.components.some((e=>{const t=e.material.produces.get(D.TRANSPARENT_MATERIAL);return t?.(C.Color)}))))}hasHighlights(){return n(this._highlightRenderInstanceDataMap,(e=>e.some((e=>e.size>0))))}_produces(e){return e!==C.Highlight&&e!==C.ShadowHighlight||this.hasHighlights()}prepareRender(e){if(!_.LOD_INSTANCE_RENDERER_DISABLE_UPDATES){if(this._enableLevelSelection){const t=e.bind.contentCamera.equals(this._camera);this._camera.copyFrom(e.bind.contentCamera),t||this._requestUpdateCycle()}this._needFullCycle&&(this.runTask(F),this._needFullCycle=!1)}}acquireTechniques(e){if(!this.baseMaterial.visible||!this.baseMaterial.isVisibleForOutput(e.output))return null;const t=this._getInstanceDatas(e);if(!t)return null;const r=new Array,n=this.levels;return t.forEach((t=>n.forEach((({components:n},a)=>n.forEach((n=>r.push(this._beginComponent(e,t[a],n)))))))),r}render(e,t){const r=this._getInstanceDatas(e);if(!r||null==t)return;let n=0;e.rctx.bindVAO();const a=this.levels;r.forEach((r=>a.forEach((({components:a},s)=>a.forEach((a=>this._renderComponent(e,t[n++],r[s],a,s)))))))}_getInstanceDatas(e){const{output:t,bind:r}=e,n=t===C.Highlight,a=!n&&t!==C.ShadowHighlight,s=t!==C.ShadowExcludeHighlight;if(a)return s?this._allRenderInstanceData:[this._defaultRenderInstanceData];if(s){if(n){const{highlightGroupName:e}=r;if(!e)return null;const t=this._highlightRenderInstanceDataMap.get(e);return t?[t]:null}const e=[];for(const t of this._highlightRenderInstanceDataMap)e.push(t[1]);return e}return null}intersect(e,t,r,n){if(!this.baseMaterial.visible||null==this._octree)return;const a=f();h(a,n,r);const s=a=>{this._instanceData.getCombinedModelTransform(a,Y),e.transform.set(Y),u(J,r,e.transform.inverse),u(Q,n,e.transform.inverse);const s=this._instanceData.getState(a),i=this._instanceData.getLodLevel(a),o=this._levels.length;A(!!(s&S.ACTIVE),"invalid instance state"),A(i>=0&&i<o,"invaid lod level"),this._levels[i].intersect(e,t,J,Q,a,this.metadata,o)};this.baseMaterial.parameters.verticalOffset?this._octree.forEach(s):this._octree.forEachAlongRay(r,a,s)}notifyShaderTransformationChanged(){this._invalidateOctree(),this._requestUpdateCycle()}get _octree(){if(null==this._octreeCached){const e=this._instanceData,t=e.view?.state;if(!t)return null;this._octreeCached=new O(e,this.baseBoundingSphere);for(let r=0;r<e.capacity;++r)t.get(r)&S.ACTIVE&&this._octreeCached.addInstance(r)}return this._octreeCached}_invalidateOctree(){this._octreeCached=a(this._octreeCached)}queryDepthRange(e){if(null==this._octree)return{near:1/0,far:-1/0};const t=e.viewForward,r=this._octree.findClosest(t,b.DepthOrder.FRONT_TO_BACK,e.frustum),n=this._octree.findClosest(t,b.DepthOrder.BACK_TO_FRONT,e.frustum);if(null==r||null==n)return{near:1/0,far:-1/0};const a=e.eye,s=this._instanceData.view;s.boundingSphere.getVec(r,K),h(K,K,a);const i=d(K,t)-K[3];s.boundingSphere.getVec(n,K),h(K,K,a);const o=d(K,t)+K[3];return{near:Math.max(e.near,i),far:Math.min(e.far,o)}}_requestUpdateCycle(e=!1){this._updateCyclesWithStaticCamera=-1,this._cycleStartIndex=this._instanceIndex,e&&(this._needFullCycle=!0,this._context.requestRender())}_startUpdateCycle(){this._updateCyclesWithStaticCamera++,this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.startUpdateCycle()))))}get running(){return this._instanceData.size>0&&this._updateCyclesWithStaticCamera<1}runTask(e){const{_enableLevelSelection:t,_camera:n,_levelSelector:a}=this;this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.beginUpdate()))));const s=this._instanceData,i=s.view;let o=s.size;const l=s.capacity;let c=this._instanceIndex;const h=Math.ceil(l/500);for(let d=0;d<o&&!e.done;++d){c===this._cycleStartIndex&&this._startUpdateCycle();const d=i.state.get(c);let u=0;if(!(d&S.ALLOCATED)){c=c+1===l?0:c+1,o++;continue}const f=i.lodLevel.get(c);if(d&S.DEFAULT_ACTIVE&&this._defaultRenderInstanceData[f].freeTail(),d&S.HIGHLIGHT_ACTIVE&&s.foreachHighlightGroupPrev(c,(e=>{const t=this._highlightRenderInstanceDataMap.get(e);if(!t)throw new r("Internal error in lodRenderer");t[f].freeTail()})),d&S.REMOVE)s.freeInstance(c);else if(d&S.VISIBLE){let e=0;t&&(i.modelOrigin.getVec(c,W),e=a.selectLevel(W,s.getCombinedMedianScaleFactor(c),n)),u=d&~(S.ACTIVE|S.TRANSFORM_CHANGED),e>=0&&(d&S.HIGHLIGHT?(s.foreachHighlightGroup(c,(t=>{let n=this._highlightRenderInstanceDataMap.get(t);if(n||(n=this._createRenderInstanceDataArray(),n.forEach((e=>e.beginUpdate())),this._highlightRenderInstanceDataMap.set(t,n)),e>=n.length)throw new r(`LodRenderer internal error - missing lodLevel ${e}`);P(n[e],i,c)})),u|=S.HIGHLIGHT_ACTIVE):(P(this._defaultRenderInstanceData[e],i,c),u|=S.DEFAULT_ACTIVE)),i.state.set(c,u),i.lodLevel.set(c,e)}else u=d&~(S.ACTIVE|S.TRANSFORM_CHANGED),i.state.set(c,u);if(null!=this._octreeCached){const e=!!(d&S.ACTIVE),t=!!(u&S.ACTIVE);!e&&t?this._octreeCached.addInstance(c):e&&!t?this._octreeCached.removeInstance(c):e&&t&&d&S.TRANSFORM_CHANGED&&(this._octreeCached.removeInstance(c),this._octreeCached.addInstance(c))}c=c+1===l?0:c+1,c%h==0&&e.madeProgress()}this._instanceIndex=c,this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.endUpdate())))),this._context.requestRender()}_beginComponent(e,t,r){if(0===t.size)return null;const n=r.glMaterials.load(e.rctx,e.bind.slot,e.output);return n?.beginSlot(e.bind)}_renderComponent(e,t,r,n,a){if(!t)return;const{bind:s,rctx:i}=e;i.runAppleAmdDriverHelper();const o=i.bindTechnique(t,s,n.material.parameters,$);i.bindVAO(n.vao),t.ensureAttributeLocations(n.vao),_.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL&&e.output===C.Color&&(o.setUniform4fv("externalColor",Z[Math.min(a,Z.length-1)]),o.setUniform1i("colorMixMode",N.replace));const l=r.capacity,c=r.headIndex,h=r.tailIndex,d=r.firstIndex,u=this._glInstanceBufferLayout,f=(e,a)=>{V(i,E,r.buffer,u,e),i.drawArraysInstanced(t.primitiveType,0,n.vertexCount,a-e),B(i,E,r.buffer,u)};n.material.parameters.transparent&&null!=d?c>h?(A(d>=h&&d<=c,"invalid firstIndex"),f(d,c),f(h,d)):c<h&&(d<=c?(A(d>=0&&d<=c,"invalid firstIndex"),f(d,c),f(h,l),f(0,d)):(A(d>=h&&d<=l,"invalid firstIndex"),f(d,l),f(0,c),f(h,d))):c>h?f(h,c):c<h&&(f(0,c),f(h,l)),i.bindVAO(null)}};function P(e,t,r){const n=e.allocateHead();z(t,r,e.view,n)}function z(e,t,r,n){w(e.modelOrigin,t,r.modelOriginHi,r.modelOriginLo,n),r.model.copyFrom(n,e.model,t),r.modelNormal.copyFrom(n,e.modelNormal,t),e.color&&r.color&&r.color.copyFrom(n,e.color,t),e.objectAndLayerIdColor&&r.objectAndLayerIdColor&&r.objectAndLayerIdColor.copyFrom(n,e.objectAndLayerIdColor,t),e.featureAttribute&&r.featureAttribute&&r.featureAttribute.copyFrom(n,e.featureAttribute,t)}function k(e){let t=I().vec3f(T.INSTANCEMODELORIGINHI).vec3f(T.INSTANCEMODELORIGINLO).mat3f(T.INSTANCEMODEL).mat3f(T.INSTANCEMODELNORMAL);return null!=e&&e.includes("featureAttribute")&&(t=t.vec4f(T.INSTANCEFEATUREATTRIBUTE)),null!=e&&e.includes("color")&&(t=t.vec4u8(T.INSTANCECOLOR)),null!=e&&e.includes("objectAndLayerIdColor")&&(t=t.vec4u8(T.INSTANCEOBJECTANDLAYERIDCOLOR)),t}e([o({constructOnly:!0})],q.prototype,"symbol",void 0),e([o({constructOnly:!0})],q.prototype,"optionalFields",void 0),e([o({constructOnly:!0})],q.prototype,"metadata",void 0),e([o({constructOnly:!0})],q.prototype,"shaderTransformation",void 0),e([o()],q.prototype,"_instanceData",void 0),e([o()],q.prototype,"_cycleStartIndex",void 0),e([o({readOnly:!0})],q.prototype,"_enableLevelSelection",null),e([o()],q.prototype,"_updateCyclesWithStaticCamera",void 0),e([o({readOnly:!0})],q.prototype,"running",null),q=e([l("esri.views.3d.webgl-engine.lib.lodRendering.LodRenderer")],q);const W=f(),K=m(),Y=c(),J=f(),Q=f(),Z=[p(1,0,1,1),p(0,0,1,1),p(0,1,0,1),p(1,1,0,1),p(1,0,0,1)],$=new U;export{q as LodRenderer};
