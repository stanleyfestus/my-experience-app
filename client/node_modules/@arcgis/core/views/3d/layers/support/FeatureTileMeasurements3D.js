/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{clamp as e}from"../../../../core/mathUtils.js";import{G as t,i,n as r,f as o,h as s,c as a,F as l,b as n}from"../../../../chunks/vec32.js";import{create as c,freeze as u,ZEROS as h}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{distance as m}from"../../../../geometry/support/aaBoundingRect.js";import{intersectsRay as d,intersectsPoint as f}from"../../../../geometry/support/frustum.js";import{fromValues as p}from"../../../../geometry/support/ray.js";import{ViewingMode as _}from"../../../ViewingMode.js";import{Visibility as b}from"./FeatureTileDescriptor.js";import{FeatureTileVisibility3D as M,globalTileLevelThreshold as S}from"./FeatureTileVisibility3D.js";import g from"../../webgl/RenderCamera.js";class v{constructor(e){this._camera=new g,this._focusOnMap=[0,0],this._renderCoordsHelper=e.renderCoordsHelper,this._tilingScheme=e.tilingScheme,this._visibility=new M(e.renderCoordsHelper,e.getIsGroundOpaque)}begin(e,t){this._camera.copyFrom(e),this._focusOnMap[0]=t.x,this._focusOnMap[1]=t.y,this._visibility.begin(this._camera)}end(){this._visibility.end()}updateTile(e){const{measures:t}=e;t.visibility=this._visibility.calculate(e),t.distance=m(e.extent,this._focusOnMap),t.visibility!==b.INVISIBLE&&this._updateSplitDecisionAndLod(e)}_calculateTileShouldSplitGlobal(e){const l=this._camera,{eye:n}=l,c=t(n),u=this._renderCoordsHelper,h=u.referenceEllipsoid.radius;if(c>2*h)return e.measures.effectiveLevelForLod=0,!1;const m=e.lij[0];if(m<=S)return e.measures.effectiveLevelForLod=m,!0;const d=y,{extent:f}=e;i(d[0],f[0],f[1],0),i(d[1],f[2],f[1],0),i(d[2],f[2],f[3],0),i(d[3],f[0],f[3],0);const p=i(C,.5*(f[0]+f[2]),.5*(f[1]+f[3]),0),_=this._tilingScheme.spatialReference;for(let t=0;t<4;++t)u.toRenderCoords(d[t],_,d[t]);u.toRenderCoords(p,_,p);const b=r(j,p),M=o(n,b),g=s(L,b,M),v=t(n)-h;return a(F.origin,T),a(F.direction,b),this._calculateTileShouldSplitCommon(e,d,p,F,v,g)}_calculateTileShouldSplitLocal(e){const t=y,{extent:r}=e;i(t[0],r[0],r[1],0),i(t[1],r[2],r[1],0),i(t[2],r[2],r[3],0),i(t[3],r[0],r[3],0);const o=this._tilingScheme.spatialReference;for(let i=0;i<4;++i)this._renderCoordsHelper.toRenderCoords(t[i],o,t[i]);const s=i(C,.5*(t[0][0]+t[2][0]),.5*(t[0][1]+t[2][1]),.25*(t[0][2]+t[1][2]+t[2][2]+t[3][2])),l=i(j,s[0],s[1],0),{eye:n,far:c}=this._camera,u=i(L,l[0],l[1],n[2]),h=n[2];i(F.origin,l[0],l[1],n[2]-2*c),a(F.direction,x);const m=n[2]-2*c,d=[x,x,x,x],f=[m,m,m,m];return this._calculateTileShouldSplitCommon(e,t,s,F,h,u,d,f)}_calculateTileShouldSplitCommon(t,i,r,s,a,u,h,m){const _=Math.max(l(i[0],i[2]),l(i[1],i[3]),l(i[0],r)+l(r,i[2])),b=this._camera,{eye:M,near:S,far:g,fovY:v,viewForward:y}=b,C=e(o(s.direction,y),.1,1),j=o(M,y),L=o(r,y)-j,x=2*Math.tan(.5*v),T=e=>e<=S?1:1/(e*x),F=Math.abs(a)/_,w=T(L),H=t.lij[0],O=l(M,r);let D=0,I=1/0;for(const e of i){const t=l(M,e);I=Math.min(I,t),D=Math.max(D,t)}const V=e=>Math.max(0,H-1,H+Math.ceil(Math.log2(e))-1),A=50*e(C,.1,1),B=50*e(C,.1,1),E=2,k=.7,q=l(u,M)>k*_,N=L<S,U=e=>A*_/(e*e),Y=V(q?U(O):N?B*_/Math.abs(a):E*w*_),z=I-S>.33*(g-S)?-1:1;if(t.measures.effectiveLevelForLod=Y+z,H>=Y+1)return!1;const{frustum:J}=b,K=F<G;if(o(u,y)-j<0&&Math.abs(C)<.5)return K;if(l(u,M)<S)return K;const P=d(J,s);{const e=V(U(I)),t=V(U(D));if(Math.abs(e-t)>2||Math.abs(Y-t)>2||Math.abs(Y-e)>2)return!0}if(!this.isGlobalMode&&q&&h&&m){let e=0;for(let t=0;t<4;++t){const r=h[t],o=m[t],s=c();n(s,i[t],r,o);const a=p(s,r);d(J,a)&&++e}if(e>=3||e>=2&&P)return!1;if(e<=2&&!P&&H<Y+1)return!0}const Q=f(J,r);let W=0;for(let e=0;e<4;++e){const t=i[e];W+=f(J,t)?1:0}if(Q&&W>=2)return!1;if(!Q&&!P&&W<=2)return K;let X=L,Z=L;for(let e=0;e<4;++e){const t=i[e],r=o(t,y)-j;Z=Math.min(Z,r),X=Math.max(X,r)}if(Z<=S)return K;if(T(Z)*_<.3)return!1;return T(X)*_>.9||w*_>R&&W<=2&&!Q&&!P}_updateSplitDecisionAndLod(e){e.measures.shouldSplit=this.isGlobalMode?this._calculateTileShouldSplitGlobal(e):this._calculateTileShouldSplitLocal(e),e.updateResolution()}get isGlobalMode(){return this._renderCoordsHelper.viewingMode===_.Global}}const y=[c(),c(),c(),c()],C=c(),j=c(),L=c(),x=u(0,0,1),T=h,F=p(h,x),G=1,R=.9;export{v as FeatureTileMeasurements3D};
