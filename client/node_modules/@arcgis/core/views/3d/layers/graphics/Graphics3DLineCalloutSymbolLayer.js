/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import{pt2px as t}from"../../../../core/screenUtils.js";import{create as r}from"../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{ZEROS as i,create as n}from"../../../../core/libs/gl-matrix-2/factories/vec4f64.js";import{textSymbolLayerSupportsVerticalOffset as s}from"../../../../symbols/callouts/calloutUtils.js";import{perObjectElevationAligner as a}from"./ElevationAligners.js";import{SymbolUpdateType as o,elevationModeChangeUpdateType as l,needsElevationUpdates2D as c}from"./elevationAlignmentUtils.js";import{ElevationContext as m}from"./ElevationContext.js";import{Graphics3DGraphicCreationContext as h}from"./Graphics3DGraphicCreationContext.js";import{Graphics3DObject3DGraphicLayer as p}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DObjectMetadata as d}from"./Graphics3DObjectMetadata.js";import{Graphics3DSymbolLayer as f}from"./Graphics3DSymbolLayer.js";import{computeCentroid as u}from"./graphicUtils.js";import{createStageObject as g,extendPointGraphicElevationContext as y}from"./pointUtils.js";import{SymbolComplexity as v}from"./SymbolComplexity.js";import{Attribute as b}from"../../webgl-engine/lib/Attribute.js";import{ContentObjectType as x}from"../../webgl-engine/lib/ContentObjectType.js";import{Geometry as C}from"../../webgl-engine/lib/Geometry.js";import{VertexAttribute as _}from"../../webgl-engine/lib/VertexAttribute.js";import{LineCalloutMaterial as O,Parameters as E,uniqueMaterialIdentifier as j}from"../../webgl-engine/materials/LineCalloutMaterial.js";class P extends f{constructor(e,t){super(e,null,t,S),this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},this.ensureDrapedStatus(!1)}async doLoad(){this._materials[0]=new O(this._materialParameters,this._context.spherical),this._context.stage.add(this._materials[0])}destroy(){super.destroy(),this._context.stage.remove(this._materials[0]),this._materials.length=0}_perInstanceMaterialParameters(e){const t=this._materialParameters;return t.horizontalScreenOffset=e.horizontalScreenOffset??0,t.centerOffsetUnits=e.centerOffsetUnits||"world",t}get _materialParameters(){const r=new E,n=this.symbol,s=n.callout;if(s.color){const t=e.toUnitRGBA(s.color);t[3]*=this._getLayerOpacity(),r.color=t}else r.color=i;if(r.size=t(s.size||0),n.verticalOffset){const{screenLength:e,minWorldLength:i,maxWorldLength:s}=n.verticalOffset;r.verticalOffset={screenLength:t(e),minWorldLength:i||0,maxWorldLength:null!=s?s:1/0}}r.borderColor=null!=s.border?.color?e.toUnitRGBA(s.border.color):null;const a="object"===n.symbolLayers.at(0).type,o="label-3d"===n.type;return r.occlusionTest=!a,r.shaderPolygonOffset=a?0:void 0,r.hudDepthAlignStart=o,r.hasSlicePlane=this._context.slicePlaneEnabled,r.screenSizePerspective=this._context.screenSizePerspectiveEnabled?this._context.sharedResources.screenSizePerspectiveSettings:null,r}_defaultElevationInfoNoZ(){return G}createGraphics3DGraphic(e){const t=e.renderingInfo,r=e.graphic,i=this.setGraphicElevationContext(r,new m,t.elevationOffset||0),n=t.symbol,a="on-the-ground"===this._elevationContext.mode&&("cim"===n.type||!n.symbolLayers.some((e=>"object"===e.type||"text"===e.type)));if("label-3d"!==n.type&&a)return null;if("point-3d"===n.type&&n.symbolLayers.every((e=>"text"===e.type&&!s(e))))return null;const o=u(r.geometry);return null==o?null:this._createAs3DShape(o,i,t,r.uid)}layerOpacityChanged(){this._materials[0]?.setParameters(this._materialParameters)}layerElevationInfoChanged(e,t,r){const i=this._elevationContext.mode,n=l(P.elevationModeChangeTypes,r,i);return n!==o.UPDATE||e.forEach((e=>{const r=t(e);null!=r&&this.updateGraphicElevationContext(e.graphic,r)})),n}slicePlaneEnabledChanged(){return this._materials[0]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return!0}setGraphicElevationContext(e,t,r=0){return super.setGraphicElevationContext(e,t),t.addOffsetRenderUnits(r),t}updateGraphicElevationContext(e,t){this.setGraphicElevationContext(e,t.elevationContext,null!=t.metadata?t.metadata.elevationOffset:0),t.needsElevationUpdates=c(t.elevationContext.mode)}computeComplexity(){return new v({verticesPerFeature:6})}_getOrCreateMaterial(e){const t=this._perInstanceMaterialParameters(e),r=j(t);if(r===this._materials[0]?.uniqueMaterialIdentifier)return{material:this._materials[0],isUnique:!1};if(null!=e.materialCollection){let i=e.materialCollection.get(r);return null==i&&(i=new O(t,this._context.spherical),e.materialCollection.add(r,i)),{material:i,isUnique:!1}}return{material:new O(t,this._context.spherical),isUnique:!0}}_createAs3DShape(e,t,r,i){const n=this._context.layer.uid,s=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:i,layerUid:n}),o=this._getOrCreateMaterial(r),l=new C(o.material,U(r),null,x.Point,s),m=g(this._context,e,l,t,i);if(null==m)return null;const h=new p(this,m.object,[l],o.isUnique?[o.material]:null,null,a,t);return h.metadata=new d(r.elevationOffset),h.alignedSampledElevation=m.sampledElevation,h.needsElevationUpdates=c(t.mode),y(h,e,this._context.elevationProvider),h}}function U(e){const{translation:t,centerOffset:r}=e,i=new b(t?[t[0],t[1],t[2]]:[0,0,0],w,3,!0),n=new b(r?[r[0],r[1],r[2],r[3]]:[0,0,0,1],w,4,!0);return[[_.POSITION,i],[_.NORMAL,new b([0,0,1],w,3,!0)],[_.CENTEROFFSETANDDISTANCE,n]]}P.elevationModeChangeTypes={definedChanged:o.UPDATE,staysOnTheGround:o.UPDATE,onTheGroundChanged:o.RECREATE};const w=[0],G={mode:"relative-to-ground",offset:0},S={ignoreDrivers:!0,renderPriority:0,renderPriorityStep:1};class A{constructor(e,t,i=r(),s=n(),a=0,o="world",l=0,c=null){this.renderer=e,this.symbol=t,this.translation=i,this.centerOffset=s,this.horizontalScreenOffset=a,this.centerOffsetUnits=o,this.elevationOffset=l,this.materialCollection=c}}class D extends h{}export{P as Graphics3DLineCalloutSymbolLayer,D as LineCalloutCreationContext,A as LineCalloutSymbolLayerRenderingInfo};
