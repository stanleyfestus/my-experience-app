/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../../../chunks/tslib.es6.js";import has from"../../../../../../core/has.js";import{throwIfAborted as r}from"../../../../../../core/promiseUtils.js";import"../../../../../../core/Logger.js";import"../../../../../../core/RandomLCG.js";import"../../../../../../core/Error.js";import{subclass as s}from"../../../../../../core/accessorSupport/decorators/subclass.js";import{VertexAttribute as n}from"../../../../webgl-engine/lib/VertexAttribute.js";import{LodRenderer as t}from"../../../../webgl-engine/lib/lodRendering/LodRenderer.js";import{materialsFromLodResources as o,texturesFromLodResources as a,LodComponentResources as i,LodLevelResources as d,LodResources as l}from"../../../../webgl-engine/lib/lodRendering/LodResources.js";let c=class{constructor(e){this._optionalFields=new Array,this._instanceIndexToFeatureId=new Map,this._featureIdToInstanceIndex=new Map,this._disposeResourceHandles=new Array,this._lodRendererResources=null,this.layerUid=e.layerUid,this.view=e.view,this.sharedResources=this.view.sharedSymbolResources,this.scheduler=this.view.resourceController.scheduler}async doLoad(e,s,t){has("enable-feature:objectAndLayerId-rendering")&&this._optionalFields.push(n.OBJECTANDLAYERIDCOLOR);const i=u((e=>s(e)),e),d=this.view._stage,l=o(i);d.addMany(l),this._addDisposeResource((()=>d.removeMany(l)));const c=a(i);d.addMany(c),this._addDisposeResource((()=>{c.forEach((e=>e.unload())),d.removeMany(c)})),await Promise.all(c.map((e=>this.view._stage.schedule((()=>e.load(d.renderView.renderingContext)),t)))),r(t);const h=await this._createLodRenderer(i,t);this._lodRendererResources={lodRenderer:h,materials:l,textures:c}}addInstances(e){const r=this._lodRendererResources;if(null==r)return;const{featureIds:s,localTransforms:n,globalTransforms:t}=e,o=r.lodRenderer;if(null==o)return;const a=o.instanceData,i=s.length;for(let d=0;d<i;++d){const e=s[d],r=a.addInstance(),o=a.view,i=16*d;o.localTransform.copyFromTypedBuffer(r,n,i),o.globalTransform.copyFromTypedBuffer(r,t,i),a.updateModelTransform(r),a.setVisible(r,!0),this._instanceIndexToFeatureId.set(r,e),this._featureIdToInstanceIndex.set(e,r)}}removeInstances(e){const r=this._lodRendererResources;if(null==r)return;const s=r?.lodRenderer,n=s.instanceData,t=this._instanceIndexToFeatureId,o=this._featureIdToInstanceIndex,a=e.length;for(let i=0;i<a;++i){const r=e[i],s=o.get(r);null!=s&&(n.removeInstance(s),t.delete(s),o.delete(r))}}_addDisposeResource(e){this._disposeResourceHandles.push(e)}async _createLodRenderer(e,r){const s=this.view._stage,n={layerUid:this.layerUid,graphicUid:e=>1,notifyGraphicGeometryChanged:e=>1,notifyGraphicVisibilityChanged:e=>1},o=new t({symbol:e,optionalFields:this._optionalFields,metadata:n,shaderTransformation:null},this.scheduler);return o.slicePlaneEnabled=!1,this._addDisposeResource((()=>{s.removeRenderPlugin(o),o.destroy()})),await s.addRenderPlugin(o,r),o}};function u(e,r){const s=r.levels.map((r=>{const s=r.components.map((r=>{const s=e(r.materialId);if(!h(s))throw new Error("LodRenderer only supports DefaultMaterial");const n=s.createBufferWriter(),t={material:s,vertexBufferLayout:n.vertexBufferLayout,buffer:r.renderGeometryBuffer.data,elementCount:r.renderGeometryBuffer.elementCount,boundingInfo:r.boundingInfo};return new i(t)}));return new d(s,r.minScreenSpaceRadius)}));return new l(s)}function h(e){return null!=e&&"materialType"in e&&"default"===e.materialType}c=e([s("esri.views.3d.layers.graphics.pipeline.rendering.LodRenderer")],c);export{c as LodRenderer,h as isDefaultMaterial};
