/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import e from"../../../../../../core/Error.js";import t from"../../../../../../core/pbf.js";import{create as r}from"../../../../../../core/libs/gl-matrix-2/factories/vec3f64.js";import{BBox as s}from"../../../../../../core/libs/rbush/PooledRBush.js";import{fromValues as n}from"../../../../../../geometry/support/aaBoundingBox.js";import{normalizeTransform as o}from"../../../../../../geometry/support/quantizationUtils.js";import i from"../../../../../../layers/graphics/OptimizedGeometry.js";import a from"../../../../../../layers/support/FieldsIndex.js";import{parseField as c,parseTransform as d}from"../../../../../../rest/query/operations/pbfFeatureServiceParser.js";class u{constructor(e){const r=new t(new Uint8Array(e),new DataView(e));this._reader=r,this._index=g(r)}get featureCount(){return this._index.featureIndices.length}get exceededTransferLimit(){return this._index.exceededTransferLimit}getObjectId(e){return this.getAttribute(e,this._index.objectIdFieldName)}getAttribute(e,t){const{_index:{fieldsIndex:r,attributeIndices:s}}=this,n=r.get(t)?.index;if(null==n)return;const o=s[e*r.fields.length+n],i=this._reader;return i.move(o),m(i)}getAttributeAsTimestamp(e,t){const r=this.getAttribute(e,t);return"string"==typeof r?new Date(r).getTime():"number"==typeof r||null==r?r:null}getAttributes(e){const{_index:{fieldsIndex:t,attributeIndices:r}}=this,s=e*t.fields.length,n=this._reader,o={};for(const i of t.fields){const e=r[s+i.index];n.move(e),o[i.name]=m(n)}return o}getCoordinates(e,t,r=0){const s=this._reader,{transform:n,featureIndices:o}=this._index,{scale:i,translate:a}=n;s.move(o[e]),this._readCoordinates(i,a,t,r)}getOptimizedGeometry(e){const t=r();return this.getCoordinates(e,t),new i([],t)}getCentroid(e,{hasZ:t,hasM:r}){this.getCoordinates(e,h);const[s,n,o]=h,a=[s,n];return t&&(a[3]=o),r&&(a[t?4:3]=0),new i([],a)}getBounds(e){this.getCoordinates(e,h);const[t,r]=h,n=new s;return n.minX=t,n.minY=r,n.maxX=t,n.maxY=r,n}getBoundingBox(e){this.getCoordinates(e,h);const[t,r,s]=h;return n(t,r,s,t,r,s)}readAllObjectIds(e,t=0){const r=this._reader,{_index:s,featureCount:n}=this,{objectIdFieldName:o,attributeIndices:i,fieldsIndex:a}=s,c=a.get(o).index,d=a.fields.length;for(let u=0;u<n;++u){const s=i[u*d+c];r.move(s),e[t++]=m(r)}return t}readAllCoordinates(e,t=0){const r=this._reader,{transform:s,featureIndices:n}=this._index,{scale:o,translate:i}=s;for(const a of n)r.move(a),t=this._readCoordinates(o,i,e,t);return t}_readCoordinates([e,t,r],[s,n,o],i,a){const c=2,d=3,u=this._reader,g=u.getLength(),f=u.pos()+g;for(;u.pos()<f&&u.next();)switch(u.tag()){case c:{const c=u.getLength(),g=u.pos()+c;for(;u.pos()<g&&u.next();)if(u.tag()===d)u.getUInt32(),i[a++]=s+e*u.getSInt64(),i[a++]=n+t*u.getSInt64(),i[a++]=o+r*u.getSInt64();else u.skip();break}default:u.skip()}return a}}function g(e){const t=2;for(;e.next();){if(e.tag()===t)return f(e.getMessage());e.skip()}p()}function f(e){const t=1;for(;e.next();){if(e.tag()===t)return l(e.getMessage());e.skip()}p()}function l(e){const t=9,r=12,s=13,n=15,i=7,u=0,g=10,f=1,l=1;let m,h,x=!1,b=!1,I=0;const w=new Array,_=new Array,k=new Array;for(;e.next();)switch(e.tag()){case l:h=e.getString();break;case i:e.getEnum()!==u&&p();break;case t:x=e.getBool()??!1;break;case r:m=o(e.processMessage(d));break;case s:{const t=e.processMessage(c);t.index=I++,w.push(t);break}case n:{_.push(e.pos());const t=e.getUInt32(),r=e.pos()+t;for(;e.pos()<r&&e.next();)if(e.tag()===f)k.push(e.pos()),e.skip();else e.skip();break}case g:b=e.getBool()??!1;break;default:e.skip()}const j=new a(w);return null!=m&&b&&null!=h&&j.has(h)||p(),{transform:m,exceededTransferLimit:x,fieldsIndex:j,objectIdFieldName:h,featureIndices:_,attributeIndices:k}}function p(){const t=new e("pbf-parsing-failed","Error while parsing PBF",new Error);throw console.error(t),t}function m(e){const t=1,r=2,s=3,n=4,o=5,i=6,a=7,c=8,d=9,u=e.getLength(),g=e.pos()+u;for(;e.pos()<g&&e.next();)switch(e.tag()){case t:return e.getString();case r:return e.getFloat();case s:return e.getDouble();case n:return e.getSInt32();case o:return e.getUInt32();case i:return e.getInt64();case a:return e.getUInt64();case c:return e.getSInt64();case d:return e.getBool();default:return e.skip(),null}return null}const h=r();export{u as PBFPointFeatureSetView};
