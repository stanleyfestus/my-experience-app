/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import e from"../../../../../../core/Evented.js";import{PooledRBush as t,BBox as i}from"../../../../../../core/libs/rbush/PooledRBush.js";import{getCentroidOptimizedGeometry as r}from"../../../../../../layers/graphics/centroid.js";import s from"../../../../../../layers/graphics/OptimizedGeometry.js";class n{constructor(e,t){this._index=e,this._view=t}getObjectId(){return this._view.getObjectId(this._index)}getAttribute(e){return this._view.getAttribute(this._index,e)}getAttributeAsTimestamp(e){return this._view.getAttributeAsTimestamp(this._index,e)}getAttributes(){return this._view.getAttributes(this._index)}getOptimizedGeometry(){return this._view.getOptimizedGeometry(this._index)}getCentroid(e){return this._view.getCentroid(this._index,e)}getBounds(){return this._view.getBounds(this._index)}getBoundingBox(){return this._view.getBoundingBox(this._index)}cloneWithGeometry(e){return new o(this._index,this._view,e)}}class o extends n{constructor(e,t,i){super(e,t),this._geometryOverride=i}getOptimizedGeometry(){return this._geometryOverride}getCentroid(e){return r(new s,this._geometryOverride,e.hasZ,e.hasM)}}class d{constructor(){this._storedTiles=new Map,this._pageBounds=new Map,this.events=new e,this.featureAdapter=a.shared}addTile(e){this._storedTiles.set(e.descriptor.id,e);for(const t of e.pages)this._addPage(t)}removeTile(e){const t=this._storedTiles,i=t.get(e);if(null!=i){t.delete(e);for(const e of i.pages)this._removePage(e)}}_addPage(e){const{featureCount:i}=e;if(0===i)return;const r=new t(9,(t=>e.getBounds(t))),s=new Array;for(let t=0;t<i;++t)s[t]=t;r.load(s),this._pageBounds.set(e,r),this.events.emit("changed")}_removePage(e){this._pageBounds.delete(e),this.events.emit("changed")}clear(){this._storedTiles.clear(),this._pageBounds.clear(),this.events.emit("changed")}forEach(e){for(const[t,i]of this._pageBounds)i.all((i=>e(new n(i,t))))}forEachInBounds(e,t){h.minX=e[0],h.minY=e[1],h.maxX=e[2],h.maxY=e[3];for(const[i,r]of this._pageBounds)r.search(h,(e=>t(new n(e,i))))}forEachBounds(e,t){for(const i of e)t(i.getBoundingBox())}getFullExtent(e){let t=1/0,i=1/0,r=-1/0,s=-1/0;for(const n of this._pageBounds.values()){const{minX:e,minY:o,maxX:d,maxY:a}=n.toJSON();t=Math.min(t,e),i=Math.min(i,o),r=Math.min(r,d),s=Math.min(s,a)}return{xmin:t,ymin:i,xmax:r,ymax:s,spatialReference:e}}}class a{getObjectId(e){return e.getObjectId()}getAttribute(e,t){return e.getAttribute(t)}getAttributeAsTimestamp(e,t){return e.getAttributeAsTimestamp(t)}getAttributes(e){return e.getAttributes()}getGeometry(e){return e.getOptimizedGeometry()}getCentroid(e,t){return e.getCentroid(t)}cloneWithGeometry(e,t){return e.cloneWithGeometry(t)}}a.shared=new a;const h=new i;export{n as FeatureHandle,d as TiledFeatureStore};
