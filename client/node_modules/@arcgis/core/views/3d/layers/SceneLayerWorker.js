/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{hasScaling as e}from"../../../core/mathUtils.js";import t from"../../../geometry/SpatialReference.js";import r from"../../../geometry/support/MeshGeoreferencedVertexSpace.js";import o from"../../../geometry/support/MeshLocalVertexSpace.js";import{b as n,n as s}from"../../../chunks/vec3.js";import{IndexType as i}from"../../../libs/i3s/enums.js";import{get as a}from"../../../libs/i3s/I3SModule.js";import{NodeIMModificationImpact as f}from"./i3s/I3SNode.js";async function c(e){g=await S();const t=[e.geometryBuffer];return{result:E(g,e,t),transferList:t}}async function l(e){g=await S();const t=[e.geometryBuffer],{geometryBuffer:r}=e,o=r.byteLength,n=g._malloc(o),s=new Uint8Array(g.HEAPU8.buffer,n,o);s.set(new Uint8Array(r));const i=g.dracoDecompressPointCloudData(n,s.byteLength);if(g._free(n),i.error.length>0)throw new Error(`i3s.wasm: ${i.error}`);const a=i.featureIds?.length>0?i.featureIds.slice():null,f=i.positions.slice();return a&&t.push(a.buffer),t.push(f.buffer),{result:{positions:f,featureIds:a},transferList:t}}async function u(e){await S(),j(e);const t={buffer:e.buffer};return{result:t,transferList:[t.buffer]}}async function m(e){await S(),w(e)}async function y(e){g=await S(),g.setLegacySchema(e.context,e.jsonSchema)}async function p(e){const{localMatrix:n,origin:s,positions:i,vertexSpace:a}=e,f=t.fromJSON(e.inSpatialReference),c=t.fromJSON(e.outSpatialReference);let l;const[{projectBuffer:u},{initializeProjection:m}]=await Promise.all([import("../../../geometry/projection/projectBuffer.js"),import("../../../geometry/projection.js")]);await m(f,c);const y=[0,0,0];if(!u(s,f,0,y,c,0))throw new Error("Failed to project");if("georeferenced"===a.type&&null==a.origin){if(l=new Float64Array(i.length),!u(i,f,0,l,c,0,l.length/3))throw new Error("Failed to project")}else{const e="georeferenced"===a.type?r.fromJSON(a):o.fromJSON(a),{projectMeshVertexPositions:t}=await import("../../../geometry/support/meshUtils/projectMeshVertexPositions.js"),s=t({vertexAttributes:{position:i},transform:n?{localMatrix:n}:void 0,vertexSpace:e,spatialReference:f},c);if(!s)throw new Error("Failed to project");l=s}const p=l.length,[d,h,b]=y;for(let t=0;t<p;t+=3)l[t]-=d,l[t+1]-=h,l[t+2]-=b;return{result:{projected:l,original:i,projectedOrigin:y},transferList:[l.buffer,i.buffer]}}async function d({normalMatrix:t,normals:r}){const o=new Float32Array(r.length);return n(o,r,t),e(t)&&s(o,o),{result:{transformed:o,original:r},transferList:[o.buffer,r.buffer]}}function h(e){L(e)}let b,g;function w(e){if(!g)return;const t=e.modifications,r=g._malloc(8*t.length),o=new Float64Array(g.HEAPU8.buffer,r,t.length);for(let n=0;n<t.length;++n)o[n]=t[n];g.setModifications(e.context,r,t.length,e.isGeodetic),g._free(r)}function E(e,t,r){const{context:o,globalTrafo:n,mbs:s,obbData:a,elevationOffset:f,geometryBuffer:c,geometryDescriptor:l,indexToVertexProjector:u,vertexToRenderProjector:m}=t,y=e._malloc(c.byteLength),p=33,d=e._malloc(p*Float64Array.BYTES_PER_ELEMENT),h=new Uint8Array(e.HEAPU8.buffer,y,c.byteLength);h.set(new Uint8Array(c));const b=new Float64Array(e.HEAPU8.buffer,d,p);I(b,[NaN,NaN,NaN]);let g=b.byteOffset+3*b.BYTES_PER_ELEMENT,w=new Float64Array(b.buffer,g);I(w,n),g+=16*b.BYTES_PER_ELEMENT,w=new Float64Array(b.buffer,g),I(w,s),g+=4*b.BYTES_PER_ELEMENT,a&&(w=new Float64Array(b.buffer,g),I(w,a));const E=l,A={isDraco:!1,isLegacy:!1,color:t.layouts.some((e=>e.some((e=>"color"===e.name)))),normal:t.needNormals&&t.layouts.some((e=>e.some((e=>"normalCompressed"===e.name)))),uv0:t.layouts.some((e=>e.some((e=>"uv0"===e.name)))),uvRegion:t.layouts.some((e=>e.some((e=>"uvRegion"===e.name)))),featureIndex:E.featureIndex},j=e.process(o,!!t.obbData,y,h.byteLength,E,A,d,f,u,m,t.normalReferenceFrame);if(e._free(d),e._free(y),j.error.length>0)throw new Error(`i3s.wasm: ${j.error}`);if(j.discarded)return null;const L=j.componentOffsets.length>0?j.componentOffsets.slice():null,x=j.featureIds.length>0?j.featureIds.slice():null,S=j.anchorIds.length>0?Array.from(j.anchorIds):null,_=j.anchors.length>0?Array.from(j.anchors):null,P=j.interleavedVertedData.slice().buffer,M=j.indicesType===i.Int16?new Uint16Array(j.indices.buffer,j.indices.byteOffset,j.indices.byteLength/2).slice():new Uint32Array(j.indices.buffer,j.indices.byteOffset,j.indices.byteLength/4).slice(),N=j.positions.slice(),U=j.positionIndicesType===i.Int16?new Uint16Array(j.positionIndices.buffer,j.positionIndices.byteOffset,j.positionIndices.byteLength/2).slice():new Uint32Array(j.positionIndices.buffer,j.positionIndices.byteOffset,j.positionIndices.byteLength/4).slice(),T={layout:t.layouts[0],interleavedVertexData:P,indices:M,hasColors:j.hasColors,hasModifications:j.hasModifications,positionData:{data:N,indices:U}};return x&&r.push(x.buffer),L&&r.push(L.buffer),r.push(P),r.push(M.buffer),r.push(N.buffer),r.push(U.buffer),{componentOffsets:L,featureIds:x,anchorIds:S,anchors:_,transformedGeometry:T,obb:j.obb,globalTrafo:n}}function A(e){return 0===e?f.Unmodified:1===e?f.PotentiallyModified:2===e?f.Culled:f.Unknown}function j(e){if(!g)return;const{context:t,buffer:r}=e,o=g._malloc(r.byteLength),n=r.byteLength/Float64Array.BYTES_PER_ELEMENT,s=new Float64Array(g.HEAPU8.buffer,o,n),i=new Float64Array(r);s.set(i),g.filterOBBs(t,o,n),i.set(s),g._free(o)}function L(e){g&&0===g.destroy(e)&&(g=null)}function I(e,t){for(let r=0;r<t.length;++r)e[r]=t[r]}async function x(){g||await S()}function S(){return g?Promise.resolve(g):(b||(b=a().then((e=>(g=e,b=null,g)))),b)}const _={transform:(e,t)=>g&&E(g,e,t),destroy:L};export{h as destroyContext,l as dracoDecompressPointCloudData,u as filterObbsForModifications,j as filterObbsForModificationsSync,x as initialize,A as interpretObbModificationResults,c as process,p as project,y as setLegacySchema,m as setModifications,w as setModificationsSync,_ as test,d as transformNormals};
