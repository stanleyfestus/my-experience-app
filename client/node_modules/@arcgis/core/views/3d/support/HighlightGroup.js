/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as o}from"../../../chunks/tslib.es6.js";import r from"../../../core/Accessor.js";import t from"../../../core/Collection.js";import has from"../../../core/has.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import{subclass as s}from"../../../core/accessorSupport/decorators/subclass.js";import n from"./HighlightOptions.js";import{defaultHighlightName as p,temporaryHighlightName as i,temporaryHighlightColor as c}from"../../support/HighlightDefaults.js";var m;let a=m=class extends r{constructor(o){super(o)}clone(){return new m({name:this.name,options:this.options.clone()})}};o([e({type:String,constructOnly:!0})],a.prototype,"name",void 0),o([e({type:n})],a.prototype,"options",void 0),a=m=o([s("esri.views.3d.support.HighlightGroup")],a);const l=t.ofType(a);function u(){return has("enable-feature:multiple-highlights")?new l([new a({name:p,options:new n}),new a({name:i,options:new n({color:c})})]):new l([new a({name:p,options:new n})])}export{a as HighlightGroup,u as makeDefaultHighlightGroups};
