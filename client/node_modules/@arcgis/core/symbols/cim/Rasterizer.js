/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{CIMSymbolHelper as e}from"./CIMSymbolHelper.js";import{rasterizeFillStyle as r,rasterizeDash1D as t}from"./rasterizingUtils.js";import a from"./Rect.js";import{getSDFInfo as s,buildSDF as n}from"./SDFHelper.js";import{normalizeDashTemplate as i,resampleHermite as o}from"./utils.js";import{rasterizedVectorMarkerMinSize as c,patternFillRasterizationScale as l}from"../../views/2d/engine/webgl/definitions.js";const h=512;class f{constructor(e){this._resourceManager=e,this._cachedRasterizationCanvas=null}dispose(){this._cachedRasterizationCanvas=null}get _canvas(){return this._cachedRasterizationCanvas||(this._cachedRasterizationCanvas=document.createElement("canvas")),this._cachedRasterizationCanvas}rasterizeJSONResource(e){switch(e.type){case"dash":{const r=i(e.dashTemplate),[a,s,n]=t(r);return{size:[s,n],image:new Uint32Array(a.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}case"fill-style":{const[t,a,s,n]=r(this._canvas,e,l);return{size:[a,s],image:new Uint32Array(t.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0,rasterizationScale:n}}case"sdf":return d(e);case"CIMHatchFill":case"CIMVectorMarker":case"CIMPictureMarker":return this._rasterizeCIMJSONResource(e)}}_rasterizeCIMJSONResource(r){switch(r.type){case"CIMHatchFill":{const t=e.fromCIMHatchFill(r,l);return this._rasterizeCIMVectorMarker(t)}case"CIMPictureMarker":{const t=e.fromCIMInsidePolygon(r);return this._rasterizeCIMVectorMarker(t)}case"CIMVectorMarker":{if("CIMMarkerPlacementInsidePolygon"===r.markerPlacement?.type){const t=e.fromCIMInsidePolygon(r);return this._rasterizeCIMVectorMarker(t)}const t=s(r);return t&&!r.avoidSDFRasterization?d(t):this._rasterizeCIMVectorMarker(r,!1,c)}}}_rasterizeCIMVectorMarker(r,t=!0,s){const n=t?a.fromExtent(r.frame):null,[i,o,c,l,h]=e.rasterize(this._canvas,r,n,this._resourceManager,!0,s);return i?{size:[o,c],image:new Uint32Array(i.buffer),sdf:!1,simplePattern:!1,anchorX:l,anchorY:h}:null}rasterizeImageResource(e,r,t,a){this._canvas.width=e,this._canvas.height=r;const s=this._canvas.getContext("2d",{willReadFrequently:!0});t instanceof ImageData?s.putImageData(t,0,0):(t.setAttribute("width",`${e}px`),t.setAttribute("height",`${r}px`),s.drawImage(t,0,0,e,r));const n=s.getImageData(0,0,e,r),i=new Uint8Array(n.data);if(a)for(const o of a)if(o&&o.oldColor&&4===o.oldColor.length&&o.newColor&&4===o.newColor.length){const[e,r,t,a]=o.oldColor,[s,n,c,l]=o.newColor;if(e===s&&r===n&&t===c&&a===l)continue;for(let o=0;o<i.length;o+=4)e===i[o]&&r===i[o+1]&&t===i[o+2]&&a===i[o+3]&&(i[o]=s,i[o+1]=n,i[o+2]=c,i[o+3]=l)}let c;for(let o=0;o<i.length;o+=4)c=i[o+3]/255,i[o]=i[o]*c,i[o+1]=i[o+1]*c,i[o+2]=i[o+2]*c;let l=i,f=e,d=r;const u=h;if(f>=u||d>=u){const t=f/d;t>1?(f=u,d=Math.round(u/t)):(d=u,f=Math.round(u*t)),l=new Uint8Array(4*f*d);const a=new Uint8ClampedArray(l.buffer);o(i,e,r,a,f,d,!1)}return{size:[f,d],image:new Uint32Array(l.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}}function d(e){if(!e)return null;const{data:r,width:t,height:a,sdfPaddingRatio:s,sdfDecodeCoeff:i}=n(e);return r?{size:[t,a],image:new Uint32Array(r.buffer),sdf:!0,simplePattern:!0,sdfPaddingRatio:s,sdfDecodeCoeff:i,anchorX:0,anchorY:0}:null}export{f as default};
