/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{packFloatRGBA as o}from"../../core/floatRGBA.js";import{nextPowerOfTwo as t}from"../../core/mathUtils.js";import{dashSdfRasterizationScale as r,dashSdfDistanceNormalization as a,dashRadius as e}from"./constants.js";const n=o=>"vertical"===o||"horizontal"===o||"cross"===o||"esriSFSCross"===o||"esriSFSVertical"===o||"esriSFSHorizontal"===o;function s(o,r,a){const e=r.style,s=t(Math.ceil(a)),i=n(e)?8*s:16*s,l=2*s;o.width=i,o.height=i;const h=o.getContext("2d");h.strokeStyle="#ffffff",h.lineWidth=s,h.beginPath(),"vertical"!==e&&"cross"!==e&&"esriSFSCross"!==e&&"esriSFSVertical"!==e||(h.moveTo(i/2,-l),h.lineTo(i/2,i+l)),"horizontal"!==e&&"cross"!==e&&"esriSFSCross"!==e&&"esriSFSHorizontal"!==e||(h.moveTo(-l,i/2),h.lineTo(i+l,i/2)),"backward-diagonal"!==e&&"diagonal-cross"!==e&&"esriSFSDiagonalCross"!==e&&"esriSFSBackwardDiagonal"!==e||(h.moveTo(-l,-l),h.lineTo(i+l,i+l),h.moveTo(i-l,-l),h.lineTo(i+l,l),h.moveTo(-l,i-l),h.lineTo(l,i+l)),"forward-diagonal"!==e&&"diagonal-cross"!==e&&"esriSFSForwardDiagonal"!==e&&"esriSFSDiagonalCross"!==e||(h.moveTo(i+l,-l),h.lineTo(-l,i+l),h.moveTo(l,-l),h.lineTo(-l,l),h.moveTo(i+l,i-l),h.lineTo(i-l,i+l)),h.stroke();const c=h.getImageData(0,0,o.width,o.height),m=new Uint8Array(c.data);let f;for(let t=0;t<m.length;t+=4)f=m[t+3]/255,m[t]=m[t]*f,m[t+1]=m[t+1]*f,m[t+2]=m[t+2]*f;return[m,o.width,o.height,s]}function i(t){t.length%2==1&&(t=[...t,...t]);const e=t.reduce(((o,t)=>o+t),0),n=Math.round(e*r),s=1,i=new Float32Array(n*s);let l=0,h=0,c=.5,m=!0;for(const o of t){for(l=h,h+=o*r;c<=h;){const o=c-.5,t=Math.min(Math.abs(c-l),Math.abs(c-h));i[o]=m?-t:t,c++}m=!m}const f=i.length,S=new Uint8Array(4*f);for(let g=0;g<f;++g){const t=i[g]/r;o(t/a*.5+.5,S,4*g)}return[S,n,s]}function l(t,r){null==t&&(t=[]);const a="Butt"===r,n="Square"===r,s=!a&&!n;t.length%2==1&&(t=[...t,...t]);const i=e,l=2*i;let h=0;for(const o of t)h+=o;const c=Math.round(h*i),m=new Float32Array(c*l),f=.5*i;let S=0,g=0,M=.5,d=!0;for(const o of t){for(S=g,g+=o*i;M<=g;){let o=.5;for(;o<l;){const t=(o-.5)*c+M-.5,r=s?(o-i)*(o-i):Math.abs(o-i);m[t]=d?a?Math.max(Math.max(S+f-M,r),Math.max(M-g+f,r)):r:s?Math.min((M-S)*(M-S)+r,(M-g)*(M-g)+r):n?Math.min(Math.max(M-S,r),Math.max(g-M,r)):Math.min(Math.max(M-S+f,r),Math.max(g+f-M,r)),o++}M++}d=!d}const T=m.length,F=new Uint8Array(4*T);for(let e=0;e<T;++e){const t=(s?Math.sqrt(m[e]):m[e])/i;o(t,F,4*e)}return[F,c,l]}export{l as rasterizeDash,i as rasterizeDash1D,s as rasterizeFillStyle};
