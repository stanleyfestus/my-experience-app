/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import e from"../Viewpoint.js";import o from"../core/Error.js";import{IdentifiableMixin as r}from"../core/Identifiable.js";import{JSONSupport as i}from"../core/JSONSupport.js";import{clone as s}from"../core/lang.js";import n from"../core/Logger.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import{cast as m}from"../core/accessorSupport/decorators/cast.js";import{reader as a}from"../core/accessorSupport/decorators/reader.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{writer as c}from"../core/accessorSupport/decorators/writer.js";import{ensureType as u}from"../core/accessorSupport/ensureType.js";import{SlideThumbnail as w}from"../webdoc/support/SlideThumbnail.js";import{timeExtent as h}from"../webdoc/support/timeProperties.js";var d;let y=d=class extends(r(i)){constructor(t){super(t),this.name=null,this.thumbnail=new w,this.timeExtent=null}castThumbnail(t){return"string"==typeof t?new w({url:t}):u(w,t)}set viewpoint(t){const{targetGeometry:e,scale:o}=t;null!=e&&"point"===e.type&&null==o&&n.getLogger(this).warn("Bookmark.viewpoint should include 'scale' when its targetGeometry is a point.",t),this._set("viewpoint",t)}readViewpoint(t,o){const{extent:r,viewpoint:i}=o;return e.fromJSON(i||{targetGeometry:r})}writeViewpoint(t,e,r,i){if(!t)return;const{targetGeometry:s}=t;if(null==s||"extent"===s.type)null!=s&&(e.extent=s.toJSON()),e[r]=t.toJSON();else{const t="Bookmark.viewpoint cannot be written to JSON when the viewpoint's targetGeometry is not an extent.";i?.messages?i.messages.push(new o("property:unsupported",t)):n.getLogger(this).error(t)}}clone(){return new d(s({name:this.name,thumbnail:this.thumbnail,timeExtent:this.timeExtent,viewpoint:this.viewpoint}))}};t([p({type:String,nonNullable:!0,json:{write:{isRequired:!0}}})],y.prototype,"name",void 0),t([p({type:w,json:{write:{overridePolicy:t=>({enabled:!(!t||!t.url)})}}})],y.prototype,"thumbnail",void 0),t([m("thumbnail")],y.prototype,"castThumbnail",null),t([p(h)],y.prototype,"timeExtent",void 0),t([p({type:e,nonNullable:!0,json:{write:!0}})],y.prototype,"viewpoint",null),t([a("viewpoint",["extent","viewpoint"])],y.prototype,"readViewpoint",null),t([c("viewpoint")],y.prototype,"writeViewpoint",null),y=d=t([l("esri.webmap.Bookmark")],y);const f=y;export{f as default};
