/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Graphic.js";import r from"../../PopupTemplate.js";import{symbolTypes as s}from"../../symbols.js";import{ClonableMixin as o}from"../../core/Clonable.js";import{JSONSupport as a}from"../../core/JSONSupport.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{writer as u}from"../../core/accessorSupport/decorators/writer.js";import d from"../../geometry/Point.js";import{getPrefixedProperties as n,setPrefixedProperties as m,toKebabImpedanceAttributes as c,fromKebabImpedanceAttributes as y}from"../route/utils.js";import{barrierTypeJsonMap as b,curbApproachJsonMap as h,fullEdgeJsonMap as j,statusJsonMap as g,sideOfEdgeJsonMap as f}from"./networkEnums.js";var S;let T=S=class extends(o(a)){constructor(t){super(t),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(t,e){return n(e.attributes,"Attr_")}writeCosts(t,e){m(t,e,"Attr_")}static fromGraphic(t){return new S({addedCost:t.attributes.AddedCost??null,barrierType:null!=t.attributes.BarrierType?b.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?c(JSON.parse(t.attributes.Costs)):null,curbApproach:null!=t.attributes.CurbApproach?h.fromJSON(t.attributes.CurbApproach):null,fullEdge:null!=t.attributes.FullEdge?j.fromJSON(t.attributes.FullEdge):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,status:null!=t.attributes.Status?g.fromJSON(t.attributes.Status):null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?b.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(y(this.costs)):null,CurbApproach:null!=this.curbApproach?h.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?j.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?g.toJSON(this.status):null};return new e({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};T.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger"},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Status",alias:"Status",type:"esriFieldTypeInteger"}],t([p()],T.prototype,"addedCost",void 0),t([p({type:b.apiValues,json:{name:"attributes.BarrierType",read:{reader:b.read},write:{writer:b.write}}})],T.prototype,"barrierType",void 0),t([p()],T.prototype,"costs",void 0),t([i("costs",["attributes"])],T.prototype,"readCosts",null),t([u("costs")],T.prototype,"writeCosts",null),t([p({constructOnly:!0,type:h.apiValues,json:{read:{source:"attributes.CurbApproach",reader:h.read}}})],T.prototype,"curbApproach",void 0),t([p({type:j.apiValues,json:{name:"attributes.FullEdge",read:{reader:j.read},write:{writer:j.write}}})],T.prototype,"fullEdge",void 0),t([p({type:d,json:{write:!0}})],T.prototype,"geometry",void 0),t([p({json:{name:"attributes.Name"}})],T.prototype,"name",void 0),t([p({json:{name:"attributes.ObjectID"}})],T.prototype,"objectId",void 0),t([p({type:r})],T.prototype,"popupTemplate",void 0),t([p({type:f.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:f.read}}})],T.prototype,"sideOfEdge",void 0),t([p({json:{read:{source:"attributes.SourceID"}}})],T.prototype,"sourceId",void 0),t([p({json:{read:{source:"attributes.SourceOID"}}})],T.prototype,"sourceOid",void 0),t([p({type:g.apiValues,json:{read:{source:"attributes.Status",reader:g.read}}})],T.prototype,"status",void 0),t([p({types:s})],T.prototype,"symbol",void 0),t([p({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),T=S=t([l("esri.rest.support.PointBarrier")],T);const C=T;export{C as default};
