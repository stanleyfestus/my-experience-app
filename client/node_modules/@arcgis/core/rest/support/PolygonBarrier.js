/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../Graphic.js";import r from"../../PopupTemplate.js";import{symbolTypes as o}from"../../symbols.js";import{ClonableMixin as s}from"../../core/Clonable.js";import{JSONSupport as p}from"../../core/JSONSupport.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{writer as m}from"../../core/accessorSupport/decorators/writer.js";import c from"../../geometry/Polygon.js";import{getPrefixedProperties as u,setPrefixedProperties as n,toKebabImpedanceAttributes as y,fromKebabImpedanceAttributes as b}from"../route/utils.js";import{barrierTypeJsonMap as d}from"./networkEnums.js";var j;let h=j=class extends(s(p)){constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(t,e){return u(e.attributes,"Attr_")}writeCosts(t,e){n(t,e,"Attr_")}static fromGraphic(t){return new j({barrierType:null!=t.attributes.BarrierType?d.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?y(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:t.attributes.ScaleFactor??null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,BarrierType:null!=this.barrierType?d.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(b(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new e({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};h.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],t([a({type:d.apiValues,json:{name:"attributes.BarrierType",read:{reader:d.read},write:{writer:d.write}}})],h.prototype,"barrierType",void 0),t([a()],h.prototype,"costs",void 0),t([i("costs",["attributes"])],h.prototype,"readCosts",null),t([m("costs")],h.prototype,"writeCosts",null),t([a({type:c,json:{write:!0}})],h.prototype,"geometry",void 0),t([a({json:{name:"attributes.Name"}})],h.prototype,"name",void 0),t([a({json:{name:"attributes.ObjectID"}})],h.prototype,"objectId",void 0),t([a({type:r})],h.prototype,"popupTemplate",void 0),t([a()],h.prototype,"scaleFactor",void 0),t([a({types:o})],h.prototype,"symbol",void 0),t([a({readOnly:!0,json:{read:!1}})],h.prototype,"type",void 0),h=j=t([l("esri.rest.support.PolygonBarrier")],h);const T=h;export{T as default};
