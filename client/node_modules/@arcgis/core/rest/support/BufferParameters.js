/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{geometryTypes as t}from"../../geometry.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{subclass as s}from"../../core/accessorSupport/decorators/subclass.js";import i from"../../geometry/Polygon.js";import p from"../../geometry/SpatialReference.js";import{getJsonType as n}from"../../geometry/support/jsonUtils.js";import{srToRESTValue as m}from"../../geometry/support/spatialReferenceUtils.js";import{geometryOperationLengthUnitKebabDict as a}from"./geometryOperationLengthUnit.js";let u=class extends o{constructor(e){super(e),this.bufferSpatialReference=null,this.distances=null,this.geodesic=!1,this.geometries=null,this.outSpatialReference=null,this.unionResults=!1,this.unit=null}toJSON(){const e={unit:a.toJSON(this.unit),unionResults:this.unionResults,geodesic:this.geodesic},t=this.distances,o=this.outSpatialReference,r=this.bufferSpatialReference,s=this.geometries;if(s&&s.length>0){const t=s.map((e=>(e="extent"===e.type?i.fromExtent(e):e).toJSON())),o="extent"===s[0].type?"esriGeometryPolygon":n(s[0]);e.geometries=JSON.stringify({geometryType:o,geometries:t}),e.inSR=m(s[0].spatialReference)}return t&&(e.distances=t.join(",")),o&&(e.outSR=m(o)),r&&(e.bufferSR=m(r)),e}};e([r({type:p,json:{write:!0}})],u.prototype,"bufferSpatialReference",void 0),e([r({type:[Number],json:{write:!0}})],u.prototype,"distances",void 0),e([r({type:Boolean,json:{write:!0}})],u.prototype,"geodesic",void 0),e([r({types:[t],json:{write:!0}})],u.prototype,"geometries",void 0),e([r({type:p,json:{write:!0}})],u.prototype,"outSpatialReference",void 0),e([r({type:Boolean,json:{write:!0}})],u.prototype,"unionResults",void 0),e([r({type:String,json:{write:!0}})],u.prototype,"unit",void 0),u=e([s("esri.rest.support.BufferParameters")],u);const c=u;export{c as default};
