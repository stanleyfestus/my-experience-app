/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Graphic.js";import r from"../../PopupTemplate.js";import{symbolTypes as o}from"../../symbols.js";import{ClonableMixin as s}from"../../core/Clonable.js";import{JSONSupport as p}from"../../core/JSONSupport.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/has.js";import"../../core/Logger.js";import"../../core/RandomLCG.js";import{reader as i}from"../../core/accessorSupport/decorators/reader.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import m from"../../geometry/Polyline.js";import{getPrefixedProperties as c,toKebabImpedanceAttributes as u,fromKebabImpedanceAttributes as n}from"../route/utils.js";import{barrierTypeJsonMap as y}from"./networkEnums.js";var b;let d=b=class extends(s(p)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,t){return c(t.attributes,"Attr_")}static fromGraphic(e){return new b({barrierType:null!=e.attributes.BarrierType?y.fromJSON(e.attributes.BarrierType):null,costs:null!=e.attributes.Costs?u(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:this.objectId,BarrierType:null!=this.barrierType?y.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify(n(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new t({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};d.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger"},{name:"Costs",alias:"Costs",type:"esriFieldTypeString"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble"}],e([a({type:y.apiValues,json:{read:{source:"attributes.BarrierType",reader:y.read}}})],d.prototype,"barrierType",void 0),e([a()],d.prototype,"costs",void 0),e([i("costs",["attributes"])],d.prototype,"readCosts",null),e([a({type:m,json:{write:!0}})],d.prototype,"geometry",void 0),e([a({json:{name:"attributes.Name"}})],d.prototype,"name",void 0),e([a({json:{name:"attributes.ObjectID"}})],d.prototype,"objectId",void 0),e([a({type:r})],d.prototype,"popupTemplate",void 0),e([a()],d.prototype,"scaleFactor",void 0),e([a({types:o})],d.prototype,"symbol",void 0),e([a({readOnly:!0,json:{read:!1}})],d.prototype,"type",void 0),d=b=e([l("esri.rest.support.PolylineBarrier")],d);const j=d;export{j as default};
