/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{geometryTypes as t}from"../../geometry.js";import{ClonableMixin as o}from"../../core/Clonable.js";import{JSONMap as r}from"../../core/jsonMap.js";import{JSONSupport as i}from"../../core/JSONSupport.js";import s from"../../core/Logger.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import{ensureType as n}from"../../core/accessorSupport/ensureType.js";import"../../core/RandomLCG.js";import"../../core/has.js";import{enumeration as p}from"../../core/accessorSupport/decorators/enumeration.js";import{subclass as m}from"../../core/accessorSupport/decorators/subclass.js";import{fromJSON as l}from"../../geometry/support/jsonUtils.js";import{unitsKebabDict as u}from"../../layers/graphics/data/queryUtils.js";import d from"./AutoIntervalBinParameters.js";import c from"./BinParametersBase.js";import y from"./DateBinParameters.js";import j from"./FixedBoundariesBinParameters.js";import f from"./FixedIntervalBinParameters.js";import h from"./QuantizationParameters.js";import{spatialRelKebabDict as v}from"./spatialRelationships.js";import w from"./StatisticDefinition.js";import{isTimeZoneValid as S}from"../../time/timeZoneUtils.js";import g from"../../geometry/SpatialReference.js";const b=new r({asc:"ascending",desc:"descending"}),B={base:c,key:"type",typeMap:{"auto-interval":d,date:y,"fixed-boundaries":j,"fixed-interval":f}};let P=class extends(o(i)){constructor(e){super(e),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.quantizationParameters=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(e){this._set("outTimeZone",e),e&&!S(e)&&s.getLogger(this).warn("#outTimeZone",`the parsed value '${e}' may not be a valid IANA time zone`)}};e([a({types:B,json:{name:"bin",write:!0}})],P.prototype,"binParameters",void 0),e([p(b)],P.prototype,"binOrder",void 0),e([a({type:Boolean,json:{write:!0}})],P.prototype,"cacheHint",void 0),e([a({json:{write:!0}})],P.prototype,"datumTransformation",void 0),e([a({type:g,json:{name:"defaultSR",write:!0}})],P.prototype,"defaultSpatialReference",void 0),e([a({type:Number,json:{write:{overridePolicy:e=>({enabled:e>0})}}})],P.prototype,"distance",void 0),e([a({types:t,json:{read:l,write:!0}})],P.prototype,"geometry",void 0),e([a({type:String,json:{write:!0}})],P.prototype,"lowerBoundaryAlias",void 0),e([a({type:g,json:{name:"outSR",write:!0}})],P.prototype,"outSpatialReference",void 0),e([a({type:[w],json:{write:{enabled:!0,overridePolicy(){return{enabled:null!=this.outStatistics&&this.outStatistics.length>0}}}}})],P.prototype,"outStatistics",void 0),e([a({value:null,json:{name:"outTimeReference",read:{reader:e=>e.ianaTimeZone},write:{writer:(e,t,o)=>{e&&(t[o]={ianaTimeZone:e})}}}})],P.prototype,"outTimeZone",null),e([a({type:h,json:{write:!0}})],P.prototype,"quantizationParameters",void 0),e([a({type:Boolean,json:{write:!0}})],P.prototype,"returnDistinctValues",void 0),e([p(v,{name:"spatialRel"})],P.prototype,"spatialRelationship",void 0),e([a({type:String,json:{write:!0}})],P.prototype,"upperBoundaryAlias",void 0),e([a({type:String,json:{read:u.read,write:{writer:u.write,overridePolicy(e){return{enabled:null!=e&&null!=this.distance&&this.distance>0}}}}})],P.prototype,"units",void 0),e([a({type:String,json:{write:!0}})],P.prototype,"where",void 0),P=e([m("esri.rest.support.BinsQuery")],P);const R=P;P.from=n(P);export{R as default};
