/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{createUniqueColors as e}from"../../core/colorUtils.js";import i from"../../core/Error.js";import{fetchMessageBundle as a}from"../../intl/messages.js";import r from"../../renderers/support/AuthoringInfo.js";import n from"../../renderers/support/AuthoringInfoVisualVariable.js";import{round as s}from"../../renderers/support/numberUtils.js";import l from"../../renderers/visualVariables/OpacityVariable.js";import o from"../../renderers/visualVariables/support/OpacityStop.js";import t from"../../renderers/visualVariables/support/VisualVariableLegendOptions.js";import p from"../heuristics/outline.js";import{createVisualVariables as m}from"./size.js";import{createRenderer as d}from"./type.js";import{verifyBasicFieldValidity as u,getBasemapInfo as c,errorCallback as y,createSymbol as f,getSymbolOutlineFromScheme as b,getSummaryStatistics as g}from"./support/utils.js";import h from"../statistics/predominantCategories.js";import{getPredominanceExpressions as v}from"../statistics/support/predominanceUtils.js";import{verifyBinningParams as w}from"../support/binningUtils.js";import{binningCapableLayerTypes as V,featureCapableLayerTypes as z,createLayerAdapter as T,getLayerTypeLabels as E}from"../support/adapters/support/layerUtils.js";import{cloneScheme as S,getSchemes as x}from"../symbology/predominance.js";async function I(e){if(!(e?.layer&&e.view&&e.fields?.length))throw new i("predominance-renderer:missing-parameters","'layer', 'view' and 'fields' parameters are required");if(e.fields.length<2)throw new i("predominance-renderer:invalid-parameters","Minimum 2 fields are required");if(e.fields.length>10)throw new i("predominance-renderer:invalid-parameters","Maximum 10 fields are supported");e.forBinning&&w(e,"predominance-renderer");const a={...e,layer:e.layer,fields:e.fields};a.symbolType=a.symbolType||"2d",a.defaultSymbolEnabled??=!0,a.includeOpacityVariable=e.includeOpacityVariable||!1,a.includeSizeVariable=e.includeSizeVariable||!1,a.sortBy??="count";const r=e.forBinning?V:z,n=T(a.layer,r,e.forBinning);if(!n)throw new i("predominance-renderer:invalid-parameters","'layer' must be one of these types: "+E(z).join(", "));a.layer=n;const s=null!=a.signal?{signal:a.signal}:null;await n.load(s);const l=n.geometryType,o=a.symbolType.includes("3d");if(a.outlineOptimizationEnabled="polygon"===l&&a.outlineOptimizationEnabled,a.includeSizeVariable||(a.sizeOptimizationEnabled=("point"===l||"multipoint"===l||"polyline"===l)&&a.sizeOptimizationEnabled),"mesh"===l)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none",a.sizeOptimizationEnabled=!1;else{if(o&&("polyline"===l||"polygon"===l))throw new i("predominance-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new i("predominance-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const t=a.fields.map((e=>e.name)),p=u(n,t,"predominance-renderer:invalid-parameters");if(p)throw p;return a}async function O(e){let i=e.predominanceScheme,a=null,r=null;const n=await c(e.basemap,e.view);if(a=null!=n.basemapId?n.basemapId:null,r=null!=n.basemapTheme?n.basemapTheme:null,i)return{scheme:S(i),basemapId:a,basemapTheme:r};const s=x({basemapTheme:r,geometryType:e.geometryType,numColors:e.numColors,theme:e.theme,worldScale:e.worldScale,view:e.view});return s&&(i=s.primaryScheme,a=s.basemapId,r=s.basemapTheme),{scheme:i,basemapId:a,basemapTheme:r}}async function M(i,n,s,l){const o=await a("esri/smartMapping/t9n/smartMapping"),t=i.layer,{view:m,filter:u,signal:c}=i,[g,v]=await Promise.all([h({layer:t,fields:l,view:m,filter:u,signal:c}),i.outlineOptimizationEnabled?p({layer:t,view:m,filter:u,signal:c}).catch(y):null]);let w=g;g?.predominantCategoryInfos||(w={predominantCategoryInfos:l.map((e=>({value:e,count:0})))});const V=v?.opacity,z=await d({layer:t,basemap:i.basemap,valueExpression:n.valueExpression,valueExpressionTitle:o.predominantCategory,numTypes:-1,defaultSymbolEnabled:i.defaultSymbolEnabled,sortBy:i.sortBy,typeScheme:s,statistics:{uniqueValueInfos:w.predominantCategoryInfos},legendOptions:i.legendOptions,outlineOptimizationEnabled:!1,sizeOptimizationEnabled:(!i.includeSizeVariable||!i.sizeOptimizationEnabled)&&i.sizeOptimizationEnabled,symbolType:i.symbolType,colorMixMode:i.colorMixMode,edgesType:i.edgesType,filter:i.filter,view:i.view,signal:i.signal}),{renderer:T,basemapId:E,basemapTheme:S,uniqueValueInfos:x,excludedUniqueValueInfos:I}=z,O=T.uniqueValueInfos??[],M={};for(const e of i.fields){const i=t.getField(e.name);M[i.name]=e.label||i&&i.alias||e.name}if(O.forEach(((e,i)=>{const a=M[e.value];e.label=a,x[i].label=a})),i.includeSizeVariable){let a=t.geometryType,r=null;if("polygon"===a){const e=s.sizeScheme,n=e.background;T.backgroundFillSymbol=f(a,{type:i.symbolType,color:n.color,outline:b(n,a,V)}),r=e.marker.size,a="point"}else if("polyline"===a){r=s.width}else{r=s.size}const n=e(s.colors,O.length);O.forEach(((e,l)=>{const o=f(a,{type:i.symbolType,color:n[l],size:r,outline:b(s,a,V),meshInfo:{colorMixMode:i.colorMixMode,edgesType:i.edgesType}});e.symbol=o,x[l].symbol=o.clone()}))}return v?.visualVariables.length&&(T.visualVariables=v.visualVariables.map((e=>e.clone()))),T.authoringInfo=new r({type:"predominance",fields:[...l]}),{renderer:T,predominantCategoryInfos:x,excludedCategoryInfos:I,predominanceScheme:s,basemapId:E,basemapTheme:S}}async function j(e,i,r){const n=await a("esri/smartMapping/t9n/smartMapping");return m({layer:e.layer,basemap:e.basemap,valueExpression:i.valueExpression,sqlExpression:i.statisticsQuery.sqlExpression,sqlWhere:i.statisticsQuery.sqlWhere,sizeScheme:r,sizeOptimizationEnabled:e.sizeOptimizationEnabled,worldScale:!!e.symbolType?.includes("3d-volumetric"),legendOptions:{title:n.sumOfCategories},filter:e.filter,view:e.view,signal:e.signal})}async function q(e,i){const p=await a("esri/smartMapping/t9n/smartMapping"),m=await g({layer:e.layer,valueExpression:i.valueExpression,sqlExpression:i.statisticsQuery.sqlExpression,sqlWhere:i.statisticsQuery.sqlWhere,filter:e.filter,view:e.view,signal:e.signal}),{avg:d,stddev:u}=m,c=null==d||null==u,y=1/e.fields.length*100;let f=c?100:d+1.285*u;f>100&&(f=100);const b=s([y,f],{strictBounds:!0}),h=new l({valueExpression:i.valueExpression,stops:[new o({value:b[0],opacity:.15}),new o({value:b[1],opacity:1})],legendOptions:new t({title:p.strengthOfPredominance})}),v=new n({type:"opacity",minSliderValue:m.min,maxSliderValue:m.max});return{visualVariable:h,statistics:m,defaultValuesUsed:c,authoringInfo:new r({visualVariables:[v]})}}async function C(e){const i=await I(e),a=i.layer,n=(await O({basemap:i.basemap,geometryType:a.geometryType,numColors:i.fields.length,predominanceScheme:i.predominanceScheme,worldScale:!!i.symbolType?.includes("3d-volumetric"),view:i.view})).scheme,s=i.fields.map((e=>e.name)),l=v(a,s),o=M(i,l.predominantCategory,n,s),t=i.includeSizeVariable?j(i,l.size,n.sizeScheme):null,p=i.includeOpacityVariable?q(i,l.opacity):null,[m,d,u]=await Promise.all([o,t,p]),c=[],y=[];if(d&&(Array.prototype.push.apply(c,d.visualVariables.map((e=>e.clone()))),delete d.sizeScheme,m.size=d,Array.prototype.push.apply(y,d.authoringInfo.visualVariables.map((e=>e.clone())))),u&&(c.push(u.visualVariable.clone()),m.opacity=u,Array.prototype.push.apply(y,u.authoringInfo.visualVariables.map((e=>e.clone())))),c.length){const e=m.renderer.visualVariables||[];Array.prototype.push.apply(e,c),m.renderer.visualVariables=e,m.renderer.authoringInfo??=new r,m.renderer.authoringInfo.visualVariables=y}return m}export{C as createRenderer};
