/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{ScreenSpacePass as e}from"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js";import{ReadDepth as r}from"../views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js";import{RgbaFloatEncoding as a}from"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js";import{Float2PassUniform as o}from"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js";import{FloatPassUniform as i}from"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js";import{NoParameters as n,glsl as s}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as t}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{Texture2DPassUniform as d}from"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js";import{BlitMode as l}from"../views/3d/webgl-engine/shaders/CompositingTechniqueConfiguration.js";class m extends n{constructor(){super(...arguments),this.opacity=1}}function g(n){const m=new t;m.include(e),m.fragment.uniforms.add(new d("tex",(e=>e.texture))),n.hasOpacityFactor&&m.fragment.uniforms.add(new i("opacity",(e=>e.opacity)));const g=n.blitMode===l.Depth;return g&&(m.fragment.uniforms.add(new o("nearFar",((e,r)=>r.camera.nearFar))),m.fragment.include(r),m.fragment.include(a)),m.fragment.main.add(s`
    ${g?s`
          float normalizedLinearDepth = (-linearDepthFromTexture(tex, uv) - nearFar[0]) / (nearFar[1] - nearFar[0]);
          fragColor = float2rgba(normalizedLinearDepth);`:s`
          fragColor = texture(tex, uv) ${n.hasOpacityFactor?"* opacity":""};`}`),m}const c=Object.freeze(Object.defineProperty({__proto__:null,CompositingPassParameters:m,build:g},Symbol.toStringTag,{value:"Module"}));export{m as C,c as a,g as b};
