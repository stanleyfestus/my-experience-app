/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{addProjViewLocalOrigin as e}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{FloatPassUniform as o}from"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js";import{glsl as r}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as i}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{VertexAttribute as a}from"../views/3d/webgl-engine/lib/VertexAttribute.js";function t(t){const s=new i,{vertex:d,fragment:u,attributes:n,varyings:l}=s;e(d,t);const{isAttributeDriven:c,usesHalfFloat:f}=t;return n.add(a.POSITION,"vec3"),n.add(a.UV0,"vec2"),c&&(n.add(a.FEATUREATTRIBUTE,"float"),l.add("attributeValue","float")),f&&u.constants.add("compressionFactor","float",.25),l.add("unitCirclePos","vec2"),d.uniforms.add(new o("radius",(({resolutionForScale:e,searchRadius:o},{camera:r,screenToWorldRatio:i,overlayStretch:a})=>2*o*(0===e?1:e/i)*r.pixelRatio/r.fullViewport[2]/a))),d.main.add(r`
    unitCirclePos = uv0;

    vec4 posProj = proj * (view * vec4(${a.POSITION}, 1.0));
    vec4 quadOffset = vec4(unitCirclePos * radius, 0.0, 0.0);

    ${c?r`attributeValue = ${a.FEATUREATTRIBUTE};`:""}
    gl_Position = posProj + quadOffset;
  `),u.main.add(r`
    float radiusRatioSquared = dot(unitCirclePos, unitCirclePos);
    if (radiusRatioSquared > 1.0) {
      fragColor = vec4(0.0);
    }
    else {
      float oneMinusRadiusRatioSquared = 1.0 - radiusRatioSquared;
      float density = oneMinusRadiusRatioSquared * oneMinusRadiusRatioSquared ${c?r` * attributeValue`:""} ${f?r` * compressionFactor`:""};
      fragColor = vec4(density);
    }
  `),s}const s=Object.freeze(Object.defineProperty({__proto__:null,build:t},Symbol.toStringTag,{value:"Module"}));export{s as H,t as b};
