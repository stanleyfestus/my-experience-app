/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{SliceDraw as e}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{terrainDepthTest as r}from"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js";import{ColorConversion as o}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{addProjViewLocalOrigin as i}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{Float2PassUniform as s}from"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js";import{Float4PassUniform as t}from"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js";import{glsl as a}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as d}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{VertexAttribute as l}from"../views/3d/webgl-engine/lib/VertexAttribute.js";import{outputColorHighlightOID as n}from"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js";function c(c){const v=new d,{vertex:g,fragment:u,varyings:m}=v;return v.include(e,c),v.include(r,c),v.include(n,c),i(g,c),v.attributes.add(l.POSITION,"vec3"),v.attributes.add(l.UV0,"vec2"),m.add("vUV","vec2"),m.add("vpos","vec3"),c.terrainDepthTest&&v.varyings.add("depth","float"),g.main.add(a`
      vUV = uv0;
      vpos = position;
      ${c.terrainDepthTest?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);`),u.uniforms.add(new s("size",(e=>e.size))),u.uniforms.add(new t("color1",(e=>e.color1))),u.uniforms.add(new t("color2",(e=>e.color2))),u.include(o),u.main.add(a`
      ${c.terrainDepthTest?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      outputColorHighlightOID(fragColor, vpos);`),v}const v=Object.freeze(Object.defineProperty({__proto__:null,build:c},Symbol.toStringTag,{value:"Module"}));export{v as C,c as b};
