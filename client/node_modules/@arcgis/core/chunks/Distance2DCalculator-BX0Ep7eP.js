/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{b as e,c as t}from"./tslib.es6.js";import{G as n,v as i}from"./Geometry.js";import{q as r,r as s,P as o,t as m,E as a,S as u,a as c}from"./QuadraticBezier.js";import{P as h,s as l,a as g,i as y,m as _,b as D}from"./Transformation2D.js";function p(){return{outPoint:new h,index:-1,t:Number.NaN}}function v(e,t,n){return{outPoint:e.clone(),index:t,t:n}}function N(e,t,n,i){e.outPoint.assign(t),e.index=n,e.t=i}function f(e,t){e.outPoint.assign(t.outPoint),e.index=t.index,e.t=t.t}function P(e,t,n,i){e.index=n,e.t=i,t.queryCoord2D(e.t,e.outPoint)}function I(e,t){const n=p();f(n,e),f(e,t),f(t,n)}function d(e,t,i,s,o,m){if(e.getGeometryType()===n.enumPolygon){for(;s.nextPath();)if(s.hasNextSegment()){const t=s.nextSegment();if(0!==r(e,t.getEndXY(),0))return N(o,t.getEndXY(),-1,Number.NaN),N(m,t.getEndXY(),-1,Number.NaN),!0}s.resetToFirstPath()}if(t.getGeometryType()===n.enumPolygon){for(;i.nextPath();)if(i.hasNextSegment()){const e=i.nextSegment();if(0!==r(t,e.getEndXY(),0))return N(o,e.getEndXY(),-1,Number.NaN),N(m,e.getEndXY(),-1,Number.NaN),!0}i.resetToFirstPath()}return!1}function q(e){const t=e.getPathCount(),n=new Array(e.getSegmentCount());let i=0;for(let r=0;r<t;++r){const t=i+e.getSegmentCountPath(r);for(let s=i,o=e.getPathStart(r);s<t;++s,++o)n[s]=o;i=t}return s(e.getPointCount(),n),n}function M(e,t){return!!Number.isNaN(t)||e<=t}function x(e){const t=new c;return t.addEnvelope(e,!1),t}class E{constructor(e,t){if(this.m_env2DgeometryA=null,this.m_env2DgeometryB=null,this.m_progressCounter=0,this.m_progressTracker=t,this.m_maxSqrDistance=e*e,this.m_maxDistance=e,this.m_bIsNearCalc=!1,Number.isNaN(this.m_maxDistance)?this.m_maxDistance=Number.POSITIVE_INFINITY:this.m_maxDistance=e,this.m_maxSqrDistance=this.m_maxDistance*this.m_maxDistance,Number.isFinite(this.m_maxSqrDistance)){let e=Math.sqrt(this.m_maxSqrDistance);for(;e<this.m_maxDistance;)this.m_maxSqrDistance*=1+Number.EPSILON,e=Math.sqrt(this.m_maxSqrDistance)}}calculate(e,t,n,i){if(e.getGeometryType()!==o.type||t.getGeometryType()!==o.type){this.m_env2DgeometryA=new m,this.m_env2DgeometryB=new m,e.queryEnvelope(this.m_env2DgeometryA),t.queryEnvelope(this.m_env2DgeometryB);if(!M(this.m_env2DgeometryA.distanceFromEnvelope(this.m_env2DgeometryB),this.m_maxDistance))return Number.POSITIVE_INFINITY}const r=v(new h,D(),Number.NaN),s=v(new h,D(),Number.NaN),a=this._ExecuteBruteForce(e,t,r,s);return M(a,this.m_maxDistance)?(null!==n&&f(n,r),null!==i&&f(i,s),a):Number.POSITIVE_INFINITY}isNear(e,t){if(this.m_bIsNearCalc=!0,e.isEmpty()||t.isEmpty())return!1;if(e===t)return!0;let n=!0;if(e.getGeometryType()!==o.type&&e.getGeometryType()!==a.type||t.getGeometryType()!==o.type&&t.getGeometryType()!==a.type||(n=!1),n){if(this.m_env2DgeometryA=new m,this.m_env2DgeometryB=new m,e.queryEnvelope(this.m_env2DgeometryA),t.queryEnvelope(this.m_env2DgeometryB),!(this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)>this.m_maxSqrDistance))return!0;if(this.m_env2DgeometryA.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>this.m_maxSqrDistance)return!1}const i=v(new h,D(),Number.NaN),r=v(new h,D(),Number.NaN);return this._ExecuteBruteForce(e,t,i,r)<=this.m_maxDistance}progress_(e=!1){}_ExecuteBruteForce(e,t,i,r){switch(e.getGeometryType()){case n.enumPoint:return this.distancePointGeometry(e,t,i,r);case n.enumMultiPoint:return this.distanceMultipointGeometry(e,t,i,r);case n.enumEnvelope:return this.distanceEnvelopeGeometry(e,t,i,r);case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathGeometry(e,t,i,r);default:return Number.NaN}}distancePointGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:return this.distancePointPoint(e,t,i,r);case n.enumMultiPoint:return this.distancePointMultipoint(e,t,i,r);case n.enumPolyline:case n.enumPolygon:return this.distancePointMultipath(e,t,i,r);case n.enumEnvelope:return this.distancePointEnvelope(e,t,i,r);default:return Number.NaN}}distancePointPoint(e,t,n,i){const r=e.getXY(),s=t.getXY();return N(n,r,0,0),N(i,s,0,0),Math.sqrt(h.sqrDistance(r,s))}distancePointMultipoint(e,t,n,i){const r=e.getXY();let s=this.m_maxSqrDistance,o=s,m=!1;const a=t.getPointCount(),u=new h;for(let c=0;c<a;++c)if(t.queryXY(c,u),o=h.sqrDistance(r,u),this.m_bIsNearCalc){if(o<=s)return 0}else if(!(o>s)&&(!m&&o===s||o<s)&&(s=o,N(n,r,0,0),N(i,u,c,0),m=!0,0===s))return 0;return m?Math.sqrt(s):Number.POSITIVE_INFINITY}distancePointMultipath(e,t,i,s){const o=!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB),a=e.getXY();if(!o&&t.getGeometryType()===n.enumPolygon&&0!==r(t,a,0))return N(i,a,0,0),N(s,a,-1,Number.NaN),0;t.getImpl().getAccelerators();let u=this.m_maxSqrDistance,c=u,l=-1;const g=new m,y=t.querySegmentIterator();let _=!1;for(;y.nextPath();)for(;y.hasNextSegment();){const e=y.nextSegment();e.queryEnvelope(g);const t=g.sqrDistance(a);if(t>u)continue;if(!this.m_bIsNearCalc&&_&&t===u)continue;l=e.getClosestCoordinate(a,!1);const n=e.getCoord2D(l);if(c=h.sqrDistance(a,n),this.m_bIsNearCalc){if(c<=u)return 0}else if(!(c>u)&&(!_||c<u)&&(u=c,N(i,a,0,0),N(s,n,y.getStartPointIndex(),l),_=!0,0===u))return 0}return _?Math.sqrt(u):Number.POSITIVE_INFINITY}distancePointEnvelope(e,t,n,i){const r=e.getXY();N(n,r,0,0),N(i,r,-1,Number.NaN);const s=t.asEnvelope2D();return!s.contains(r)?Math.sqrt(s.sqrDistance(r,i.outPoint)):0}distanceMultipointGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:{this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distancePointMultipoint(t,e,r,i);return this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumMultiPoint:return this.distanceMultipointMultipoint(e,t,i,r,1,1);case n.enumPolyline:case n.enumPolygon:return this.distanceMultipointMultipath(e,t,i,r);case n.enumEnvelope:return this.distanceMultipointMultipath(e,x(t),i,r);default:return Number.NaN}}distanceMultipointMultipoint(n,i,r,s,o,m){const a={stack:[],error:void 0,hasError:!1};try{if(this.m_bIsNearCalc&&1===o&&1===m){const e=Math.trunc(g(Math.sqrt(n.getPointCount())+1,1,y())),t=Math.trunc(g(Math.sqrt(i.getPointCount())+1,1,y()));if((e>=4||t>=4)&&this.distanceMultipointMultipoint(n,i,r,s,e,t)<=this.m_maxSqrDistance)return 0}let t=this.m_maxSqrDistance;const u=[n],c=[i],D=this.swapGeometriesIfBGtA(u,c);D&&(this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),m=l(o,o=m),I(r,s)),e(a,_((()=>{I(r,s),this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)}),!D),!1);const p=u[0].getImpl(),v=c[0].getImpl(),f=p.getPointCount(),P=v.getPointCount(),d=P>1;let q=!1;const M=new h,x=new h;for(let e=0;e<f;e+=o){if(p.queryXY(e,M),d){const e=this.m_env2DgeometryB.sqrDistance(M);if(this.m_bIsNearCalc){if(e>t)continue;if(this.m_env2DgeometryB.sqrMaxMinDistance(M)<=t)return 0}else if(e>=t)continue}for(let n=0;n<P;n+=m){v.queryXY(n,x);const i=h.sqrDistance(M,x);if(this.m_bIsNearCalc){if(i<=t)return 0}else if(!(i>t||q&&i===t)&&(!q||i<t)&&(N(r,M,e,0),N(s,x,n,0),q=!0,t=i,0===t))return q?Math.sqrt(t):Number.POSITIVE_INFINITY}}return q?Math.sqrt(t):Number.POSITIVE_INFINITY}catch(u){a.error=u,a.hasError=!0}finally{t(a)}}distanceMultipointMultipath(e,t,i,s){let o=!!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)&&t.getGeometryType()===n.enumPolygon;const a=t.querySegmentIterator();a.stripAttributes();const u=new m,c=new h;let l=this.m_maxSqrDistance;const g=e.getImpl(),y=g.getPointCount(),_=y>1;let D=!1;for(;a.nextPath();)for(;a.hasNextSegment();){const e=a.nextSegment();if(e.queryLooseEnvelope(u),_){const e=u.sqrDistanceEnvelope(this.m_env2DgeometryA,null,null);if(this.m_bIsNearCalc){if(e>l)continue}else if(e>l||D&&e===l)continue}for(let n=0;n<y;n++){if(g.queryXY(n,c),o&&0!==r(t,c,0))return N(i,c,-1,Number.NaN),N(s,c,n,0),0;{const e=u.sqrDistance(c);if(this.m_bIsNearCalc){if(e>l)continue}else if(e>l)continue}const m=e.getClosestCoordinate(c,!1),h=e.getCoord2D(m);c.subThis(h);const y=c.sqrLength();if(this.m_bIsNearCalc){if(y<=l)return 0}else if(!(y>l)&&(!D||y<l)&&(l=y,N(i,g.getXY(n),n,0),N(s,h,a.getStartPointIndex(),m),D=!0,0===l))return 0}o=!1}return D?Math.sqrt(l):Number.POSITIVE_INFINITY}distanceEnvelopeGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:return this.distancePointEnvelope(t,e,r,i);case n.enumMultiPoint:{this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distanceMultipointMultipath(t,x(e),r,i);return this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathMultipath(x(e),t,i,r);case n.enumEnvelope:return this.distanceEnvelopeEnvelope(e,t,i,r);default:return Number.NaN}}distanceEnvelopeEnvelope(e,t,n,i){n.t=Number.NaN,n.index=-1,i.t=Number.NaN,i.index=-1;const r=e.asEnvelope2D(),s=t.asEnvelope2D();return Math.sqrt(r.sqrDistanceEnvelope(s,n.outPoint,i.outPoint))}distanceMultipathGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:{this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distancePointMultipath(t,e,r,i);return this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumMultiPoint:{this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distanceMultipointMultipath(t,e,r,i);return this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathMultipath(e,t,i,r);case n.enumEnvelope:return this.distanceMultipathMultipath(e,x(t),i,r);default:return Number.NaN}}distanceMultipathMultipath(n,i,r,s){const o={stack:[],error:void 0,hasError:!1};try{const t=[n],a=[i],c=this.swapGeometriesIfAGtB(t,a);c&&(this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),I(r,s)),e(o,_((()=>{I(r,s),this.m_env2DgeometryB=l(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)}),!c),!1);const h=t[0],D=a[0],v=h.querySegmentIterator();v.stripAttributes();const N=D.querySegmentIterator();if(N.stripAttributes(),this.m_bIsNearCalc&&this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)<=this.m_maxSqrDistance)return 0;if(this.m_bIsNearCalc){const e=Math.trunc(g(Math.sqrt(h.getPointCount())+1,1,y())),t=Math.trunc(g(Math.sqrt(h.getPointCount())+1,1,y()));if(this.distanceMultipointMultipoint(h,D,r,s,e,t)<=this.m_maxSqrDistance)return 0}if(!!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)){const e=p(),t=p();if(d(h,D,v,N,e,t))return f(r,e),f(s,t),0}const M=q(h),x=[],E=new u,b=new m,B=new m,S=new m;let A=this.m_maxSqrDistance,T=!0,C=!1;for(let e=0,n=M.length;e<n;++e){h.querySegment(M[e],E,!0);const t=E.get();if(t.queryEnvelope(b),!(b.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>A)){if(this.m_bIsNearCalc&&b.sqrMaxDistanceEnvelope(this.m_env2DgeometryB)<=A)return 0;for(;N.nextPath();){if(this.progress_(),T)D.queryPathEnvelope(N.getPathIndex(),S),x[N.getPathIndex()]=S.clone();else if(b.sqrDistanceEnvelope(x[N.getPathIndex()],null,null)>A)continue;for(;N.hasNextSegment();){const n=N.nextSegment();if(n.queryEnvelope(B),b.sqrDistanceEnvelope(B,null,null)<=A){const i=!b.isIntersecting(B),o=[0],m=[0];let a=t.distance(n,i,o,m);if(a*=a,this.m_bIsNearCalc&&a<=this.m_maxSqrDistance)return 0;if(a<A||a===A&&M[e]<r.index){if(C=!0,P(r,t,M[e],o[0]),P(s,n,N.getStartPointIndex(),m[0]),0===a)return 0;A=a}}}}N.resetToFirstPath(),T=!1}}return C?Math.sqrt(A):Number.POSITIVE_INFINITY}catch(a){o.error=a,o.hasError=!0}finally{t(o)}}swapGeometriesIfAGtB(e,t){return i(e[0])>i(t[0])&&(t[0]=l(e[0],e[0]=t[0]),!0)}swapGeometriesIfBGtA(e,t){return this.swapGeometriesIfAGtB(t,e)}}export{E as D,p as m,q as s,d as w};
