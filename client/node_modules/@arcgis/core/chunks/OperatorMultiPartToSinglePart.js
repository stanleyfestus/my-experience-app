/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{G as e}from"./SimpleGeometryCursor.js";import{x as t,y as s,j as r,t as n,z as a,k as o,A as i,n as m,B as l,a as g,P as h,D as u,C as c}from"./QuadraticBezier.js";import{a as p,G as y,g as P,t as _}from"./Geometry.js";class d{getOperatorType(){return 10700}accelerateGeometry(e,t,s){return!1}canAccelerateGeometry(e){return!1}supportsCurves(){return!0}executeMany(e,t,s,r=1){return new I(e,t,s,r)}}class I extends e{constructor(e,t,s,r){super(),this.m_progressTracker=s,this.m_inputGeoms=e,this.m_spatialReference=t,this.m_currentGeometry=null,this.m_singlePartIndex=-1,this.m_singlePartCount=-1,this.m_polygonStart=-1,this.m_index=-1,this.m_options=r}tock(){return!0}getRank(){return 1}next(){if(this.m_singlePartIndex===this.m_singlePartCount){const e=this.m_inputGeoms.next();if(null===e)return null;if(p(e),e.getGeometryType()===y.enumPolygon)if(1===this.m_options)this.m_currentGeometry=(new t).execute(e,this.m_spatialReference,!1,this.m_progressTracker);else if(2===this.m_options)if(e.getPathCount()<2)this.m_currentGeometry=e;else{const t=[0],h=e.getImpl().getIsSimple(0,t);if(s(h))this.m_currentGeometry=e;else{const t=new r,s=t.addGeometry(e);let h=null;if(t.hasCurves()){h=new c;const s=new n;e.queryEnvelope(s);const r=a(null,e,!0),m=o(r.total(),s);i(t,m,r.total(),12e3,null,h,null,this.m_progressTracker)}const u=t.createPathUserIndex();{let e=0;for(let r=t.getFirstPath(s);r!==m;r=t.getNextPath(r))t.setPathUserIndex(r,u,e++)}const p=l(t,s,this.m_progressTracker);P(p>=0);const y=[];for(let e=t.getFirstPath(s);e!==m;e=t.getNextPath(e))y.push(e);y.sort(((e,s)=>Math.abs(t.getPathUserIndex(e,p))-Math.abs(t.getPathUserIndex(s,p))));const _=e,d=new g({vd:e.getDescription()});d.reserveParts(_.getPointCount(),_.getPathCount());for(let e=0,r=y.length;e<r;e++){const s=y[e],r=t.getPathUserIndex(s,u),n=_.calculateRingArea2D(r)>0,a=t.getPathUserIndex(s,p)>=0;d.addPath(_,r,n===a)}this.m_currentGeometry=d}}else _("");else this.m_currentGeometry=e;this.m_singlePartCount=G(this.m_currentGeometry),this.m_singlePartIndex=0,this.m_polygonStart=0,this.m_index=this.m_inputGeoms.getGeometryID()}const e=this.getSingleGeometry(this.m_singlePartIndex,this.m_singlePartCount,this.m_polygonStart,this.m_currentGeometry);return e.getGeometryType()===y.enumPolygon&&(this.m_polygonStart+=e.getPathCount()),this.m_singlePartIndex++,e}getGeometryID(){return this.m_index}getSingleGeometry(e,t,s,r){let n=null;switch(r.getGeometryType()){case y.enumMultiPoint:n=new h({vd:r.getDescription()}),r.isEmpty()||r.getPointByVal(e,n);break;case y.enumPolyline:if(1===t)n=r;else{n=r.createInstance(),n.getImpl().addPath(r.getImpl(),e,!0);const t=[0],s=r.getImpl().getIsSimple(0,t);n.getImpl().setIsSimple(s,t[0],!0)}break;case y.enumPolygon:if(1===t)n=r;else{n=r.createInstance();const e=n.getImpl(),t=r.getImpl(),a=t.getPathFlagsStreamRef();let o=s;const i=t.getPathCount();do{e.addPath(t,o,!0),o++}while(o<i&&!(8&a.read(o)));e.getPathFlagsStreamRef().setBits(0,8);const m=[0],l=t.getIsSimple(0,m);e.setIsSimple(l,m[0],!0)}break;default:n=r}return n}}function G(e){return e.isEmpty()?1:u(e)}export{d as O};
