/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js";import{SliceDraw as r}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{Transform as o}from"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js";import{ObjectAndLayerIdColor as i}from"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js";import{VertexColor as l}from"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js";import{terrainDepthTest as s}from"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js";import{VisualVariables as t}from"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js";import{ColorConversion as d}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{addProjViewLocalOrigin as n}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{Float4PassUniform as a}from"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js";import{glsl as g}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as c}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{VertexAttribute as v}from"../views/3d/webgl-engine/lib/VertexAttribute.js";import{outputColorHighlightOID as b}from"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js";function m(m){const u=new c,{vertex:p,fragment:w,attributes:f,varyings:h}=u;n(p,m),u.include(o,m),u.include(l,m),u.include(t,m),u.include(i,m),u.include(r,m),u.include(b,m),f.add(v.POSITION,"vec3"),m.vvColor&&f.add(v.COLORFEATUREATTRIBUTE,"float"),h.add("vColor","vec4"),h.add("vpos","vec3");const C=m.terrainDepthTest&&m.output===e.Color;return C&&h.add("depth","float"),p.uniforms.add(new a("eColor",(e=>e.color))),p.main.add(g`
      vpos = position;
      forwardNormalizedVertexColor();
      forwardObjectAndLayerIdColor();

      ${m.hasVertexColors?"vColor *= eColor;":m.vvColor?"vColor = eColor * interpolateVVColor(colorFeatureAttribute);":"vColor = eColor;"}
      ${C?"depth = (view * vec4(vpos, 1.0)).z;":""}
      gl_Position = transformPosition(proj, view, vpos);`),u.include(r,m),C&&u.include(s,m),w.include(d),w.main.add(g`
    discardBySlice(vpos);
    ${C?"terrainDepthTest(depth);":""}
    vec4 fColor = vColor;
    outputColorHighlightOID(fColor, vpos);`),u}const u=Object.freeze(Object.defineProperty({__proto__:null,build:m},Symbol.toStringTag,{value:"Module"}));export{u as C,m as b};
