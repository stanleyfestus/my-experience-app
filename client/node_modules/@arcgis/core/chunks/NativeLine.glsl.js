/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js";import{SliceDraw as r}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{Transform as o}from"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js";import{VertexColor as i}from"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js";import{OutputHighlight as s}from"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js";import{alphaCutoff as t}from"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js";import{addProjViewLocalOrigin as l}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{Float4PassUniform as a}from"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js";import{FloatPassUniform as n}from"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js";import{glsl as d}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as c}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{VertexAttribute as g}from"../views/3d/webgl-engine/lib/VertexAttribute.js";function m(m){const u=new c,{vertex:p,fragment:w}=u;return u.include(o,m),u.include(i,m),l(p,m),u.attributes.add(g.POSITION,"vec3"),u.varyings.add("vpos","vec3"),p.main.add(d`vpos = position;
forwardNormalizedVertexColor();
gl_Position = transformPosition(proj, view, vpos);`),u.include(s,m),u.include(r,m),w.uniforms.add(new n("alphaCoverage",((e,r)=>Math.min(1,e.width*r.camera.pixelRatio)))),m.hasVertexColors||w.uniforms.add(new a("constantColor",(e=>e.color))),w.main.add(d`
    discardBySlice(vpos);

    vec4 color = ${m.hasVertexColors?"vColor":"constantColor"};

    ${m.output===e.ObjectAndLayerIdColor?"color.a = 1.0;":""}

    if (color.a < ${d.float(t)}) {
      discard;
    }

    ${m.output===e.Color?d`fragColor = highlightSlice(color, vpos);`:""}
    calculateOcclusionAndOutputHighlight();
  `),u}const u=Object.freeze(Object.defineProperty({__proto__:null,build:m},Symbol.toStringTag,{value:"Module"}));export{u as N,m as b};
