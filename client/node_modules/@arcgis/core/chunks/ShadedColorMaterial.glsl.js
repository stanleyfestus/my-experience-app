/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{create as e}from"../core/libs/gl-matrix-2/factories/vec4f64.js";import{ScreenSizeScaling as r}from"../views/3d/webgl-engine/core/shaderLibrary/ScreenSizeScaling.glsl.js";import{ShaderOutput as o}from"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js";import{SliceDraw as i}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{Transform as n}from"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js";import{terrainDepthTest as s}from"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js";import{ColorConversion as l}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{addProjViewLocalOrigin as d,addViewNormal as a}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{Float3PassUniform as t}from"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js";import{Float4PassUniform as c}from"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js";import{glsl as g}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as m}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{VertexAttribute as v}from"../views/3d/webgl-engine/lib/VertexAttribute.js";import{outputColorHighlightOID as w}from"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js";function u(e){const u=new m,f=e.terrainDepthTest&&e.output===o.Color;u.include(n,e),u.include(r,e),u.include(i,e),u.include(w,e);const{vertex:h,fragment:p}=u;return p.include(l),d(h,e),p.uniforms.add(new c("uColor",(e=>e.color))),u.attributes.add(v.POSITION,"vec3"),u.varyings.add("vWorldPosition","vec3"),f&&u.varyings.add("depth","float"),e.screenSizeEnabled&&u.attributes.add(v.OFFSET,"vec3"),e.shadingEnabled&&(a(h),u.attributes.add(v.NORMAL,"vec3"),u.varyings.add("vViewNormal","vec3"),p.uniforms.add(new t("shadingDirection",(e=>e.shadingDirection))),p.uniforms.add(new c("shadedColor",(e=>b(e.shadingTint,e.color))))),h.main.add(g`
      vWorldPosition = ${e.screenSizeEnabled?g`screenSizeScaling(offset, position)`:g`position`};
      ${e.shadingEnabled?g`vec3 worldNormal = normal;
                 vViewNormal = (viewNormal * vec4(worldNormal, 1)).xyz;`:""}
      ${f?g`depth = (view * vec4(vWorldPosition, 1.0)).z;`:""}
      gl_Position = transformPosition(proj, view, vWorldPosition);
  `),f&&u.include(s,e),p.main.add(g`
      discardBySlice(vWorldPosition);
      ${f?g`terrainDepthTest(depth);`:""}
      ${e.shadingEnabled?g`vec3 viewNormalNorm = normalize(vViewNormal);
             float shadingFactor = 1.0 - clamp(-dot(viewNormalNorm, shadingDirection), 0.0, 1.0);
             vec4 finalColor = mix(uColor, shadedColor, shadingFactor);`:g`vec4 finalColor = uColor;`}
      outputColorHighlightOID(finalColor, vWorldPosition);`),u}function b(e,r){const o=1-e[3],i=e[3]+r[3]*o;return 0===i?(f[3]=i,f):(f[0]=(e[0]*e[3]+r[0]*r[3]*o)/i,f[1]=(e[1]*e[3]+r[1]*r[3]*o)/i,f[2]=(e[2]*e[3]+r[2]*r[3]*o)/i,f[3]=r[3],f)}const f=e(),h=Object.freeze(Object.defineProperty({__proto__:null,build:u},Symbol.toStringTag,{value:"Module"}));export{h as S,u as b};
