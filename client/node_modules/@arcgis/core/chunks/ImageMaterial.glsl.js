/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import{ShaderOutput as e}from"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js";import{SliceDraw as r}from"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js";import{Transform as i}from"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js";import{ObjectAndLayerIdColor as o}from"../views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js";import{terrainDepthTest as t}from"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js";import{ColorConversion as s}from"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js";import{addProjViewLocalOrigin as n}from"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js";import{FloatPassUniform as d}from"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js";import{glsl as a}from"../views/3d/webgl-engine/core/shaderModules/interfaces.js";import{ShaderBuilder as l}from"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js";import{Texture2DPassUniform as g}from"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js";import{VertexAttribute as p}from"../views/3d/webgl-engine/lib/VertexAttribute.js";import{outputColorHighlightOID as v}from"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js";function c(c){const u=new l,{vertex:m,fragment:b}=u;return n(m,c),u.include(i,c),u.include(t,c),u.include(r,c),u.include(o,c),u.include(v,c),u.attributes.add(p.POSITION,"vec3"),u.attributes.add(p.UV0,"vec2"),c.perspectiveInterpolation&&u.attributes.add(p.PERSPECTIVEDIVIDE,"float"),u.varyings.add("vpos","vec3"),c.terrainDepthTest&&u.varyings.add("depth","float"),m.main.add(a`
    vpos = position;
    ${c.terrainDepthTest?"depth = (view * vec4(vpos, 1.0)).z;":""}
    vTexCoord = uv0;
    gl_Position = transformPosition(proj, view, vpos);
    ${c.perspectiveInterpolation?"gl_Position *= perspectiveDivide;":""}`),b.uniforms.add(new g("tex",(e=>e.texture)),new d("opacity",(e=>e.opacity))),u.varyings.add("vTexCoord","vec2"),b.include(s),b.main.add(a`
    discardBySlice(vpos);
    ${c.terrainDepthTest?"terrainDepthTest(depth);":""}
    ${c.output===e.ObjectAndLayerIdColor?"fragColor = vec4(0, 0, 0, 1);\n           return;":""}
    vec4 finalColor = texture(tex, vTexCoord) * opacity;
    outputColorHighlightOID(finalColor, vpos);`),u}const u=Object.freeze(Object.defineProperty({__proto__:null,build:c},Symbol.toStringTag,{value:"Module"}));export{u as I,c as b};
