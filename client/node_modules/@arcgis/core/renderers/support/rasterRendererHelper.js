/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.31/esri/copyright.txt for details.
*/
import e from"../../Color.js";import"../../rasterRenderers.js";import{getMetersPerUnitForSR as t}from"../../core/unitUtils.js";import n from"../../layers/support/Field.js";import a from"../FlowRenderer.js";import r from"./AuthoringInfo.js";import l from"./ClassBreakInfo.js";import{predefinedJsonColorRamps as s,convertColorRampToColormap as i}from"./colorRampUtils.js";import{isVectorFieldRendererSupported as o,isColormapRendererSupported as u,isUVRendererSupported as m,isClassBreaksSupported as c,isShadedReliefRendererSupported as f,isFlowRendererSupported as p}from"./rasterRendererChecks.js";import d from"./UniqueValueInfo.js";import b from"../visualVariables/ColorVariable.js";import h from"../visualVariables/SizeVariable.js";import g from"../visualVariables/support/ColorStop.js";import v from"../../rest/support/ClassBreaksDefinition.js";import{createGenerateRendererClassBreaks as y}from"../../rest/support/generateRendererUtils.js";import w from"../../rest/support/MultipartColorRamp.js";import C from"../../symbols/SimpleFillSymbol.js";import x from"../RasterStretchRenderer.js";import M from"../UniqueValueRenderer.js";import R from"../RasterColormapRenderer.js";import j from"../RasterShadedReliefRenderer.js";import V from"../ClassBreaksRenderer.js";import T from"../VectorFieldRenderer.js";const I=.25,S=w.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),k=w.fromJSON(s[0]),F=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function L(e){return e.presetRenderers?.find((({method:t,value:n})=>"raster-function-template"===t?n===e.rasterFunctionName:"variable"===t&&n===e.variableName))}function q(e,t){const{attributeTable:n,colormap:a}=e;if(o(e)){const t=Z(e);if(null!=t)return t}if(t?.rasterFunctionColorRamp){const n=N(e,t);return n.colorRamp=t.rasterFunctionColorRamp,n}if(null!=a){const t=H(e);if(null!=t)return t}if(null!=n){const t=J(e);if(null!=t)return t}return N(e,t)}function B(e,t=!1){const n=["raster-stretch"];return u(e,t)&&n.push("raster-colormap"),m(e)&&n.push("unique-value"),c(e,t)&&n.push("class-breaks"),f(e)&&n.push("raster-shaded-relief"),o(e)&&n.push("vector-field"),p(e)&&n.push("flow"),n}function E(e){return"Function"===e.datasetFormat&&"Colormap"===e.rasterFunction.functionName?e.rasterFunction.colorRamp:void 0}function z(e,t,n){const a=["nearest","bilinear","cubic","majority"],r=n?.toLowerCase().replace("bicubic","cubic"),l=a.find((e=>e===r));if("Map"===t)return l??"bilinear";if("standard-time"===e.dataType)return l??"nearest";return"thematic"===e.dataType||e.attributeTable||e.colormap?"nearest"===l||"majority"===l?l:"nearest":l??"bilinear"}function N(e,t){e=W(e,t?.variableName);const{bandCount:n}=e;let{bandIds:a,stretchType:r}=t||{};a?.some((e=>e>=n))&&(a=null);let l=e.statistics,s=e.histograms;n>1?(a=a?.length?a:U(e),l=null==l?null:a?.map((e=>l[e])),s=null==s?null:a?.map((e=>s[e]))):a=[0],null==r&&(r=A(e)),t?.includeStatisticsInStretch&&("percent-clip"===r||"histogram-equalization"===r)&&e.statistics?.length&&(r="min-max");let i=!1;switch(r){case"none":i=!1;break;case"percent-clip":i=!s?.length;break;default:i=!l?.length}const{dataType:o}=e,u=1===a?.length&&F.has(o)?S:null,m=new x({stretchType:r,dynamicRangeAdjustment:i,colorRamp:u,outputMin:0,outputMax:255,gamma:1===a?.length?[1]:[1,1,1],useGamma:!1});return"percent-clip"===r?m.maxPercent=m.minPercent=I:"standard-deviation"===r&&(m.numberOfStandardDeviations=2),i||null==e.multidimensionalInfo&&!t?.includeStatisticsInStretch||("percent-clip"===r?m.histograms=s:"min-max"!==r&&"standard-deviation"!==r||(m.statistics=l)),m}function W(e,t){const{multidimensionalInfo:n}=e;if(!t||!n)return e;const a=n.variables.find((e=>e.name===t));if(!a)return e;if(e=e.clone(),a){const{statistics:t,histograms:n}=a;t?.length&&(e.statistics=t.map((e=>({min:e.min,max:e.max,avg:e.avg,stddev:e.stddev})))),n?.length&&(e.histograms=n)}return e}function U(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const{bandInfos:n}=e;let a;if(n.length===t){const{red:e,green:t,blue:r,nir:l}=O(n);null!=e&&null!=t&&null!=r?a=[e,t,r]:null!=l&&null!=e&&null!=t&&(a=[l,e,t])}return!a&&t>=3&&(a=[0,1,2]),a}function D(e,t){const n=e.bandInfos.map((({name:e})=>e));return t?.length?t.map((e=>n[e])):n}function O(e){const t={};for(let n=0;n<e.length;n++){const a=e[n],r=a.name.toLowerCase();if("red"===r)t.red=n;else if("green"===r)t.green=n;else if("blue"===r)t.blue=n;else if("nearinfrared"===r||"nearinfrared_1"===r||"nir"===r)t.nir=n;else if(a.maxWavelength&&a.minWavelength){const e=a.minWavelength,r=a.maxWavelength;null==t.blue&&e>=410&&e<=480&&r>=480&&r<=540?t.blue=n:null==t.green&&e>=490&&e<=560&&r>=560&&r<=610?t.green=n:null==t.red&&e>=595&&e<=670&&r>=660&&r<=730?t.red=n:null==t.nir&&e>=700&&e<=860&&r>=800&&r<=950&&(t.nir=n)}}return t}function A(e){let t="percent-clip";const{pixelType:n,dataType:a,histograms:r,statistics:l,multidimensionalInfo:s}=e,i=F.has(a)||"generic"===a&&null!=s;return"u8"!==n||"processed"!==a&&null!=r&&null!=l?"u8"===n||"elevation"===a||i?t="min-max":null!=r?t="percent-clip":null!=l&&(t="min-max"):t="none",t}function J(t,n,a,l){if(!m(t,n))return null;const{attributeTable:s,statistics:o}=t,u=P(s,n),c=_(s,"red"),f=_(s,"green"),p=_(s,"blue"),b=new r,h=[],g=new Set,v=!!(c&&f&&p);if(null!=s)s.features.forEach((t=>{const n=t.attributes[u.name];if(!g.has(t.attributes[u.name])&&null!=n){g.add(n);const a=v&&("single"===c.type||"double"===c.type)&&("single"===f.type||"double"===f.type)&&("single"===p.type||"double"===p.type)&&!s.features.some((e=>e.attributes[c.name]>1||e.attributes[f.name]>1||e.attributes[p.name]>1)),r=a?255:1;h.push(new d({value:t.attributes[u.name],label:t.attributes[u.name]+"",symbol:new C({style:"solid",outline:null,color:new e(v?[t.attributes[c.name]*r,t.attributes[f.name]*r,t.attributes[p.name]*r,1]:[0,0,0,0])})}))}}));else if(o?.[0])for(let r=o[0].min;r<=o[0].max;r++)h.push(new d({value:r,label:r.toString(),symbol:new C({style:"solid",outline:null,color:new e([0,0,0,0])})}));if(h.sort(((e,t)=>e.value&&"string"==typeof e.value.valueOf()?0:e.value>t.value?1:-1)),!v){const t=i(k,{numColors:h.length});h.forEach(((n,a)=>n.symbol.color=new e(t[a].slice(1,4)))),b.colorRamp=k}if(a||l){const t=a||i(l,{numColors:h.length}).map((e=>e.slice(1)));h.forEach(((n,a)=>n.symbol.color=new e(t[a]))),b.colorRamp=l}return new M({field:u.name,uniqueValueInfos:h,authoringInfo:b})}function P(e,t,a){let r;return null!=e?(r=t?e.fields.find((e=>t.toLowerCase()===e.name.toLowerCase())):G(e.fields),r||(a||(r=e.fields.find((e=>"string"===e.type))),r||(r=_(e,"value")))):r=new n({name:"value"}),r}function G(e){let t;for(let n=0;n<e.length;n++){const a=e[n].name.toLowerCase();if("string"===e[n].type){if(a.startsWith("class")){t=e[n];break}null==t&&(a.endsWith("name")||a.endsWith("type"))&&(t=e[n])}}return t}function _(e,t){return null==e?null:e.fields.find((e=>e.name.toLowerCase()===t))}function H(e){if(!u(e))return null;let t;const{attributeTable:n,colormap:a}=e;if(null!=n){const e=_(n,"value"),a=P(n,null,!0);"string"===a.type&&(t={},n.features.forEach((n=>{const r=n.attributes;t[r[e.name]]=a?r[a.name]:r[e.name]})))}return R.createFromColormap(a,t)}function K(e,n="traditional"){if(!f(e))return null;const{extent:a}=e,r=a.width*t(a.spatialReference);return new j({hillshadeType:n,scalingType:r>5e6?"adjusted":"none"})}function Q(e,t){e=W(e,t?.variableName);const{attributeTable:n}=e;if(!c(e))return null;const a=null!=e.histograms?e.histograms[0]:null,s=null!=t?.numClasses&&isFinite(t?.numClasses)?t.numClasses:5,o=new r({classificationMethod:t?.classificationMethod,colorRamp:t?.colorRamp});let u=t?.field||"value";const m=[],f=[],p=1e3,d=null!=n,b=d&&n.fields.find((e=>"count"===e.name.toLowerCase())),h=d?n.fields.find((e=>e.name.toLowerCase()===u.toLowerCase())):void 0;if(h&&d){u=h.name;const e=n.features.length;let t=0;n.features.forEach((n=>t+=(b?n.attributes[b.name]:50)/e)),n.features.forEach((n=>{const a=n.attributes[h.name],r=b?n.attributes[b.name]:50;if(r>0){f.push(r);const n=Math.max(1,Math.round(r/e/t*p));for(let e=0;e<n;e++)m.push(a)}}))}else{const{pixelType:t}=e,r=(a.max-a.min)/a.size,l=t.includes("s")||t.includes("u"),s=l&&1===r?Math.floor(a.min+.5):a.min,i=l&&1===r?Math.floor(a.max-.5):a.max,o=a.size;let u,c=0;a.counts.forEach((e=>c+=e/o)),a.counts.forEach(((e,t)=>{if(e>0){f.push(e);const l=Math.max(1,Math.round(e/o/c*p));u=d?n.features[t].attributes[h.name]:0===t?s:t===o-1?i:a.min+r*(t+.5);for(let e=0;e<l;e++)m.push(u)}}))}const g=t?.classificationMethod||"natural-breaks";let w=t?.definedInterval;"defined-interval"!==g||w||(w=X(e,h,s));const x=y({values:m,valueFrequency:f,normalizationTotal:null,definition:new v({classificationMethod:g,breakCount:s,definedInterval:w})});let M=t?.colors;if(!M){const e=t?.colorRamp||S;o.colorRamp=e;const n=i(e,{numColors:x.classBreaks.length,interpolateAlpha:!0});M=n.map((e=>e.slice(1)))}const R=x.classBreaks.map(((e,t)=>new l({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:new C({color:M[t]})})));return new V({field:u,classBreakInfos:R,authoringInfo:o})}function X(e,t,n){let a=0,r=0;if(null!=e.attributeTable){const n=e.attributeTable;a=r=n.features[0].attributes[t.name],n.features.forEach((e=>{const n=e.attributes[t.name];n<a&&(a=n),n>r&&(r=n)}))}else if(null!=e.histograms){const t=e.histograms;a=t[0].min,r=t[0].max}return(r-a)/n}const Y=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function Z(e){if(!o(e))return null;let t;if(null!=e.statistics&&e.statistics.length&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:n,maxMagnitude:a}=ne(e.dataType,e.statistics);t=[new h({field:"Magnitude",minSize:10,maxSize:40,minDataValue:n,maxDataValue:a})]}const n=null!=e.multidimensionalInfo?Y.get(e.multidimensionalInfo.variables[0].unit):void 0,a=new T({visualVariables:t,inputUnit:n,rotationType:"geographic"});return a.visualVariables=[...a.sizeVariables,...a.rotationVariables],a}function $(e){return{color:e.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function ee(e){if("uniqueValue"===e.type){const t=e.uniqueValueInfos,n=t?.[0].symbol;return n?.symbolLayers?.length&&(e.uniqueValueInfos=t?.map((e=>({value:e.value,label:e.label,symbol:e.symbol?$(e.symbol):null})))),e}if("classBreaks"===e.type){const t=e.classBreakInfos,n=t[0].symbol;return n?.symbolLayers?.length&&(e.classBreakInfos=t.map((e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?$(e.symbol):null})))),e}return e}function te(t){if(!p(t))return null;let n;if(null!=t.statistics&&t.statistics.length>0&&("vector-magdir"===t.dataType||"vector-uv"===t.dataType)){const{minMagnitude:a,maxMagnitude:r}=ne(t.dataType,t.statistics);n=[new b({field:"Magnitude",stops:[new g({value:a,color:new e("#1020c0")}),new g({value:r,color:new e("#c02010")})]})]}return new a({visualVariables:n})}function ne(e,t){let n,a;if("vector-magdir"===e)n=t[0].min,a=t[0].max;else{const e=t[0].min,r=t[0].max,l=t[1].min,s=t[1].max;n=0,a=Math.max(Math.abs(e),Math.abs(l),Math.abs(r),Math.abs(s))}return{minMagnitude:n,maxMagnitude:a}}export{Q as createClassBreaksRenderer,H as createColormapRenderer,q as createDefaultRenderer,te as createFlowRenderer,K as createShadedReliefRenderer,N as createStretchRenderer,J as createUVRenderer,Z as createVectorFieldRenderer,ne as estimateMagnitudeRange,D as getBandNames,P as getClassField,U as getDefaultBandCombination,z as getDefaultInterpolation,X as getDefinedInterval,_ as getField,E as getFunctionColorRamp,B as getSupportedRendererTypes,W as getVariableRasterInfo,O as getWellKnownBandIndexes,L as matchPresetRenderer,ee as normalizeRendererJSON};
