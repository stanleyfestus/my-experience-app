/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-80ecaa0e.js');
const index$2 = require('./index-fbb18e12.js');
const index$3 = require('./index-87ff723d.js');
const useWidget = require('./useWidget-3971aff7.js');
const index$1 = require('./index-bb8f4b21.js');
require('./component-utils-b8b66725.js');

const searchCss = "";
const ArcgisSearchStyle0 = searchCss;

const useSearchWidget = useWidget.makeWidgetController(index$3.newWidgetsSearch);
const ArcgisSearch = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.arcgisReady = index.createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = index.createEvent(this, "arcgisPropertyChange", 7);
        this.widgetSearchBlur = index.createEvent(this, "arcgisBlur", 7);
        this.widgetSearchClear = index.createEvent(this, "arcgisClear", 7);
        this.widgetSearchComplete = index.createEvent(this, "arcgisComplete", 7);
        this.widgetSearchFocus = index.createEvent(this, "arcgisFocus", 7);
        this.widgetSearchStart = index.createEvent(this, "arcgisStart", 7);
        this.widgetSelectResult = index.createEvent(this, "arcgisSelectResult", 7);
        this.widgetSuggestComplete = index.createEvent(this, "arcgisSuggestComplete", 7);
        this.widgetSuggestStart = index.createEvent(this, "arcgisSuggestStart", 7);
        this.manager = index$1.useControllerManager(this);
        this.widget = useSearchWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = index$2.usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.activeMenu = this.widget.activeMenu;
        this.activeSource = this.widget.activeSource;
        this.activeSourceIndex = this.widget.activeSourceIndex;
        this.allPlaceholder = this.widget.allPlaceholder;
        this.allSources = this.widget.allSources;
        this.autoSelectDisabled = this.widget.autoSelect;
        this.defaultSources = this.widget.defaultSources;
        this.disabled = this.widget.disabled;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.includeDefaultSourcesDisabled = this.widget.includeDefaultSources;
        this.locationDisabled = this.widget.locationEnabled;
        this.maxResults = this.widget.maxResults;
        this.maxSuggestions = this.widget.maxSuggestions;
        this.minSuggestCharacters = this.widget.minSuggestCharacters;
        this.popupDisabled = this.widget.popupEnabled;
        this.popupTemplate = this.widget.popupTemplate;
        this.portal = this.widget.portal;
        this.resultGraphic = this.widget.resultGraphic;
        this.resultGraphicDisabled = this.widget.resultGraphicEnabled;
        this.results = this.widget.results;
        this.searchAllDisabled = this.widget.searchAllEnabled;
        this.searchTerm = this.widget.searchTerm;
        this.selectedResult = this.widget.selectedResult;
        this.sources = this.widget.sources;
        this.suggestions = this.widget.suggestions;
        this.suggestionsDisabled = this.widget.suggestionsEnabled;
        this.position = "top-right";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async blurSearch() {
        this.widget?.blur();
    }
    async clearSearch() {
        this.widget?.clear();
    }
    async focusSearch() {
        this.widget?.focus();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async search(term) {
        return await this.widget?.search(term);
    }
    async suggest(term) {
        return await this.widget?.suggest(term);
    }
    get el() { return index.getElement(this); }
};
ArcgisSearch.style = ArcgisSearchStyle0;

exports.arcgis_search = ArcgisSearch;
