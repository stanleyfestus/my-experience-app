/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-80ecaa0e.js');
const index$2 = require('./index-fbb18e12.js');
const index$3 = require('./index-87ff723d.js');
const useWidget = require('./useWidget-3971aff7.js');
const index$1 = require('./index-bb8f4b21.js');
require('./component-utils-b8b66725.js');

const sketchCss = "arcgis-sketch{}";
const ArcgisSketchStyle0 = sketchCss;

const useSketchWidget = useWidget.makeWidgetController(index$3.newWidgetsSketch);
const ArcgisSketch = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.arcgisReady = index.createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = index.createEvent(this, "arcgisPropertyChange", 7);
        this.widgetCreate = index.createEvent(this, "arcgisCreate", 7);
        this.widgetDelete = index.createEvent(this, "arcgisDelete", 7);
        this.widgetRedo = index.createEvent(this, "arcgisRedo", 7);
        this.widgetUndo = index.createEvent(this, "arcgisUndo", 7);
        this.widgetUpdate = index.createEvent(this, "arcgisUpdate", 7);
        this.manager = index$1.useControllerManager(this);
        this.widget = useSketchWidget(this, { editConstructorProperties: this._editConstructorProperties });
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = index$2.usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.activeTool = this.widget.activeTool;
        this.availableCreateTools = this.widget.availableCreateTools;
        this.createGraphic = this.widget.createGraphic;
        this.creationMode = this.widget.creationMode;
        this.defaultCreateOptions = this.widget.defaultCreateOptions;
        this.defaultUpdateOptions = this.widget.defaultUpdateOptions;
        this.defaultGraphicsLayerDisabled = false;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.labelOptions = this.widget.labelOptions;
        this.layer = this.widget.layer;
        this.layout = this.widget.layout;
        this.pointSymbol = this.viewModel.pointSymbol;
        this.polylineSymbol = this.viewModel.polylineSymbol;
        this.polygonSymbol = this.viewModel.polygonSymbol;
        this.snappingOptions = this.widget.snappingOptions;
        this.tooltipOptions = this.widget.tooltipOptions;
        this.updateGraphics = this.widget.updateGraphics;
        this.hideCreateToolsPoint = this.widget.visibleElements.createTools.point;
        this.hideCreateToolsPolyline = this.widget.visibleElements.createTools.polyline;
        this.hideCreateToolsPolygon = this.widget.visibleElements.createTools.polygon;
        this.hideCreateToolsRectangle = this.widget.visibleElements.createTools.rectangle;
        this.hideCreateToolsCircle = this.widget.visibleElements.createTools.circle;
        this.hideDuplicateButton = this.widget.visibleElements.duplicateButton;
        this.hideSelectionToolsRectangleSelection = this.widget.visibleElements.selectionTools["rectangle-selection"];
        this.hideSelectionToolsLassoSelection = this.widget.visibleElements.selectionTools["lasso-selection"];
        this.hideSettingsMenu = this.widget.visibleElements.settingsMenu;
        this.hideLabelsToggle = this.widget.visibleElements.labelsToggle;
        this.hideTooltipsToggle = this.widget.visibleElements.tooltipsToggle;
        this.hideSnappingControls = this.widget.visibleElements.snappingControls;
        this.showSnappingControlsElementsHeader = this.widget.visibleElements.snappingControlsElements.header;
        this.hideSnappingControlsElementsEnabledToggle = this.widget.visibleElements.snappingControlsElements.enabledToggle;
        this.hideSnappingControlsElementsSelfEnabledToggle = this.widget.visibleElements.snappingControlsElements.selfEnabledToggle;
        this.hideSnappingControlsElementsFeatureEnabledToggle = this.widget.visibleElements.snappingControlsElements.featureEnabledToggle;
        this.hideSnappingControlsElementsLayerList = this.widget.visibleElements.snappingControlsElements.layerList;
        this.hideUndoRedoMenu = this.widget.visibleElements.undoRedoMenu;
        this.position = "bottom-left";
        this.state = this.widget.state;
    }
    async _editConstructorProperties(properties) {
        if (!this.defaultGraphicsLayerDisabled) {
            properties.layer ?? (properties.layer = await index$3.newLayersGraphicsLayer({
                title: "Sketch Layer",
            }));
        }
        return properties;
    }
    //--------------------------------------------------------------------------
    //
    //  Listeners
    //
    //--------------------------------------------------------------------------
    arcgisReadyHandler() {
        if (!this.defaultGraphicsLayerDisabled && !this.el.view?.map.layers.includes(this.widget.layer)) {
            this.el.view?.map.add(this.widget.layer);
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async cancel() {
        this.widget?.cancel();
    }
    async complete() {
        this.widget?.complete();
    }
    async create(tool, createOptions) {
        await this.widget?.create(tool, createOptions);
    }
    async delete() {
        this.widget?.delete();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async duplicate() {
        this.widget?.duplicate();
    }
    async redo() {
        this.widget?.redo();
    }
    async undo() {
        this.widget?.undo();
    }
    async update(graphic, updateOptions) {
        return void this.widget?.update(graphic, updateOptions);
    }
    get el() { return index.getElement(this); }
};
ArcgisSketch.style = ArcgisSketchStyle0;

exports.arcgis_sketch = ArcgisSketch;
