/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { u as usePropertyChange } from './index3.js';
import { M as newWidgetsFeatures } from './index2.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as useControllerManager } from './index4.js';

const featuresCss = "arcgis-features{}";
const ArcgisFeaturesStyle0 = featuresCss;

const useFeaturesWidget = makeWidgetController(newWidgetsFeatures);
const __cmpMeta = [0,"arcgis-features",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"referenceElement":[1025,"reference-element"],"collapsed":[1540],"actions":[1040],"active":[1540],"content":[1025],"features":[1040],"featuresPerPage":[1026,"features-per-page"],"featureViewModelAbilities":[1040],"goToOverride":[1040],"headingLevel":[1026,"heading-level"],"includeDefaultActions":[1028,"include-default-actions"],"icon":[1025],"label":[1025],"map":[1040],"promises":[1040],"selectedFeature":[1040],"selectedFeatureIndex":[1026,"selected-feature-index"],"spatialReference":[1040],"featuresTitle":[1025,"features-title"],"timeZone":[1025,"time-zone"],"hideActionBar":[1028,"hide-action-bar"],"hideCloseButton":[1028,"hide-close-button"],"showCollapseButton":[1028,"show-collapse-button"],"hideFeatureNavigation":[1028,"hide-feature-navigation"],"hideFlow":[1028,"hide-flow"],"hideHeading":[1028,"hide-heading"],"hideSpinner":[1028,"hide-spinner"],"position":[1025],"state":[1537],"destroy":[64],"fetchFeatures":[64],"clear":[64],"close":[64],"next":[64],"open":[64],"previous":[64],"triggerAction":[64]}];
const ArcgisFeatures$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisFeatures extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.widgetTriggerAction = createEvent(this, "arcgisTriggerAction", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useFeaturesWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("selectedFeature", "selectedFeatureIndex", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.collapsed = this.widget.collapsed;
        this.actions = this.viewModel.actions;
        this.active = this.widget.active;
        this.content = this.widget.content;
        this.features = this.widget.features;
        this.featuresPerPage = this.viewModel.featuresPerPage;
        this.featureViewModelAbilities = this.viewModel.featureViewModelAbilities;
        this.goToOverride = this.viewModel.goToOverride;
        this.headingLevel = this.widget.headingLevel;
        this.includeDefaultActions = this.viewModel.includeDefaultActions;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.map = this.widget.map;
        this.promises = this.widget.promises;
        this.selectedFeature = this.widget.selectedFeature;
        this.selectedFeatureIndex = this.widget.selectedFeatureIndex;
        this.spatialReference = this.widget.spatialReference;
        this.featuresTitle = this.widget.title;
        this.timeZone = this.widget.timeZone;
        this.hideActionBar = this.widget.visibleElements.actionBar;
        this.hideCloseButton = this.widget.visibleElements.closeButton;
        this.showCollapseButton = this.widget.visibleElements.collapseButton;
        this.hideFeatureNavigation = this.widget.visibleElements.featureNavigation;
        this.hideFlow = this.widget.visibleElements.flow;
        this.hideHeading = this.widget.visibleElements.heading;
        this.hideSpinner = this.widget.visibleElements.spinner;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async fetchFeatures(screenPoint, options) {
        return await this.widget?.fetchFeatures(screenPoint, options);
    }
    async clear() {
        this.widget?.clear();
    }
    async close() {
        this.widget?.close();
    }
    async next() {
        return this.widget?.next();
    }
    async open(options) {
        this.widget?.open(options);
    }
    async previous() {
        return this.widget?.previous();
    }
    async triggerAction(actionIndex) {
        this.widget?.triggerAction(actionIndex);
    }
    get el() { return this; }
    static get style() { return ArcgisFeaturesStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-features"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-features":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisFeatures$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisFeatures = ArcgisFeatures$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisFeatures, defineCustomElement };
