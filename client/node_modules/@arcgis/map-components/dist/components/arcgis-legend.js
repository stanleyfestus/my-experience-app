/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { T as newWidgetsLegend } from './index2.js';
import { u as usePropertyChange } from './index3.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as useControllerManager } from './index4.js';

const legendCss = "";
const ArcgisLegendStyle0 = legendCss;

const useLegendWidget = makeWidgetController(newWidgetsLegend);
const __cmpMeta = [0,"arcgis-legend",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"headingLevel":[1026,"heading-level"],"referenceElement":[1025,"reference-element"],"activeLayerInfos":[1040],"basemapLegendVisible":[1028,"basemap-legend-visible"],"hideLayersNotInCurrentView":[1028,"hide-layers-not-in-current-view"],"icon":[1025],"label":[1025],"respectLayerVisibilityDisabled":[1028,"respect-layer-visibility-disabled"],"legendStyle":[1025,"legend-style"],"layerInfos":[1040],"position":[1025],"respectLayerDefinitionExpression":[1028,"respect-layer-definition-expression"],"state":[1537],"destroy":[64]}];
const ArcgisLegend$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisLegend extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useLegendWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.headingLevel = this.widget.headingLevel;
        this.referenceElement = undefined;
        this.activeLayerInfos = this.widget.activeLayerInfos;
        this.basemapLegendVisible = this.widget.basemapLegendVisible;
        this.hideLayersNotInCurrentView = this.widget.hideLayersNotInCurrentView;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.respectLayerVisibilityDisabled = this.widget.respectLayerVisibility;
        this.legendStyle = this.widget.style;
        this.layerInfos = this.widget.layerInfos;
        this.position = "bottom-left";
        this.respectLayerDefinitionExpression = this.widget.respectLayerDefinitionExpression;
        this.state = this.viewModel.state;
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    get el() { return this; }
    static get style() { return ArcgisLegendStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-legend"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-legend":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisLegend$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisLegend = ArcgisLegend$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisLegend, defineCustomElement };
