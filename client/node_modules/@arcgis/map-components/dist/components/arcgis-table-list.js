/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { u as usePropertyChange } from './index3.js';
import { ae as newWidgetsTableList } from './index2.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as useControllerManager, g as getSet } from './index4.js';

const tableListCss = "arcgis-table-list{}";
const ArcgisTableListStyle0 = tableListCss;

const useTableListWidget = makeWidgetController(newWidgetsTableList);
const __cmpMeta = [0,"arcgis-table-list",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"referenceElement":[1025,"reference-element"],"collapsed":[1540],"dragEnabled":[1028,"drag-enabled"],"filterPlaceholder":[1025,"filter-placeholder"],"filterText":[1025,"filter-text"],"icon":[1025],"label":[1025],"minDragEnabledItems":[1026,"min-drag-enabled-items"],"minFilterItems":[1026,"min-filter-items"],"selectedItems":[1040],"selectionMode":[1025,"selection-mode"],"tableItems":[1040],"listItemCreatedFunction":[1040],"visibleElementsCloseButton":[1028,"visible-elements-close-button"],"visibleElementsCollapseButton":[1028,"visible-elements-collapse-button"],"visibleElementsErrors":[1028,"visible-elements-errors"],"visibleElementsFilter":[1028,"visible-elements-filter"],"visibleElementsFlow":[1028,"visible-elements-flow"],"visibleElementsHeading":[1028,"visible-elements-heading"],"visibleElementsStatusIndicators":[1028,"visible-elements-status-indicators"],"visibleElementsTemporaryTableIndicators":[1028,"visible-elements-temporary-table-indicators"],"position":[1025],"state":[1537],"destroy":[64]}];
const ArcgisTableList$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisTableList extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.widgetTriggerAction = createEvent(this, "arcgisTriggerAction", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useTableListWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.collapsed = this.widget.collapsed;
        this.dragEnabled = this.widget.dragEnabled;
        this.filterPlaceholder = this.widget.filterPlaceholder;
        this.filterText = this.widget.filterText;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.minDragEnabledItems = this.widget.minDragEnabledItems;
        this.minFilterItems = this.widget.minFilterItems;
        this.selectedItems = this.widget.selectedItems;
        this.selectionMode = this.widget.selectionMode;
        this.tableItems = getSet(undefined, {
            get: () => this.widget.tableItems,
            set: "ignore",
        });
        this.listItemCreatedFunction = this.widget.listItemCreatedFunction;
        this.visibleElementsCloseButton = false;
        this.visibleElementsCollapseButton = false;
        this.visibleElementsErrors = false;
        this.visibleElementsFilter = false;
        this.visibleElementsFlow = true;
        this.visibleElementsHeading = false;
        this.visibleElementsStatusIndicators = true;
        this.visibleElementsTemporaryTableIndicators = false;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    get el() { return this; }
    static get style() { return ArcgisTableListStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-table-list"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-table-list":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisTableList$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisTableList = ArcgisTableList$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisTableList, defineCustomElement };
