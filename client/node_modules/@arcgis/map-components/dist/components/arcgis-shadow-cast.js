/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { a8 as newWidgetsShadowCast } from './index2.js';
import { u as usePropertyChange } from './index3.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as useControllerManager } from './index4.js';

const shadowCastCss = "arcgis-shadow-cast{}";
const ArcgisShadowCastStyle0 = shadowCastCss;

const useShadowCastWidget = makeWidgetController(newWidgetsShadowCast);
const __cmpMeta = [0,"arcgis-shadow-cast",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"referenceElement":[1025,"reference-element"],"discreteOptions":[1040],"durationOptions":[1040],"endTimeOfDay":[1026,"end-time-of-day"],"startTimeOfDay":[1026,"start-time-of-day"],"thresholdOptions":[1040],"utcOffset":[1026,"utc-offset"],"visualizationType":[1025,"visualization-type"],"icon":[1025],"label":[1025],"headingLevel":[1026,"heading-level"],"hideTimeRangeSlider":[1028,"hide-time-range-slider"],"hideTimezone":[1028,"hide-timezone"],"hideDatePicker":[1028,"hide-date-picker"],"hideVisualizationOptions":[1028,"hide-visualization-options"],"hideColorPicker":[1028,"hide-color-picker"],"hideTooltip":[1028,"hide-tooltip"],"position":[1025],"state":[1537],"destroy":[64],"getDuration":[64],"start":[64],"stop":[64]}];
const ArcgisShadowCast$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisShadowCast extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useShadowCastWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.discreteOptions = this.viewModel.discreteOptions;
        this.durationOptions = this.viewModel.durationOptions;
        this.endTimeOfDay = this.viewModel.endTimeOfDay;
        this.startTimeOfDay = this.viewModel.startTimeOfDay;
        this.thresholdOptions = this.viewModel.thresholdOptions;
        this.utcOffset = this.viewModel.utcOffset;
        this.visualizationType = this.viewModel.visualizationType;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.headingLevel = this.widget.headingLevel;
        this.hideTimeRangeSlider = this.widget.visibleElements.timeRangeSlider;
        this.hideTimezone = this.widget.visibleElements.timezone;
        this.hideDatePicker = this.widget.visibleElements.datePicker;
        this.hideVisualizationOptions = this.widget.visibleElements.visualizationOptions;
        this.hideColorPicker = this.widget.visibleElements.colorPicker;
        this.hideTooltip = this.widget.visibleElements.tooltip;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async getDuration(point) {
        return this.widget?.viewModel.getDuration(point);
    }
    async start() {
        this.widget?.viewModel.start();
    }
    async stop() {
        this.widget?.viewModel.stop();
    }
    get el() { return this; }
    static get style() { return ArcgisShadowCastStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-shadow-cast"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-shadow-cast":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisShadowCast$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisShadowCast = ArcgisShadowCast$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisShadowCast, defineCustomElement };
