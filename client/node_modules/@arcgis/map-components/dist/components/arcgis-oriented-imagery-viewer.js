/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { u as usePropertyChange } from './index3.js';
import { _ as newWidgetsOrientedImageryViewer, $ as newLayersOrientedImageryLayer } from './index2.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as useControllerManager, g as getSet } from './index4.js';

const orientedImageryViewerCss = "";
const ArcgisOrientedImageryViewerStyle0 = orientedImageryViewerCss;

const useOrientedImageryViewerWidget = makeWidgetController(newWidgetsOrientedImageryViewer);
const __cmpMeta = [0,"arcgis-oriented-imagery-viewer",{"icon":[1025],"label":[1025],"position":[1025],"referenceElement":[1025,"reference-element"],"currentCoverageVisible":[1028,"current-coverage-visible"],"disabled":[1028],"galleryOpened":[1028,"gallery-opened"],"imageEnhancementToolActive":[1028,"image-enhancement-tool-active"],"imageGalleryEnabled":[1028,"image-gallery-enabled"],"orientedImageryLayerItemId":[1025,"oriented-imagery-layer-item-id"],"isAdditionalCoverageVisible":[1028,"is-additional-coverage-visible"],"isAdditionalPointSourcesVisible":[1028,"is-additional-point-sources-visible"],"layer":[1040],"mapImageConversionToolState":[1028,"map-image-conversion-tool-state"],"navigationToolActive":[1028,"navigation-tool-active"],"referencePoint":[1040],"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"destroy":[64]}];
const ArcgisOrientedImageryViewer$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisOrientedImageryViewer extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useOrientedImageryViewerWidget(this);
        this.viewModel = this.widget.viewModel;
        this._hasOrientedImageryLayerToAdd = false;
        this.arcgisPropertyChange = usePropertyChange()("imageGalleryEnabled", "layer");
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.position = "bottom-left";
        this.referenceElement = undefined;
        this.currentCoverageVisible = this.widget.currentCoverageVisible;
        this.disabled = this.widget.disabled;
        this.galleryOpened = this.widget.galleryOpened;
        this.imageEnhancementToolActive = this.widget.imageEnhancementToolActive;
        this.imageGalleryEnabled = this.widget.imageGalleryEnabled;
        this.orientedImageryLayerItemId = getSet(undefined, {
            set: (value) => {
                if (value && this.widget) {
                    newLayersOrientedImageryLayer({
                        portalItem: {
                            id: value,
                        },
                    })
                        .then((layer) => {
                        this.layer = layer;
                        if (this.widget.view) {
                            this.widget.view?.map.add(this.layer);
                        }
                        else {
                            this._hasOrientedImageryLayerToAdd = true;
                        }
                    })
                        .catch(console.error);
                }
                return value;
            },
        });
        this.isAdditionalCoverageVisible = this.widget.isAdditionalCoverageVisible;
        this.isAdditionalPointSourcesVisible = this.widget.isAdditionalPointSourcesVisible;
        this.layer = this.widget.layer;
        this.mapImageConversionToolState = this.widget.mapImageConversionToolState;
        this.navigationToolActive = this.widget.navigationToolActive;
        this.referencePoint = this.widget.referencePoint;
        this.autoDestroyDisabled = false;
    }
    //--------------------------------------------------------------------------
    //
    //  Lifecycle
    //
    //--------------------------------------------------------------------------
    componentDidLoad() {
        if (this._hasOrientedImageryLayerToAdd) {
            if (this.widget.view) {
                this.widget.view?.map.add(this.layer);
                this._hasOrientedImageryLayerToAdd = false;
            }
            else {
                this.el.addEventListener("arcgisReady", () => {
                    this.widget.view.map.add(this.layer);
                    this._hasOrientedImageryLayerToAdd = false;
                }, { once: true });
            }
        }
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    get el() { return this; }
    static get style() { return ArcgisOrientedImageryViewerStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-oriented-imagery-viewer"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-oriented-imagery-viewer":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisOrientedImageryViewer$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisOrientedImageryViewer = ArcgisOrientedImageryViewer$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisOrientedImageryViewer, defineCustomElement };
