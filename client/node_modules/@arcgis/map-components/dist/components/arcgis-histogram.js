/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { P as newWidgetsHistogram } from './index2.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as usePropertyChange } from './index3.js';
import { u as useControllerManager } from './index4.js';

const histogramCss = "arcgis-histogram{}";
const ArcgisHistogramStyle0 = histogramCss;

const useHistogramWidget = makeWidgetController(newWidgetsHistogram);
const __cmpMeta = [0,"arcgis-histogram",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"referenceElement":[1025,"reference-element"],"icon":[1025],"label":[1025],"average":[1026],"barCreatedFunction":[1040],"bins":[1040],"dataLineCreatedFunction":[1040],"dataLines":[1040],"labelFormatFunction":[1040],"layout":[1025],"max":[1026],"min":[1026],"position":[1025],"state":[1537],"destroy":[64]}];
const ArcgisHistogram$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisHistogram extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useHistogramWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.average = this.widget.average;
        this.barCreatedFunction = this.widget.barCreatedFunction;
        this.bins = this.widget.bins;
        this.dataLineCreatedFunction = this.widget.dataLineCreatedFunction;
        this.dataLines = this.widget.dataLines;
        this.labelFormatFunction = this.widget.labelFormatFunction;
        this.layout = this.widget.layout;
        this.max = this.widget.max;
        this.min = this.widget.min;
        this.position = "bottom-left";
        this.state = this.widget.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    get el() { return this; }
    static get style() { return ArcgisHistogramStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-histogram"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-histogram":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisHistogram$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisHistogram = ArcgisHistogram$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisHistogram, defineCustomElement };
