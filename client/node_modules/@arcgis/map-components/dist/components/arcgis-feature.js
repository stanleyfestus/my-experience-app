/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { H as newWidgetsFeature } from './index2.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as usePropertyChange } from './index3.js';
import { u as useControllerManager } from './index4.js';

const featureCss = "";
const ArcgisFeatureStyle0 = featureCss;

const useFeatureWidget = makeWidgetController(newWidgetsFeature);
const __cmpMeta = [0,"arcgis-feature",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"icon":[1025],"label":[1025],"headingLevel":[1026,"heading-level"],"referenceElement":[1025,"reference-element"],"defaultPopupTemplateEnabled":[1028,"default-popup-template-enabled"],"graphic":[1040],"location":[1040],"map":[1040],"spatialReference":[1040],"hideTitle":[1028,"hide-title"],"hideContentAttachments":[1028,"hide-content-attachments"],"hideContentFields":[1028,"hide-content-fields"],"hideContentMedia":[1028,"hide-content-media"],"hideContentText":[1028,"hide-content-text"],"hideContentExpression":[1028,"hide-content-expression"],"hideLastEditInfo":[1028,"hide-last-edit-info"],"position":[1025],"state":[1537],"destroy":[64],"nextMedia":[64],"previousMedia":[64],"setActiveMedia":[64]}];
const ArcgisFeature$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisFeature extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useFeatureWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.headingLevel = this.widget.headingLevel;
        this.referenceElement = undefined;
        this.defaultPopupTemplateEnabled = this.widget.defaultPopupTemplateEnabled;
        this.graphic = this.widget.graphic;
        this.location = this.viewModel.location;
        this.map = this.widget.map;
        this.spatialReference = this.widget.spatialReference;
        this.hideTitle = this.widget.visibleElements.title;
        this.hideContentAttachments = this.widget.visibleElements.content.attachments;
        this.hideContentFields = this.widget.visibleElements.content.fields;
        this.hideContentMedia = this.widget.visibleElements.content.media;
        this.hideContentText = this.widget.visibleElements.content.text;
        this.hideContentExpression = this.widget.visibleElements.content.expression;
        this.hideLastEditInfo = this.widget.visibleElements.lastEditedInfo;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async nextMedia(contentElementIndex) {
        this.widget?.nextMedia(contentElementIndex);
    }
    async previousMedia(contentElementIndex) {
        this.widget?.previousMedia(contentElementIndex);
    }
    async setActiveMedia(contentElementIndex, mediaInfoIndex) {
        this.widget?.setActiveMedia(contentElementIndex, mediaInfoIndex);
    }
    get el() { return this; }
    static get style() { return ArcgisFeatureStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-feature"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-feature":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisFeature$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisFeature = ArcgisFeature$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisFeature, defineCustomElement };
