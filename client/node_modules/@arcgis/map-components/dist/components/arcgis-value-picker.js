/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { ak as newWidgetsValuePicker } from './index2.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as usePropertyChange } from './index3.js';
import { u as useControllerManager } from './index4.js';

const valuePickerCss = "arcgis-value-picker{}";
const ArcgisValuePickerStyle0 = valuePickerCss;

const useValuePickerWidget = makeWidgetController(newWidgetsValuePicker);
const __cmpMeta = [0,"arcgis-value-picker",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"referenceElement":[1025,"reference-element"],"position":[1025],"canNext":[1540,"can-next"],"canPlay":[1540,"can-play"],"canPrevious":[1540,"can-previous"],"caption":[1025],"component":[1040],"icon":[1025],"label":[1025],"layout":[1025],"loop":[1028],"playRate":[1026,"play-rate"],"hideNextButton":[1028,"hide-next-button"],"hidePlayButton":[1028,"hide-play-button"],"hidePreviousButton":[1028,"hide-previous-button"],"values":[1040],"destroy":[64],"next":[64],"pause":[64],"play":[64],"previous":[64]}];
const ArcgisValuePicker$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisValuePicker extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.widgetAnimate = createEvent(this, "arcgisAnimate", 7);
        this.widgetNext = createEvent(this, "arcgisNext", 7);
        this.widgetPause = createEvent(this, "arcgisPause", 7);
        this.widgetPlay = createEvent(this, "arcgisPlay", 7);
        this.widgetPrevious = createEvent(this, "arcgisPrevious", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useValuePickerWidget(this);
        this.arcgisPropertyChange = usePropertyChange()("values");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.position = "bottom-left";
        this.canNext = this.widget.canNext;
        this.canPlay = this.widget.canPlay;
        this.canPrevious = this.widget.canPrevious;
        this.caption = this.widget.caption;
        this.component = this.widget.component;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.layout = this.widget.layout;
        this.loop = this.widget.loop;
        this.playRate = this.widget.playRate;
        this.hideNextButton = this.widget.visibleElements.nextButton;
        this.hidePlayButton = this.widget.visibleElements.playButton;
        this.hidePreviousButton = this.widget.visibleElements.previousButton;
        this.values = this.widget.values;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async next() {
        this.widget?.next();
    }
    async pause() {
        this.widget?.pause();
    }
    async play() {
        this.widget?.play();
    }
    async previous() {
        this.widget?.previous();
    }
    get el() { return this; }
    static get style() { return ArcgisValuePickerStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-value-picker"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-value-picker":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisValuePicker$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisValuePicker = ArcgisValuePicker$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisValuePicker, defineCustomElement };
