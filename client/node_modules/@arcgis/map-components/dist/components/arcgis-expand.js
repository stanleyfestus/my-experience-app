/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { G as newWidgetsExpand } from './index2.js';
import { u as useControllerManager } from './index4.js';
import { m as makeWidgetController } from './useWidget.js';

const expandCss = "arcgis-expand{pointer-events:auto}arcgis-expand>.esri-expand__content--expanded{background-color:var(--calcite-color-background)}";
const ArcgisExpandStyle0 = expandCss;

const useExpandWidget = makeWidgetController(newWidgetsExpand);
const __cmpMeta = [0,"arcgis-expand",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"icon":[1025],"content":[1025],"label":[1025],"autoCollapse":[1028,"auto-collapse"],"closeOnEsc":[1028,"close-on-esc"],"collapseIcon":[1025,"collapse-icon"],"collapseTooltip":[1025,"collapse-tooltip"],"expanded":[1540],"expandIcon":[1025,"expand-icon"],"expandTooltip":[1025,"expand-tooltip"],"group":[1025],"iconNumber":[1026,"icon-number"],"mode":[1025],"placement":[1025],"position":[1025],"referenceElement":[1025,"reference-element"],"destroy":[64],"collapse":[64],"expand":[64],"toggle":[64]}];
const ArcgisExpand$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisExpand extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useExpandWidget(this);
        this.viewModel = this.widget.viewModel;
        this.autoDestroyDisabled = false;
        this.icon = this.widget.icon;
        this.content = this.widget.content;
        this.label = this.widget.label;
        this.autoCollapse = this.widget.autoCollapse;
        this.closeOnEsc = this.widget.closeOnEsc;
        this.collapseIcon = this.widget.collapseIcon;
        this.collapseTooltip = this.widget.collapseTooltip;
        this.expanded = this.widget.expanded;
        this.expandIcon = this.widget.expandIcon;
        this.expandTooltip = this.widget.expandTooltip;
        this.group = this.widget.group;
        this.iconNumber = this.widget.iconNumber;
        this.mode = this.widget.mode;
        this.placement = this.widget.placement;
        this.position = "top-right";
        this.referenceElement = undefined;
        /**
         * This refers to the content inside the expand's popup. This is different
         * from this.el.childElem which refers to the expand's UI (which in part
         * includes the popup with this.content)
         */
        this.content ?? (this.content = document.createElement("div"));
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async collapse() {
        this.widget?.collapse();
    }
    async expand() {
        this.widget?.expand();
    }
    async toggle() {
        if (this.expanded) {
            await this.collapse();
        }
        else {
            await this.expand();
        }
    }
    get el() { return this; }
    static get style() { return ArcgisExpandStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-expand"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-expand":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisExpand$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisExpand = ArcgisExpand$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisExpand, defineCustomElement };
