/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { Q as newWidgetsHistogramRangeSlider } from './index2.js';
import { u as usePropertyChange } from './index3.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as useControllerManager } from './index4.js';

const histogramRangeSliderCss = "arcgis-histogram-range-slider{}";
const ArcgisHistogramRangeSliderStyle0 = histogramRangeSliderCss;

const useHistogramRangeSliderWidget = makeWidgetController(newWidgetsHistogramRangeSlider);
const __cmpMeta = [0,"arcgis-histogram-range-slider",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"referenceElement":[1025,"reference-element"],"icon":[1025],"label":[1025],"average":[1026],"barCreatedFunction":[1040],"bins":[1040],"dataLineCreatedFunction":[1040],"dataLines":[1040],"excludedBarColor":[1040],"includedBarColor":[1040],"labelFormatFunction":[1040],"max":[1026],"min":[1026],"precision":[1026],"rangeType":[1025,"range-type"],"standardDeviation":[1026,"standard-deviation"],"standardDeviationCount":[1026,"standard-deviation-count"],"values":[1040],"position":[1025],"state":[1537],"destroy":[64],"generateWhereClause":[64]}];
const ArcgisHistogramRangeSlider$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisHistogramRangeSlider extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useHistogramRangeSliderWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.average = this.widget.average;
        this.barCreatedFunction = this.widget.barCreatedFunction;
        this.bins = this.widget.bins;
        this.dataLineCreatedFunction = this.widget.dataLineCreatedFunction;
        this.dataLines = this.widget.dataLines;
        this.excludedBarColor = this.widget.excludedBarColor;
        this.includedBarColor = this.widget.includedBarColor;
        this.labelFormatFunction = this.widget.labelFormatFunction;
        this.max = this.widget.max;
        this.min = this.widget.min;
        this.precision = this.widget.precision;
        this.rangeType = this.widget.rangeType;
        this.standardDeviation = this.widget.standardDeviation;
        this.standardDeviationCount = this.widget.standardDeviationCount;
        this.values = this.widget.values;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    /**
     * Generates a SQL where clause based on a given field and the slider's
     * rangeType
     */
    async generateWhereClause(field) {
        return this.widget.generateWhereClause(field);
    }
    get el() { return this; }
    static get style() { return ArcgisHistogramRangeSliderStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-histogram-range-slider"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-histogram-range-slider":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisHistogramRangeSlider$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisHistogramRangeSlider = ArcgisHistogramRangeSlider$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisHistogramRangeSlider, defineCustomElement };
