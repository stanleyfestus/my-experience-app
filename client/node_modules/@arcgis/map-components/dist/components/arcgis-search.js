/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { u as usePropertyChange } from './index3.js';
import { a7 as newWidgetsSearch } from './index2.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as useControllerManager } from './index4.js';

const searchCss = "";
const ArcgisSearchStyle0 = searchCss;

const useSearchWidget = makeWidgetController(newWidgetsSearch);
const __cmpMeta = [0,"arcgis-search",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"referenceElement":[1025,"reference-element"],"activeMenu":[1025,"active-menu"],"activeSource":[1040],"activeSourceIndex":[1026,"active-source-index"],"allPlaceholder":[1025,"all-placeholder"],"allSources":[1040],"autoSelectDisabled":[1028,"auto-select-disabled"],"defaultSources":[1040],"disabled":[1540],"icon":[1025],"label":[1025],"includeDefaultSourcesDisabled":[1028,"include-default-sources-disabled"],"locationDisabled":[1028,"location-disabled"],"maxResults":[1026,"max-results"],"maxSuggestions":[1026,"max-suggestions"],"minSuggestCharacters":[1026,"min-suggest-characters"],"popupDisabled":[1028,"popup-disabled"],"popupTemplate":[1040],"portal":[1040],"resultGraphic":[1040],"resultGraphicDisabled":[1028,"result-graphic-disabled"],"results":[1040],"searchAllDisabled":[1028,"search-all-disabled"],"searchTerm":[1025,"search-term"],"selectedResult":[1040],"sources":[1040],"suggestions":[1040],"suggestionsDisabled":[1028,"suggestions-disabled"],"position":[1025],"state":[1537],"blurSearch":[64],"clearSearch":[64],"focusSearch":[64],"destroy":[64],"search":[64],"suggest":[64]}];
const ArcgisSearch$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisSearch extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.widgetSearchBlur = createEvent(this, "arcgisBlur", 7);
        this.widgetSearchClear = createEvent(this, "arcgisClear", 7);
        this.widgetSearchComplete = createEvent(this, "arcgisComplete", 7);
        this.widgetSearchFocus = createEvent(this, "arcgisFocus", 7);
        this.widgetSearchStart = createEvent(this, "arcgisStart", 7);
        this.widgetSelectResult = createEvent(this, "arcgisSelectResult", 7);
        this.widgetSuggestComplete = createEvent(this, "arcgisSuggestComplete", 7);
        this.widgetSuggestStart = createEvent(this, "arcgisSuggestStart", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useSearchWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.activeMenu = this.widget.activeMenu;
        this.activeSource = this.widget.activeSource;
        this.activeSourceIndex = this.widget.activeSourceIndex;
        this.allPlaceholder = this.widget.allPlaceholder;
        this.allSources = this.widget.allSources;
        this.autoSelectDisabled = this.widget.autoSelect;
        this.defaultSources = this.widget.defaultSources;
        this.disabled = this.widget.disabled;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.includeDefaultSourcesDisabled = this.widget.includeDefaultSources;
        this.locationDisabled = this.widget.locationEnabled;
        this.maxResults = this.widget.maxResults;
        this.maxSuggestions = this.widget.maxSuggestions;
        this.minSuggestCharacters = this.widget.minSuggestCharacters;
        this.popupDisabled = this.widget.popupEnabled;
        this.popupTemplate = this.widget.popupTemplate;
        this.portal = this.widget.portal;
        this.resultGraphic = this.widget.resultGraphic;
        this.resultGraphicDisabled = this.widget.resultGraphicEnabled;
        this.results = this.widget.results;
        this.searchAllDisabled = this.widget.searchAllEnabled;
        this.searchTerm = this.widget.searchTerm;
        this.selectedResult = this.widget.selectedResult;
        this.sources = this.widget.sources;
        this.suggestions = this.widget.suggestions;
        this.suggestionsDisabled = this.widget.suggestionsEnabled;
        this.position = "top-right";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    async blurSearch() {
        this.widget?.blur();
    }
    async clearSearch() {
        this.widget?.clear();
    }
    async focusSearch() {
        this.widget?.focus();
    }
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async search(term) {
        return await this.widget?.search(term);
    }
    async suggest(term) {
        return await this.widget?.suggest(term);
    }
    get el() { return this; }
    static get style() { return ArcgisSearchStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-search"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-search":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisSearch$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisSearch = ArcgisSearch$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisSearch, defineCustomElement };
