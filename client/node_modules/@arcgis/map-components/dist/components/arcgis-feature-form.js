/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { proxyCustomElement, HTMLElement, createEvent, forceUpdate } from '@stencil/core/internal/client';
import { I as newWidgetsFeatureForm } from './index2.js';
import { u as usePropertyChange } from './index3.js';
import { m as makeWidgetController } from './useWidget.js';
import { u as useControllerManager } from './index4.js';

const featureFormCss = "";
const ArcgisFeatureFormStyle0 = featureFormCss;

const useFeatureFormWidget = makeWidgetController(newWidgetsFeatureForm);
const __cmpMeta = [0,"arcgis-feature-form",{"autoDestroyDisabled":[1028,"auto-destroy-disabled"],"icon":[1025],"label":[1025],"headingLevel":[1026,"heading-level"],"referenceElement":[1025,"reference-element"],"position":[1025],"feature":[1040],"formTemplate":[1040],"groupDisplay":[1025,"group-display"],"layer":[1040],"timeZone":[1025,"time-zone"],"state":[1537],"destroy":[64],"getValues":[64],"submit":[64]}];
const ArcgisFeatureForm$1 = /*@__PURE__*/ proxyCustomElement(class ArcgisFeatureForm extends HTMLElement {
    connectedCallback() { this.manager._connectedCallback(); }
    disconnectedCallback() { this.manager._disconnectedCallback(); }
    constructor() {
        super();
        this.__registerHost();
this.constructor.__registerControllers = ()=>__cmpMeta[2]??{};
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.widgetSubmit = createEvent(this, "arcgisSubmit", 7);
        this.widgetValueChange = createEvent(this, "arcgisValueChange", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this,forceUpdate);
        this.widget = useFeatureFormWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.headingLevel = this.widget.headingLevel;
        this.referenceElement = undefined;
        this.position = "bottom-left";
        this.feature = this.widget.feature;
        this.formTemplate = this.widget.formTemplate;
        this.groupDisplay = this.widget.groupDisplay;
        this.layer = this.widget.layer;
        this.timeZone = this.widget.timeZone;
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async getValues() {
        return this.widget?.getValues();
    }
    async submit() {
        return this.widget?.submit();
    }
    get el() { return this; }
    static get style() { return ArcgisFeatureFormStyle0; }
}, __cmpMeta);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arcgis-feature-form"];
    components.forEach(tagName => { switch (tagName) {
        case "arcgis-feature-form":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArcgisFeatureForm$1);
            }
            break;
    } });
}
defineCustomElement$1();

const ArcgisFeatureForm = ArcgisFeatureForm$1;
const defineCustomElement = defineCustomElement$1;

export { ArcgisFeatureForm, defineCustomElement };
