import type { ControllerManager, Use } from "@arcgis/components-controllers";
import type { Nil } from "@arcgis/components-utils";
import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type { ArcgisReferenceElement } from "../../utils/component-utils";
declare const useCompassViewModel: (component: import("@arcgis/components-controllers").StencilLifecycles & {
    manager: ControllerManager<never>;
    el: HTMLElement;
    autoDestroyDisabled?: boolean | undefined;
    destroy?: (() => Promise<void>) | undefined;
} & Pick<__esri.CompassViewModel, never> & {
    reactiveUtils?: __esri.reactiveUtils | undefined;
    state?: "rotation" | "disabled" | "compass" | undefined;
    icon: string | Nil;
    label: string | Nil;
    referenceElement: string | ArcgisReferenceElement | Nil;
    arcgisReady: EventEmitter<never> | {
        emit(): CustomEvent<undefined>;
    };
    position: __esri.UIPosition;
    arcgisPropertyChange: import("@arcgis/components-controllers").CovariantEventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: (HTMLElement & {
            ownedBy?: HTMLElement | undefined;
        }) | undefined;
        view?: __esri.MapView | __esri.SceneView | undefined;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: unknown): unknown;
} | undefined) => __esri.CompassViewModel;
export declare class ArcgisCompass implements Use<typeof useCompassViewModel> {
    manager: ControllerManager<this>;
    messages: {
        _lang: string;
        _t9nLocale: "el" | "id" | "hr" | "th" | "tr" | "ar" | "bg" | "bs" | "ca" | "cs" | "da" | "de" | "en" | "es" | "et" | "fi" | "fr" | "he" | "hu" | "it" | "ja" | "ko" | "lt" | "lv" | "nl" | "nb" | "pl" | "pt-BR" | "pt-PT" | "ro" | "ru" | "sk" | "sl" | "sr" | "sv" | "uk" | "vi" | "zh-CN" | "zh-HK" | "zh-TW";
        _loading: boolean;
        _overrides: {
            componentLabel?: string | undefined;
            reset?: string | undefined;
        };
        _original?: {
            componentLabel: string;
            reset: string;
        } | undefined;
    } & Partial<{
        componentLabel: string;
        reset: string;
    }>;
    viewModel: __esri.CompassViewModel;
    el: HTMLElement;
    arcgisPropertyChange: import("@arcgis/components-controllers").CovariantEventEmitter<{
        name: "orientation" | "state";
    }> & CustomEvent<{
        name: "orientation" | "state";
    }>;
    arcgisReady: EventEmitter<never>;
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporary hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    icon: string;
    label: Nil | string;
    position: __esri.UIPosition;
    orientation: __esri.Orientation;
    referenceElement: ArcgisReferenceElement | Nil | string;
    state: "rotation" | "disabled" | "compass";
    render(): VNode;
    reset(): Promise<void>;
    destroy(): Promise<void>;
    private _toRotationTransform;
    private _reset;
}
export {};
