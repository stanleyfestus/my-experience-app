import type { EventEmitter } from "../../stencil-public-runtime";
import type { ArcgisReferenceElement } from "../../utils/component-utils";
import type { Use, ControllerManager } from "@arcgis/components-controllers";
import type { Nil } from "@arcgis/components-utils";
declare const useExpandWidget: (component: import("@arcgis/components-controllers").StencilLifecycles & {
    manager: ControllerManager<never>;
    el: HTMLElement;
    autoDestroyDisabled?: boolean | undefined;
    destroy?: (() => Promise<void>) | undefined;
} & Pick<__esri.Expand, "icon" | "label" | "viewModel" | "group" | "mode" | "content" | "autoCollapse" | "closeOnEsc" | "collapseIcon" | "collapseTooltip" | "expanded" | "expandIcon" | "expandTooltip" | "iconNumber" | "placement"> & {
    reactiveUtils?: __esri.reactiveUtils | undefined;
    state?: unknown;
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporary hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    viewModel?: __esri.ExpandViewModel | undefined;
    icon: string | Nil;
    label: string | Nil;
    referenceElement: string | ArcgisReferenceElement | Nil;
    position: __esri.UIPosition;
    arcgisReady: EventEmitter<never> | {
        emit(): CustomEvent<undefined>;
    };
    arcgisPropertyChange: import("@arcgis/components-controllers").CovariantEventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: (HTMLElement & {
            ownedBy?: HTMLElement | undefined;
        }) | undefined;
        view?: __esri.MapView | __esri.SceneView | Nil;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: __esri.ExpandProperties): __esri.ExpandProperties | Promise<__esri.ExpandProperties>;
} | undefined) => __esri.Expand;
export declare class ArcgisExpand implements Use<typeof useExpandWidget> {
    manager: ControllerManager<this>;
    el: HTMLElement & {
        childElem?: HTMLElement;
    };
    widget: __esri.Expand;
    viewModel: __esri.ExpandViewModel;
    constructor();
    /**
     * If true, the component will not be destroyed automatically when it is
     * disconnected from the document. This is useful when you want to move the
     * component to a different place on the page, or temporary hide it. If this
     * is set, make sure to call the \`destroy\` method when you are done to prevent
     * memory leaks.
     */
    autoDestroyDisabled: boolean;
    /** @internal */
    icon: string;
    /** @internal */
    content: string | Node | __esri.Widget;
    label: string;
    autoCollapse: boolean;
    closeOnEsc: boolean | Function;
    collapseIcon: string;
    collapseTooltip: string;
    expanded: boolean;
    expandIcon: string;
    expandTooltip: string;
    group: string;
    iconNumber: number;
    mode: "auto" | "floating" | "drawer";
    placement: "left" | "right" | "top" | "bottom" | "auto" | "auto-start" | "auto-end" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end" | "leading-start" | "leading" | "leading-end" | "trailing-end" | "trailing" | "trailing-start";
    position: __esri.UIPosition;
    referenceElement: ArcgisReferenceElement | Nil | string;
    arcgisReady: EventEmitter<never>;
    arcgisPropertyChange: undefined;
    /** Permanently destroy the component */
    destroy(): Promise<void>;
    collapse(): Promise<void>;
    expand(): Promise<void>;
    toggle(): Promise<void>;
}
export {};
