import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type { ArcgisReferenceElement } from "../../utils/component-utils";
import type { Nil } from "@arcgis/components-utils";
import type { Use, ControllerManager } from "@arcgis/components-controllers";
declare const useLocateViewModel: (component: import("@arcgis/components-controllers").StencilLifecycles & {
    manager: ControllerManager<never>;
    el: HTMLElement;
    autoDestroyDisabled?: boolean | undefined;
    destroy?: (() => Promise<void>) | undefined;
} & Pick<__esri.LocateViewModel, never> & {
    reactiveUtils?: __esri.reactiveUtils | undefined;
    state?: "ready" | "error" | "disabled" | "feature-unsupported" | "locating" | undefined;
    icon: string | Nil;
    label: string | Nil;
    referenceElement: string | ArcgisReferenceElement | Nil;
    arcgisReady: EventEmitter<never> | {
        emit(): CustomEvent<undefined>;
    };
    position: __esri.UIPosition;
    arcgisPropertyChange: import("@arcgis/components-controllers").CovariantEventEmitter<{
        name: string;
    }> | undefined;
    el: HTMLElement & {
        childElem?: (HTMLElement & {
            ownedBy?: HTMLElement | undefined;
        }) | undefined;
        view?: __esri.MapView | __esri.SceneView | undefined;
    };
    autoDestroyDisabled: boolean;
    destroy: () => Promise<void>;
}, options?: {
    editConstructorProperties(props: unknown): unknown;
} | undefined) => __esri.LocateViewModel;
export declare class ArcgisLocate implements Use<typeof useLocateViewModel> {
    manager: ControllerManager<this>;
    messages: {
        _lang: string;
        _t9nLocale: "el" | "id" | "hr" | "th" | "tr" | "ar" | "bg" | "bs" | "ca" | "cs" | "da" | "de" | "en" | "es" | "et" | "fi" | "fr" | "he" | "hu" | "it" | "ja" | "ko" | "lt" | "lv" | "nl" | "nb" | "pl" | "pt-BR" | "pt-PT" | "ro" | "ru" | "sk" | "sl" | "sr" | "sv" | "uk" | "vi" | "zh-CN" | "zh-HK" | "zh-TW";
        _loading: boolean;
        _overrides: {
            componentLabel?: string | undefined;
            title?: string | undefined;
            currentLocation?: string | undefined;
            timestamp?: string | undefined;
            latitude?: string | undefined;
            longitude?: string | undefined;
            accuracy?: string | undefined;
            altitude?: string | undefined;
            altitudeAccuracy?: string | undefined;
            heading?: string | undefined;
            speed?: string | undefined;
            permissionError?: string | undefined;
            timeoutError?: string | undefined;
            positionUnavailable?: string | undefined;
            cancel?: string | undefined;
        };
        _original?: {
            componentLabel: string;
            title: string;
            currentLocation: string;
            timestamp: string;
            latitude: string;
            longitude: string;
            accuracy: string;
            altitude: string;
            altitudeAccuracy: string;
            heading: string;
            speed: string;
            permissionError: string;
            timeoutError: string;
            positionUnavailable: string;
            cancel: string;
        } | undefined;
    } & Partial<{
        componentLabel: string;
        title: string;
        currentLocation: string;
        timestamp: string;
        latitude: string;
        longitude: string;
        accuracy: string;
        altitude: string;
        altitudeAccuracy: string;
        heading: string;
        speed: string;
        permissionError: string;
        timeoutError: string;
        positionUnavailable: string;
        cancel: string;
    }>;
    viewModel: __esri.LocateViewModel;
    el: HTMLElement;
    arcgisPropertyChange: import("@arcgis/components-controllers").CovariantEventEmitter<{
        name: "state";
    }> & CustomEvent<{
        name: "state";
    }>;
    arcgisReady: EventEmitter<never>;
    viewModelLocate: EventEmitter<__esri.LocateLocateEvent>;
    viewModelLocateError: EventEmitter<__esri.LocateViewModelLocateErrorEvent>;
    /**
     * If true, the component will not be destroyed automatically when
     * it is disconnected from the document. This is useful when you
     * want to move the component to a different place on the page, or
     * temporary hide it. If this is set, make sure to call the
     * \`destroy\` method when you are done to prevent memory leaks.
     */
    autoDestroyDisabled: boolean;
    geolocationOptions: any;
    goToLocationDisabled: boolean;
    graphic: __esri.Graphic;
    icon: Nil | string;
    label: Nil | string;
    popupDisabled: boolean;
    position: __esri.UIPosition;
    referenceElement: ArcgisReferenceElement | Nil | string;
    scale: number;
    state: "ready" | "error" | "disabled" | "feature-unsupported" | "locating";
    /**
     * This function provides the ability to interrupt and cancel the process of
     * programmatically obtaining the location of the user's device.
     */
    cancelLocate(): Promise<void>;
    /** Permanently destroy the component */
    destroy(): Promise<void>;
    locate(): Promise<GeolocationPosition | null>;
    render(): VNode;
    private _locate;
    private _localizeError;
}
export {};
