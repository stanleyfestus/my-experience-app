import type { EventEmitter, VNode } from "../../stencil-public-runtime";
import type UtilityNetworkAssociations from "@arcgis/core/widgets/UtilityNetworkAssociations";
import type { ArcgisReferenceElement, WidgetElement } from "../../utils/component-utils";
import type { ArcGISMapView } from "../types";
import type { Nil } from "@arcgis/components-utils";
export type UtilityNetworkAssociationsWidget = InstanceType<typeof UtilityNetworkAssociations>;
export declare class ArcgisUtilityNetworkAssociations implements WidgetElement {
    el: HTMLDivElement & {
        childElem?: HTMLElement;
    };
    referenceElement: ArcgisReferenceElement | Nil | string;
    referenceElementWatcher(value: ArcgisReferenceElement | Nil | string): void;
    autoRefreshAssociationsDisabled: boolean;
    autoRefreshAssociationsDisabledWatcher(value: boolean): void;
    connectivityAssociationsLineSymbol: UtilityNetworkAssociationsWidget["connectivityAssociationsLineSymbol"];
    connectivityAssociationsLineSymbolWatcher(value: UtilityNetworkAssociationsWidget["connectivityAssociationsLineSymbol"]): void;
    includeConnectivityAssociationsDisabled: boolean;
    includeConnectivityAssociationsDisabledWatcher(value: boolean): void;
    includeStructuralAttachmentAssociationsDisabled: boolean;
    includeStructuralAttachmentAssociationsDisabledWatcher(value: boolean): void;
    maxAllowableAssociations: number;
    maxAllowableAssociationsWatcher(value: number): void;
    maxAllowableAssociationsSliderMax: UtilityNetworkAssociationsWidget["maxAllowableAssociationsSliderMax"];
    maxAllowableAssociationsSliderMaxWatcher(value: UtilityNetworkAssociationsWidget["maxAllowableAssociationsSliderMax"]): void;
    maxAllowableAssociationsSliderMin: UtilityNetworkAssociationsWidget["maxAllowableAssociationsSliderMin"];
    maxAllowableAssociationsSliderMinWatcher(value: UtilityNetworkAssociationsWidget["maxAllowableAssociationsSliderMin"]): void;
    maxAllowableAssociationsSliderStep: UtilityNetworkAssociationsWidget["maxAllowableAssociationsSliderStep"];
    maxAllowableAssociationsSliderStepWatcher(value: UtilityNetworkAssociationsWidget["maxAllowableAssociationsSliderStep"]): void;
    showArrowsConnectivity: boolean;
    showArrowsConnectivityWatcher(value: boolean): void;
    showArrowsStructuralAttachment: boolean;
    showArrowsStructuralAttachmentWatcher(value: boolean): void;
    showAssociationsEnabled: boolean;
    showAssociationsEnabledWatcher(value: boolean): void;
    structuralAttachmentAssociationsLineSymbol: UtilityNetworkAssociationsWidget["structuralAttachmentAssociationsLineSymbol"];
    structuralAttachmentAssociationsLineSymbolWatcher(value: UtilityNetworkAssociationsWidget["structuralAttachmentAssociationsLineSymbol"]): void;
    utilityNetwork: UtilityNetworkAssociationsWidget["utilityNetwork"] | undefined;
    utilityNetworkWatcher(value: UtilityNetworkAssociationsWidget["utilityNetwork"]): void;
    visibleElementsConnectivityAssociationsSettingsArrowsToggle: boolean;
    visibleElementsConnectivityAssociationsSettingsArrowsToggleWatcher(value: boolean): void;
    visibleElementsConnectivityAssociationsSettingsCapSelect: boolean;
    visibleElementsConnectivityAssociationsSettingsCapSelectWatcher(value: boolean): void;
    visibleElementsConnectivityAssociationsSettingsColorPicker: boolean;
    visibleElementsConnectivityAssociationsSettingsColorPickerWatcher(value: boolean): void;
    visibleElementsConnectivityAssociationsSettingsStylePicker: boolean;
    visibleElementsConnectivityAssociationsSettingsStylePickerWatcher(value: boolean): void;
    visibleElementsConnectivityAssociationsSettingsWidthInput: boolean;
    visibleElementsConnectivityAssociationsSettingsWidthInputWatcher(value: boolean): void;
    visibleElementsMaxAllowableAssociationsSlider: boolean;
    visibleElementsMaxAllowableAssociationsSliderWatcher(value: boolean): void;
    visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggle: boolean;
    visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggleWatcher(value: boolean): void;
    visibleElementsStructuralAttachmentAssociationsSettingsCapSelect: boolean;
    visibleElementsStructuralAttachmentAssociationsSettingsCapSelectWatcher(value: boolean): void;
    visibleElementsStructuralAttachmentAssociationsSettingsStylePicker: boolean;
    visibleElementsStructuralAttachmentAssociationsSettingsStylePickerWatcher(value: boolean): void;
    visibleElementsStructuralAttachmentAssociationsSettingsWidthInput: boolean;
    visibleElementsStructuralAttachmentAssociationsSettingsWidthInputWatcher(value: boolean): void;
    position: __esri.UIPosition;
    positionWatcher(value: string): void;
    /**
     * Internal view of the component.
     *
     * @internal
     */
    view: ArcGISMapView;
    viewWatcher(value: ArcGISMapView): void;
    /**
     * Internal widget of the component.
     *
     * @internal
     */
    widget: UtilityNetworkAssociationsWidget;
    _watchHandles: __esri.WatchHandle[];
    arcgisReady: EventEmitter<never>;
    componentDidLoad(): Promise<void>;
    disconnectedCallback(): void;
    render(): VNode;
    private _addContainer;
    private _createParams;
    private _loadUtilityNetwork;
}
