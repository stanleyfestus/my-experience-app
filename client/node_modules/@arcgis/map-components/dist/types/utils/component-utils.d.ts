import type { Nil } from "@arcgis/components-utils";
import type { ArcGISMapView, ArcGISSceneView } from "../components/types";
import type { EventEmitter } from "../stencil-public-runtime";
import type { LitEventEmitter } from "@arcgis/components-controllers";
export type ArcgisReferenceElement = HTMLArcgisMapElement | HTMLArcgisSceneElement;
export type ArcgisParentElement = ArcgisReferenceElement | HTMLArcgisExpandElement | HTMLArcgisPlacementElement;
interface BaseComponentElement {
    referenceElement: ArcgisReferenceElement | Nil | string;
    view?: ArcGISMapView | ArcGISSceneView | Nil;
    position?: __esri.UIPosition;
}
export interface WidgetElement extends BaseComponentElement {
    el: HTMLElement & {
        childElem?: HTMLElement;
    };
    widget: any;
    _watchHandles: __esri.WatchHandle[];
}
/**
 * A type that represents either wrapped widget or a native map component. Used
 * in places where both need to be accepted.
 */
export type WidgetOrMapComponent = Pick<WidgetElement, "position" | "referenceElement" | "view"> & {
    el: HTMLElement & {
        view?: ArcGISMapView | ArcGISSceneView | Nil;
        parent?: ArcgisParentElement;
        childElem?: HTMLElement & {
            ownedBy?: HTMLElement;
        };
    };
    icon?: Nil | string;
    widget?: WidgetElement["widget"];
};
/** @deprecated Use this.manager.onLifecycle() instead */
export declare function addHandles(element: WidgetElement, handle: __esri.WatchHandle | __esri.WatchHandle[]): void;
/**
 * Find applicable arcgis-map, arcgis-scene, arcgis-expand or arcgis-placement
 * for the current component and attach to it
 *
 * @remarks
 * If the view property was set by the user directly (for backwards
 * comparability with MapView/SceneView), attachToParent() will return undefined
 * as attachToParent() is looking for component parents only.
 * If the view property was provided, the developer takes over the
 * responsibility of calling view.ui.add()
 */
export declare function attachToParent(component: WidgetOrMapComponent): ArcgisParentElement | undefined;
/**
 * Defines a view prop on the component's el and emits arcgisReady once that
 * prop is set by attachToParent()
 *
 * @deprecated Use useWidget or useViewModel instead
 */
export declare function defineViewProperty(component: WidgetOrMapComponent & {
    arcgisReady: EventEmitter<never> | LitEventEmitter;
}): void;
export declare function isNullOrEmptyString(value: string | null | undefined): boolean;
export declare function isValidInteger(value: number | null | undefined): boolean;
export declare function isNotSameCamera(camera: __esri.Camera, camera2: __esri.Camera): boolean;
export declare function isNotSameEnvironment(environment?: __esri.Environment | __esri.SceneViewEnvironment, environment2?: __esri.Environment | __esri.SceneViewEnvironment): boolean;
export declare function isNotSameViewpoint(viewpoint?: __esri.Viewpoint, viewpoint2?: __esri.Viewpoint): boolean;
export declare function parseCenter(newValue: ArcGISMapView["center"] | Nil | number[] | string, view?: Pick<__esri.MapView, "center">): __esri.Point | undefined;
/** @deprecated Use useWidget or useViewModel instead */
export declare function referenceElementHelper(component: WidgetOrMapComponent, refElement: ArcgisReferenceElement | Nil | string): Promise<void>;
export {};
