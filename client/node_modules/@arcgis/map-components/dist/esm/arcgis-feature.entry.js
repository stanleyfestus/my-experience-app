/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-a701542b.js';
import { I as newWidgetsFeature } from './index-c73b2050.js';
import { m as makeWidgetController } from './useWidget-f2119dfc.js';
import { u as usePropertyChange } from './index-266be087.js';
import { u as useControllerManager } from './index-25757424.js';
import './component-utils-5806dcb0.js';

const featureCss = "";
const ArcgisFeatureStyle0 = featureCss;

const useFeatureWidget = makeWidgetController(newWidgetsFeature);
const ArcgisFeature = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this);
        this.widget = useFeatureWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.headingLevel = this.widget.headingLevel;
        this.referenceElement = undefined;
        this.defaultPopupTemplateEnabled = this.widget.defaultPopupTemplateEnabled;
        this.graphic = this.widget.graphic;
        this.location = this.viewModel.location;
        this.map = this.widget.map;
        this.spatialReference = this.widget.spatialReference;
        this.hideTitle = this.widget.visibleElements.title;
        this.hideContentAttachments = this.widget.visibleElements.content.attachments;
        this.hideContentFields = this.widget.visibleElements.content.fields;
        this.hideContentMedia = this.widget.visibleElements.content.media;
        this.hideContentText = this.widget.visibleElements.content.text;
        this.hideContentExpression = this.widget.visibleElements.content.expression;
        this.hideLastEditInfo = this.widget.visibleElements.lastEditedInfo;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async nextMedia(contentElementIndex) {
        this.widget?.nextMedia(contentElementIndex);
    }
    async previousMedia(contentElementIndex) {
        this.widget?.previousMedia(contentElementIndex);
    }
    async setActiveMedia(contentElementIndex, mediaInfoIndex) {
        this.widget?.setActiveMedia(contentElementIndex, mediaInfoIndex);
    }
    get el() { return getElement(this); }
};
ArcgisFeature.style = ArcgisFeatureStyle0;

export { ArcgisFeature as arcgis_feature };
