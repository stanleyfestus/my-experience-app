/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-a701542b.js';
import { a8 as newWidgetsShadowCast } from './index-c73b2050.js';
import { u as usePropertyChange } from './index-266be087.js';
import { m as makeWidgetController } from './useWidget-f2119dfc.js';
import { u as useControllerManager } from './index-25757424.js';
import './component-utils-5806dcb0.js';

const shadowCastCss = "arcgis-shadow-cast{}";
const ArcgisShadowCastStyle0 = shadowCastCss;

const useShadowCastWidget = makeWidgetController(newWidgetsShadowCast);
const ArcgisShadowCast = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.manager = useControllerManager(this);
        this.widget = useShadowCastWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.discreteOptions = this.viewModel.discreteOptions;
        this.durationOptions = this.viewModel.durationOptions;
        this.endTimeOfDay = this.viewModel.endTimeOfDay;
        this.startTimeOfDay = this.viewModel.startTimeOfDay;
        this.thresholdOptions = this.viewModel.thresholdOptions;
        this.utcOffset = this.viewModel.utcOffset;
        this.visualizationType = this.viewModel.visualizationType;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.headingLevel = this.widget.headingLevel;
        this.hideTimeRangeSlider = this.widget.visibleElements.timeRangeSlider;
        this.hideTimezone = this.widget.visibleElements.timezone;
        this.hideDatePicker = this.widget.visibleElements.datePicker;
        this.hideVisualizationOptions = this.widget.visibleElements.visualizationOptions;
        this.hideColorPicker = this.widget.visibleElements.colorPicker;
        this.hideTooltip = this.widget.visibleElements.tooltip;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async getDuration(point) {
        return this.widget?.viewModel.getDuration(point);
    }
    async start() {
        this.widget?.viewModel.start();
    }
    async stop() {
        this.widget?.viewModel.stop();
    }
    get el() { return getElement(this); }
};
ArcgisShadowCast.style = ArcgisShadowCastStyle0;

export { ArcgisShadowCast as arcgis_shadow_cast };
