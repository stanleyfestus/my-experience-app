/*!
 * All material copyright Esri, All Rights Reserved, unless otherwise specified.
 * See https://js.arcgis.com/4.31/esri/copyright.txt for details.
 * v4.31.0-next.58
 */
import { r as registerInstance, c as createEvent, g as getElement } from './index-a701542b.js';
import { af as newWidgetsTimeSlider } from './index-c73b2050.js';
import { u as usePropertyChange } from './index-266be087.js';
import { m as makeWidgetController } from './useWidget-f2119dfc.js';
import { u as useControllerManager } from './index-25757424.js';
import './component-utils-5806dcb0.js';

const timeSliderCss = "arcgis-time-slider{}";
const ArcgisTimeSliderStyle0 = timeSliderCss;

const useTimeSliderWidget = makeWidgetController(newWidgetsTimeSlider);
const ArcgisTimeSlider = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.arcgisReady = createEvent(this, "arcgisReady", 7);
        this.arcgisPropertyChange = createEvent(this, "arcgisPropertyChange", 7);
        this.widgetTriggerAction = createEvent(this, "arcgisTriggerAction", 7);
        this.manager = useControllerManager(this);
        this.widget = useTimeSliderWidget(this);
        this.viewModel = this.widget.viewModel;
        this.arcgisPropertyChange = usePropertyChange()("effectiveStops", "fullTimeExtent", "timeExtent", "state");
        this.autoDestroyDisabled = false;
        this.referenceElement = undefined;
        this.actions = this.widget.actions;
        this.disabled = this.widget.disabled;
        this.effectiveStops = this.widget.effectiveStops;
        this.fullTimeExtent = this.widget.fullTimeExtent;
        this.icon = this.widget.icon;
        this.label = this.widget.label;
        this.layout = this.widget.layout;
        this.loop = this.widget.loop;
        this.mode = this.widget.mode;
        this.playRate = this.widget.playRate;
        this.stops = this.widget.stops;
        this.tickConfigs = this.widget.tickConfigs;
        this.timeExtent = this.widget.timeExtent;
        this.timeVisible = this.widget.timeVisible;
        this.timeZone = this.widget.timeZone;
        this.position = "bottom-left";
        this.state = this.viewModel.state;
    }
    //--------------------------------------------------------------------------
    //
    //  Methods
    //
    //--------------------------------------------------------------------------
    /** Permanently destroy the component */
    async destroy() {
        await this.manager.destroy();
    }
    async applyTimeSliderSettings(settings) {
        Object.assign(this, settings);
    }
    async next() {
        this.widget?.next();
    }
    async play() {
        this.widget?.play();
    }
    async previous() {
        this.widget?.previous();
    }
    async stop() {
        this.widget?.stop();
    }
    async updateWebDocument(webmap) {
        this.widget?.updateWebDocument(webmap);
    }
    get el() { return getElement(this); }
};
ArcgisTimeSlider.style = ArcgisTimeSliderStyle0;

export { ArcgisTimeSlider as arcgis_time_slider };
