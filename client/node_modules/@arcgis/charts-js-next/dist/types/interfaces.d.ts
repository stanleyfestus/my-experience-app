import type { Container, Graphics, ISpritePointerEvent } from "@amcharts/amcharts5";
import type { IPointerEvent } from "@amcharts/amcharts5/.internal/core/render/backend/Renderer";
import type { AxisRenderer, ValueAxis, XYChart, XYCursor } from "@amcharts/amcharts5/xy";
import type { AxisLabelFormatCallback, GuideTooltipFormatCallback } from "@arcgis/charts-js-common";
import type { CommonStrings, ErrorStrings } from "@arcgis/charts-shared-utils";
import type { TimeIntervalInfo, WebChart, WebChartDataTypes } from "@arcgis/charts-spec";
export declare const amChartsV5License = "AM5C241025748";
export declare const EventTypes: {
    readonly Hidden: "hidden";
    readonly Shown: "shown";
    readonly SelectEnded: "selectended";
    readonly Over: "over";
    readonly Out: "out";
    readonly SizeChanged: "sizechanged";
    readonly VisibilityChanged: "visibilitychanged";
    readonly PositionChanged: "positionchanged";
    readonly Validated: "validated";
    readonly DataValidated: "datavalidated";
    readonly DataItemsValidated: "dataitemsvalidated";
    readonly Inited: "inited";
    readonly Opened: "opened";
    readonly Closed: "closed";
    readonly ChildAdded: "childadded";
    readonly DataItemChanged: "dataitemchanged";
    readonly LayoutValidated: "layoutvalidated";
    readonly BoundsChanged: "boundschanged";
    readonly PointerUp: "pointerup";
    readonly PointerDown: "pointerdown";
    readonly PointerOver: "pointerover";
    readonly FrameEnded: "frameended";
    readonly FrameStarted: "framestarted";
    readonly Click: "click";
    readonly Push: "push";
};
export type EventTypes = (typeof EventTypes)[keyof typeof EventTypes];
export type SelectEndedEvent = {
    originalEvent: IPointerEvent;
} & {
    type: "selectended";
    target: XYCursor;
};
export type PointerUpEvent = ISpritePointerEvent & {
    type: "pointerup";
    target: Container | Graphics;
};
export type AxisDataValidatedEvent = {
    type: "datavalidated";
    target: ValueAxis<AxisRenderer>;
};
export type ClickEvent = ISpritePointerEvent & {
    type: "click";
    target: Container;
};
export interface UpdateAxesProps {
    chart: XYChart;
    chartConfig: WebChart;
    data?: WebChartDataTypes;
    timeIntervalInfo?: TimeIntervalInfo;
    axisLabelsBehaviorChanged?: [boolean, boolean];
    xAxisLabelFormatter?: AxisLabelFormatCallback;
    yAxisLabelFormatter?: AxisLabelFormatCallback;
    guideTooltipFormatter?: GuideTooltipFormatCallback;
    commonStrings: CommonStrings;
    errorStrings: ErrorStrings;
}
