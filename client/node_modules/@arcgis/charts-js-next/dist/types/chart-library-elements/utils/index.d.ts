import type { Container, DataItem, Graphics, Label, Root, Sprite } from "@amcharts/amcharts5";
import type { AxisRenderer, IAxisDataItem } from "@amcharts/amcharts5/xy";
import type { AmChartsColor, EsriColor } from "../../types";
/**
 * enable and modify the responsive features of the root/chart
 * @param root - amCharts root object
 * @param enableResponsiveFeatures - boolean to enable or disable the responsive features
 */
export declare function activateMobileFeatures(root: Root, enableResponsiveFeatures?: boolean): void;
/**
 * enable and modify the animation features of the root/chart
 * @param root amcharts root object
 * @param enableChartAnimation boolean to enable the chart animation
 */
export declare function enableChartAnimation(root: Root, enableChartAnimation?: boolean): void;
export declare function convertColor(configColor?: EsriColor | Readonly<EsriColor>): {
    color: AmChartsColor;
    opacity: number;
};
/**
 * Toggles the visibility of an element via `.show()`/`.hide()` and `visible` property.
 * The [reason](https://amcharts.zendesk.com/hc/en-us/requests/52191) for using `.show()`/`.hide()` approach.
 * Observing some misbehavior if just `.show()`/`.hide()` is used, so using `visible` along with.
 * @param element
 * @param visible
 */
export declare function showElement(element: DataItem<IAxisDataItem> | Graphics | Sprite, visible?: boolean): void;
/**
 * Helps finding a container's child from its id.
 * @param childId The child's id to find.
 * @param parent The parent container to search in.
 */
export declare function findContainerChild<T extends Container | Label>(childId: string, parent: Container): T | undefined;
/**
 * determines whether the renderer should be considered as the X axis renderer (X and Circular axes)
 * @param axisRenderer
 * @returns
 */
export declare function isXAxisRenderer(axisRenderer: AxisRenderer): boolean;
/**
 * determines whether the renderer should be considered as the Y axis renderer (Y and Radial axes)
 * @param axisRenderer
 * @returns
 */
export declare function isYAxisRenderer(axisRenderer: AxisRenderer): boolean;
