import { Pattern, Root, Percent } from "@amcharts/amcharts5";
import { RESTSimpleLineSymbolStyle, ISimpleMarkerSymbol, SimpleFillSymbolStyle } from "@arcgis/charts-spec";
import { AmChartsColor } from "../../../../types";
/**
 * Maps a width defined as a number or a string following the pattern 'xxx%' into
 * an amCharts 4 width or height property
 * @param width The width to convert
 */
export declare function mapDimension(width: number | string): Percent | number;
/**
 * Map Esri's SimpleLineSymbolStyle to a string value representing the stroke-line-cap property.
 * This function maps both jsapi line symbol and rest api line symbols.
 * @param lineStyle The line symbol style to map
 * @param forceSquareLineCap Indicate whether to use 'square' for stroke-line-cap property. Default value is false; meaning 'round' will be used.
 */
export declare function mapLineSymbolStyle(lineStyle?: RESTSimpleLineSymbolStyle, forceSquareLineCap?: boolean): "butt" | "round" | "square";
/**
 * Converts line style to stoke dash array. The function can convert the rest or jsapi line style symbols to amCharts line symbols.
 * @param inputLineStyle input style that can define the line styles
 * @param inputWidth width of the line.
 */
export declare function mapLineStyleToDashArray(inputLineStyle: RESTSimpleLineSymbolStyle, inputWidth?: number): number[] | number;
/**
 * Sets pattern color for bar chart based on a specific pattern type
 * @param fill
 * @param style
 * TODO: esriSFSCross, esriSFSDiagonalCross patterns not handled
 */
export declare function mapFillSymbolStyle(props: {
    fill: AmChartsColor;
    root?: Root;
    style?: SimpleFillSymbolStyle;
}): Pattern | undefined;
/**
 * Converts the input angle to -359 to 359 range
 * @param angle
 * @param defaultAngle
 */
export declare function mapAngle(angle?: number, defaultAngle?: number): number;
/**
 * Generates SVG path for marker style and size
 * The SVG paths are adopted from [JSAPI 3.x](https://devtopia.esri.com/WebGIS/arcgis-js-api/blob/master/esri/symbols/SimpleMarkerSymbol.js#L133)
 * @param style
 * @param size
 */
export declare function mapPath(style: ISimpleMarkerSymbol["style"], size?: number): string;
