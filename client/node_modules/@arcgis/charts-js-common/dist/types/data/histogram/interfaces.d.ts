import type { QueryObject, AbortControllerKeyType, ErrorStrings } from "@arcgis/charts-shared-utils";
import type { WebChartDataTransformations, WebChartDataItem, WebChart, WebChartQuery } from "@arcgis/charts-spec";
import type Graphic from "@arcgis/core/Graphic";
import type { ChartOptions, FetchDataProps } from "../../interfaces";
export interface TwoDimPoint {
    x: number;
    y: number;
}
export interface Straight2DLineData {
    data: [TwoDimPoint, TwoDimPoint];
}
export declare const HistogramResultKeys: {
    readonly Count: "count";
    readonly Start: "minValue";
    readonly End: "maxValue";
};
export declare const OverlayTerms: {
    readonly Mean: "Mean";
    readonly Median: "Median";
    readonly StdDev: "Standard Deviation";
    readonly Normal: "Normal Distribution";
    readonly Trendline: "Trendline";
};
export type OverlayTerms = (typeof OverlayTerms)[keyof typeof OverlayTerms];
export interface ValueExpressionProps {
    field: string;
    transformation?: WebChartDataTransformations;
}
export interface TransformHistogramDataProps {
    chartConfig: WebChart;
    options?: ChartOptions;
    rawData?: Graphic[] | WebChartDataItem[];
    queryObject?: QueryObject;
    queryConfig: WebChartQuery;
    countIncludingNulls: number;
    countExcludingNulls: number;
    abortKey?: AbortControllerKeyType;
    errorStrings: ErrorStrings;
}
export interface DataTransformationProps {
    field: string;
    data: WebChartDataItem[];
    transformation: WebChartDataTransformations;
}
export type FetchRawHistogramDataProps = Pick<FetchDataProps, "abortKey" | "chartConfig" | "queryConfig" | "queryObject">;
