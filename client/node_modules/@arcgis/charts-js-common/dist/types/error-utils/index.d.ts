import { WebChartTypes } from "@arcgis/charts-spec";
import type { ChartElementLimit, DataInfo, DataWarningObject, ErrorStrings, QueryObject } from "@arcgis/charts-shared-utils";
import { DataWarningKeywords } from "@arcgis/charts-shared-utils";
interface DataLimitSubError {
    outlierLimit?: boolean;
}
/**
 * Fill in the DataInfo object with invalid type information according to the series type.
 * @param props.dataInfo the data info object to be filled in.
 * @param props.chartType the chart type
 * @param props.subError a little more detail if needed about what is wrong with the specific series
 */
export declare function completeDataExceedLimitInfo(props: {
    dataInfo: DataInfo;
    chartType?: WebChartTypes;
    subError?: DataLimitSubError;
}): void;
/**
 * Fill in the DataInfo object with the invalid type information for Pie chart.
 * @param dataInfo the data info object to be filled in.
 * @param invalidType the invalid type
 */
export declare function completeDataUnsupportedPieInfo(dataInfo: DataInfo, invalidType: DataWarningKeywords): void;
/**
 * Creates a warning object
 * @param props
 */
export declare function getDataWarningObject(props: {
    invalidType?: DataWarningKeywords;
    chartLimits?: ChartElementLimit;
    elementCount?: number;
    seriesCount?: number;
    filterBySelection?: boolean;
    queryObject?: QueryObject;
    formatLocale?: string;
    isTemporalLineChart?: boolean;
    errorStrings: ErrorStrings;
}): Promise<DataWarningObject>;
export {};
