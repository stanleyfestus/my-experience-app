import type { WebChartQuery } from "@arcgis/charts-spec";
import type { ChartElementLimit } from "../../defaults/interfaces";
import type { AbortControllerKeyType } from "../../query-features/interfaces";
import type { QueryObject } from "../../feature-layer";
/**
 * Fetches the unique values from a given field.
 * /!\ Currently the results for a same split-by field might differ from a category field to another.
 * This is due to the server not being able to make a distinction in some cases between values having for
 * only difference trailing spaces (e.g. `value` and `value ` and `value  `). It means it will aggregate the
 * stats for those similar values.
 * Given the stats for the similar values will be later aggregated, we also want the unique value list to carry
 * the same approximation.
 * To get a list of unique values that will match the chart's data, we simulate the data query and retain the unique
 * values for given the split-by field.
 * @param props.queryObject The object used to query the features (layer or feature layer view)
 * @param props.queryConfig The query configuration
 * @param props.category The category
 * @param props.splitByField The split-by field
 * @param props.abortKey The key to abort the request
 */
export declare function uniqueValues(props: {
    queryObject?: QueryObject;
    queryConfig: WebChartQuery;
    category: string;
    splitByField?: string;
    chartLimits?: ChartElementLimit;
    abortKey?: AbortControllerKeyType;
}): Promise<(number | string)[]>;
