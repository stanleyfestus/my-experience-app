export declare const RESTFieldType: {
    readonly Blob: "esriFieldTypeBlob";
    readonly Date: "esriFieldTypeDate";
    readonly Double: "esriFieldTypeDouble";
    readonly Geometry: "esriFieldTypeGeometry";
    readonly GlobalID: "esriFieldTypeGlobalID";
    readonly GUID: "esriFieldTypeGUID";
    readonly Integer: "esriFieldTypeInteger";
    readonly OID: "esriFieldTypeOID";
    readonly Raster: "esriFieldTypeRaster";
    readonly Single: "esriFieldTypeSingle";
    readonly SmallInteger: "esriFieldTypeSmallInteger";
    readonly String: "esriFieldTypeString";
    readonly XML: "esriFieldTypeXML";
};
export type RESTFieldType = (typeof RESTFieldType)[keyof typeof RESTFieldType];
export declare const RESTStatisticType: {
    readonly Count: "count";
    readonly Sum: "sum";
    readonly Minimum: "min";
    readonly Maximum: "max";
    readonly Average: "avg";
    readonly StandardDeviation: "stddev";
    readonly Variance: "var";
    readonly ContinuousPercentile: "percentile_cont";
    readonly DiscretePercentile: "percentile_disc";
    readonly EnvelopeAggregate: "envelope-aggregate";
    readonly CentroidAggregate: "centroid-aggregate";
    readonly ConvexHullAggregate: "convex-hull-aggregate";
    readonly NoAggregation: "no_aggregation";
};
export type RESTStatisticType = (typeof RESTStatisticType)[keyof typeof RESTStatisticType];
export declare const RESTSimpleLineSymbolStyle: {
    readonly Dash: "esriSLSDash";
    readonly DashDot: "esriSLSDashDot";
    readonly DashDotDot: "esriSLSDashDotDot";
    readonly Dot: "esriSLSDot";
    readonly Null: "esriSLSNull";
    readonly Solid: "esriSLSSolid";
};
export type RESTSimpleLineSymbolStyle = (typeof RESTSimpleLineSymbolStyle)[keyof typeof RESTSimpleLineSymbolStyle];
export declare const RESTSimpleMarkerSymbolStyle: {
    readonly Circle: "esriSMSCircle";
    readonly Cross: "esriSMSCross";
    readonly Diamond: "esriSMSDiamond";
    readonly Square: "esriSMSSquare";
    readonly X: "esriSMSX";
    readonly Triangle: "esriSMSTriangle";
};
export type RESTSimpleMarkerSymbolStyle = (typeof RESTSimpleMarkerSymbolStyle)[keyof typeof RESTSimpleMarkerSymbolStyle];
export declare const RESTSimpleFillSymbolStyle: {
    readonly BackwardDiagonal: "esriSFSBackwardDiagonal";
    readonly Cross: "esriSFSCross";
    readonly DiagonalCross: "esriSFSDiagonalCross";
    readonly ForwardDiagonal: "esriSFSForwardDiagonal";
    readonly Horizontal: "esriSFSHorizontal";
    readonly Null: "esriSFSNull";
    readonly Solid: "esriSFSSolid";
    readonly Vertical: "esriSFSVertical";
};
export type RESTSimpleFillSymbolStyle = (typeof RESTSimpleFillSymbolStyle)[keyof typeof RESTSimpleFillSymbolStyle];
export declare const RESTHorizontalAlignment: {
    readonly Left: "left";
    readonly Right: "right";
    readonly Center: "center";
    readonly Justify: "justify";
};
export type RESTHorizontalAlignment = (typeof RESTHorizontalAlignment)[keyof typeof RESTHorizontalAlignment];
export declare const RESTVerticalAlignment: {
    readonly Baseline: "baseline";
    readonly Top: "top";
    readonly Middle: "middle";
    readonly Bottom: "bottom";
};
export type RESTVerticalAlignment = (typeof RESTVerticalAlignment)[keyof typeof RESTVerticalAlignment];
export declare const RESTSymbolType: {
    readonly SLS: "esriSLS";
    readonly SMS: "esriSMS";
    readonly SFS: "esriSFS";
    readonly PMS: "esriPMS";
    readonly PFS: "esriPFS";
    readonly TS: "esriTS";
};
export type RESTSymbolType = (typeof RESTSymbolType)[keyof typeof RESTSymbolType];
export declare const RESTFontStyle: {
    readonly Italic: "italic";
    readonly Normal: "normal";
    readonly Oblique: "oblique";
};
export type RESTFontStyle = (typeof RESTFontStyle)[keyof typeof RESTFontStyle];
export declare const RESTFontWeight: {
    readonly Bold: "bold";
    readonly Bolder: "bolder";
    readonly Lighter: "lighter";
    readonly Normal: "normal";
};
export type RESTFontWeight = (typeof RESTFontWeight)[keyof typeof RESTFontWeight];
export declare const RESTFontDecoration: {
    readonly LineThrough: "line-through";
    readonly Underline: "underline";
    readonly None: "none";
};
export type RESTFontDecoration = (typeof RESTFontDecoration)[keyof typeof RESTFontDecoration];
export declare const RESTRendererType: {
    readonly UniqueValue: "unique-value";
    readonly Simple: "simple";
    readonly ClassBreaks: "class-breaks";
    readonly Heatmap: "heatmap";
    readonly DotDensity: "dot-density";
    readonly Dictionary: "dictionary";
    readonly PieChart: "pie-chart";
};
export type RESTRendererType = (typeof RESTRendererType)[keyof typeof RESTRendererType];
export declare const RESTUnits: {
    readonly Feet: "feet";
    readonly Miles: "miles";
    readonly NauticalMiles: "nautical-miles";
    readonly USNauticalMiles: "us-nautical-miles";
    readonly Meters: "meters";
    readonly Kilometers: "kilometers";
};
export type RESTUnits = (typeof RESTUnits)[keyof typeof RESTUnits];
