{
  "description": "Gives a JSON representation of the Chart object.",
  "type": "object",
  "properties": {
    "version": {
      "description": "Version of the specification. Used to identify when a saved config was created.",
      "type": "string",
      "enum": [
        "17.2.0"
      ],
      "title": "version"
    },
    "type": {
      "description": "Represents a unique string identifier for the Chart object. For Chart object, it is **chart**.",
      "type": "string",
      "enum": [
        "chart"
      ],
      "title": "type"
    },
    "id": {
      "description": "Can be used to uniquely identify a chart. The consumer app can choose whether to use it or not.",
      "type": "string",
      "title": "id"
    },
    "dataFilters": {
      "description": "JSON representation of filters applied to the data",
      "$ref": "#/definitions/WebChartDataFilters",
      "title": "dataFilters"
    },
    "title": {
      "description": "Specifies heading/title of the chart.",
      "$ref": "#/definitions/WebChartText",
      "title": "title"
    },
    "subTitle": {
      "description": "Specifies sub-heading/subtitle of the chart.",
      "$ref": "#/definitions/WebChartText",
      "title": "subTitle"
    },
    "footer": {
      "description": "Specifies footer of the chart",
      "$ref": "#/definitions/WebChartText",
      "title": "footer"
    },
    "background": {
      "description": "Specifies the background color of the chart.",
      "default": [
        255,
        255,
        255,
        255
      ],
      "type": "array",
      "items": [
        {
          "type": "number"
        },
        {
          "type": "number"
        },
        {
          "type": "number"
        },
        {
          "type": "number"
        }
      ],
      "minItems": 4,
      "maxItems": 4,
      "title": "background"
    },
    "theme": {
      "description": "A unique string that specifies the styling theme currently applied to the chart. This property needs to finalized and not in active use currently.",
      "type": "string",
      "title": "theme"
    },
    "cursorCrosshair": {
      "description": "Specifies cursor's crosshair information for the chart. Only for XY charts.",
      "$ref": "#/definitions/WebChartCursorCrosshair",
      "title": "cursorCrosshair"
    },
    "legend": {
      "description": "Specifies the Legend information for the chart.",
      "anyOf": [
        {
          "$ref": "#/definitions/WebChartLegend"
        },
        {
          "$ref": "#/definitions/WebChartPieChartLegend"
        }
      ],
      "title": "legend"
    },
    "axes": {
      "description": "Represents an array of **at least 1 or at most 3** Chart Axis accompanying the chart. The axes property is optional because Pie chart does not use any axis.\nThe third axis config is used when a series `assignToSecondValueAxis` is set to `true`.\nSome of the axis features won't apply to the third axis (e.g. labels behaviors).",
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/WebChartAxis"
        },
        {
          "$ref": "#/definitions/WebChartAxis"
        },
        {
          "$ref": "#/definitions/WebChartAxis"
        }
      ],
      "minItems": 1,
      "maxItems": 3,
      "title": "axes"
    },
    "horizontalAxisLabelsBehavior": {
      "description": "Represents the way the labels should behave when the horizontal axis can't display them all.\nThe available options are: \"none\", \"rotate\", \"stagger\" and \"wrap\".\nFor XY Chart only. Histogram can handle \"none\" and \"rotate\" only.\nThe default value for the horizontal axis is \"rotate\".",
      "default": "rotate",
      "enum": [
        "hide",
        "rotate",
        "stagger",
        "wrap"
      ],
      "type": "string",
      "title": "horizontalAxisLabelsBehavior"
    },
    "verticalAxisLabelsBehavior": {
      "description": "Represents the way the labels should behave when the vertical axis can't display them all. For XY Chart only.\nThe available options are: \"none\" and \"wrap\".\nThe default value for the vertical axis is \"wrap\".",
      "default": "wrap",
      "enum": [
        "hide",
        "rotate",
        "stagger",
        "wrap"
      ],
      "type": "string",
      "title": "verticalAxisLabelsBehavior"
    },
    "series": {
      "description": "Represents an array of various chart series to be plot inside the chart.\nEmpty array is not allowed.",
      "minItems": 1,
      "type": "array",
      "items": {
        "$ref": "#/definitions/WebChartSeriesType"
      },
      "title": "series"
    },
    "rotated": {
      "description": "Specifies whether or not the chart is rotated. Applied to Bar, Line, and Combo Bar and Line charts.",
      "default": false,
      "type": "boolean",
      "title": "rotated"
    },
    "stackedType": {
      "description": "Specifies how the bars/lines should be placed when multiple series are rendered in the same chart, say when \"split by\" operation is executed on any field or\nwhen multiple attributes/fields corresponding to the same set of classes are to be visualized.\n\nCurrently this property is only used for bar and line series.",
      "default": "sideBySide",
      "enum": [
        "sideBySide",
        "stacked",
        "stacked100"
      ],
      "type": "string",
      "title": "stackedType"
    },
    "colorMatch": {
      "description": "Specifies whether to first try matching the colors from the layer renderer or the chart renderer\nfor coloring the chart elements, like markers, line segments, columns, etc.\n\nTo do so, this property needs to be set to `true`.\n\nWhen there is no matching color found (for when `colorMatch = true`) or when `colorMatch = false`,\nthe colors from the config, and then from the color ramps will be used, in that order.",
      "default": false,
      "type": "boolean",
      "title": "colorMatch"
    },
    "chartRenderer": {
      "description": "Renderer to use to style the series when the chart uses the color match mode.\nConsidered before the layer's renderer.",
      "title": "chartRenderer"
    },
    "orderOptions": {
      "description": "Chart order options (data and series)",
      "type": "object",
      "properties": {
        "series": {
          "description": "How series should be ordered and dislayed in a multi-series chart.\nIf not provided the series will be displayed as they are ordered in the config.",
          "$ref": "#/definitions/WebChartOrderSeriesBy",
          "title": "series"
        },
        "data": {
          "description": "How data for a chart should be ordered. It is recommended to use this property over its sibling `orderByFields` to order the chart data.\n\nIf not provided, the data will be displayed as it was retrieved from the server. No additional ordering will be applied.",
          "anyOf": [
            {
              "$ref": "#/definitions/WebChartDirectionalDataOrder"
            },
            {
              "$ref": "#/definitions/WebChartPredefinedLabelsDataOrder"
            }
          ],
          "title": "data"
        },
        "orderByFields": {
          "description": "The orderByFields to be sent with the query when retrieving data for the chart.  It represents the desired sorting order of the output result from the server.\n\nMore info present in [JSAPI docs](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#orderByFields).\nThe format of any entry in this array is `field_name sorting_order`. When `sorting_order` is not defined, it is assumed to be ascending",
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "orderByFields"
        }
      },
      "title": "orderOptions"
    }
  },
  "required": [
    "series",
    "type",
    "version"
  ],
  "definitions": {
    "WebChartDataFilters": {
      "description": "JSON representation of filters applied to the data",
      "title": "WebChartDataFilters",
      "type": "object",
      "properties": {
        "distance": {
          "description": "Specifies a search distance for the `geometry`. To be associated with the `units` property. For compatible layers only.",
          "type": "number",
          "title": "distance"
        },
        "gdbVersion": {
          "description": "Specifies the geodatabase version to display for feature service queries.",
          "type": "string",
          "title": "gdbVersion"
        },
        "geometry": {
          "description": "The geometry to apply to the spatial filter. A buffer can be applied to it by setting the properties `distance` and `units`.",
          "anyOf": [
            {
              "$ref": "#/definitions/IPoint"
            },
            {
              "$ref": "#/definitions/IPolyline"
            },
            {
              "$ref": "#/definitions/IPolygon"
            },
            {
              "$ref": "#/definitions/IPolygonWithCurves"
            },
            {
              "$ref": "#/definitions/IEnvelope"
            },
            {
              "$ref": "#/definitions/IExtent"
            }
          ],
          "title": "geometry"
        },
        "timeExtent": {
          "description": "A time extent ([timestamp, timestamp]) for a temporal query against time-aware layers.",
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 2,
          "maxItems": 2,
          "title": "timeExtent"
        },
        "units": {
          "description": "The unit for calculating the buffer distance when `distance` and `geometry` are provided.\nIf not specified, the unit is derived from the geometry spatial reference.",
          "enum": [
            "feet",
            "kilometers",
            "meters",
            "miles",
            "nautical-miles",
            "us-nautical-miles"
          ],
          "type": "string",
          "title": "units"
        },
        "where": {
          "description": "Acts as a filter on the base data for attribute-based filtering, expect for bar/line charts for which is is used to handle the split-by field values.",
          "type": "string",
          "title": "where"
        }
      }
    },
    "IPoint": {
      "description": "A simple point geometry, with spatial reference defined.\n\n`IPoint` can also be imported from the following packages:\n\n```js\nimport { IPoint } from \"@esri/arcgis-rest-routing\";\nimport { IPoint } from \"@esri/arcgis-rest-geocoding\";\n```",
      "title": "IPoint",
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "title": "x"
        },
        "y": {
          "type": "number",
          "title": "y"
        },
        "z": {
          "type": "number",
          "title": "z"
        },
        "hasZ": {
          "type": "boolean",
          "title": "hasZ"
        },
        "hasM": {
          "type": "boolean",
          "title": "hasM"
        },
        "spatialReference": {
          "description": "Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n\n`ISpatialReference` can also be imported from the following packages:\n\n```js\nimport { ISpatialReference } from \"@esri/arcgis-rest-geocoding\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-routing\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-service-admin\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-feature-layer\";\n```",
          "$ref": "#/definitions/ISpatialReference",
          "title": "spatialReference"
        }
      },
      "required": [
        "x",
        "y"
      ]
    },
    "ISpatialReference": {
      "description": "Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n\n`ISpatialReference` can also be imported from the following packages:\n\n```js\nimport { ISpatialReference } from \"@esri/arcgis-rest-geocoding\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-routing\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-service-admin\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-feature-layer\";\n```",
      "title": "ISpatialReference",
      "type": "object",
      "properties": {
        "wkid": {
          "type": "number",
          "title": "wkid"
        },
        "latestWkid": {
          "type": "number",
          "title": "latestWkid"
        },
        "vcsWkid": {
          "type": "number",
          "title": "vcsWkid"
        },
        "latestVcsWkid": {
          "type": "number",
          "title": "latestVcsWkid"
        },
        "wkt": {
          "type": "string",
          "title": "wkt"
        },
        "latestWkt": {
          "type": "string",
          "title": "latestWkt"
        }
      }
    },
    "IPolyline": {
      "title": "IPolyline",
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Position"
            }
          },
          "title": "paths"
        },
        "hasZ": {
          "type": "boolean",
          "title": "hasZ"
        },
        "hasM": {
          "type": "boolean",
          "title": "hasM"
        },
        "spatialReference": {
          "description": "Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n\n`ISpatialReference` can also be imported from the following packages:\n\n```js\nimport { ISpatialReference } from \"@esri/arcgis-rest-geocoding\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-routing\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-service-admin\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-feature-layer\";\n```",
          "$ref": "#/definitions/ISpatialReference",
          "title": "spatialReference"
        }
      },
      "required": [
        "paths"
      ]
    },
    "Position": {
      "title": "Position",
      "anyOf": [
        {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 2,
          "maxItems": 2
        },
        {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4
        },
        {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 3,
          "maxItems": 3
        }
      ]
    },
    "IPolygon": {
      "title": "IPolygon",
      "type": "object",
      "properties": {
        "rings": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Position"
            }
          },
          "title": "rings"
        },
        "hasZ": {
          "type": "boolean",
          "title": "hasZ"
        },
        "hasM": {
          "type": "boolean",
          "title": "hasM"
        },
        "spatialReference": {
          "description": "Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n\n`ISpatialReference` can also be imported from the following packages:\n\n```js\nimport { ISpatialReference } from \"@esri/arcgis-rest-geocoding\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-routing\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-service-admin\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-feature-layer\";\n```",
          "$ref": "#/definitions/ISpatialReference",
          "title": "spatialReference"
        }
      },
      "required": [
        "rings"
      ]
    },
    "IPolygonWithCurves": {
      "title": "IPolygonWithCurves",
      "type": "object",
      "properties": {
        "curveRings": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "array",
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "minItems": 2,
                  "maxItems": 2
                },
                {
                  "type": "array",
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "minItems": 4,
                  "maxItems": 4
                },
                {
                  "type": "array",
                  "items": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "minItems": 3,
                  "maxItems": 3
                },
                {
                  "$ref": "#/definitions/IArc"
                },
                {
                  "$ref": "#/definitions/IBezierCurve"
                },
                {
                  "$ref": "#/definitions/ICircularArc"
                },
                {
                  "$ref": "#/definitions/IOldCircularArc"
                }
              ]
            }
          },
          "title": "curveRings"
        },
        "hasZ": {
          "type": "boolean",
          "title": "hasZ"
        },
        "hasM": {
          "type": "boolean",
          "title": "hasM"
        },
        "spatialReference": {
          "description": "Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n\n`ISpatialReference` can also be imported from the following packages:\n\n```js\nimport { ISpatialReference } from \"@esri/arcgis-rest-geocoding\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-routing\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-service-admin\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-feature-layer\";\n```",
          "$ref": "#/definitions/ISpatialReference",
          "title": "spatialReference"
        }
      },
      "required": [
        "curveRings"
      ]
    },
    "IArc": {
      "description": "an arc can be represented as a JSON curve object",
      "title": "IArc",
      "type": "object",
      "properties": {
        "a": {
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/Position"
            },
            {
              "type": "array",
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "minItems": 2,
              "maxItems": 2
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 7,
          "maxItems": 7,
          "title": "a"
        }
      },
      "required": [
        "a"
      ]
    },
    "IBezierCurve": {
      "description": "a bezier curve can be represented as a JSON curve object",
      "title": "IBezierCurve",
      "type": "object",
      "properties": {
        "b": {
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/Position"
            },
            {
              "type": "array",
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "minItems": 2,
              "maxItems": 2
            },
            {
              "type": "array",
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          ],
          "minItems": 3,
          "maxItems": 3,
          "title": "b"
        }
      },
      "required": [
        "b"
      ]
    },
    "ICircularArc": {
      "description": "a circular arc can be represented as a JSON curve object",
      "title": "ICircularArc",
      "type": "object",
      "properties": {
        "c": {
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/Position"
            },
            {
              "type": "array",
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          ],
          "minItems": 2,
          "maxItems": 2,
          "title": "c"
        }
      },
      "required": [
        "c"
      ]
    },
    "IOldCircularArc": {
      "title": "IOldCircularArc",
      "type": "object",
      "properties": {
        "a": {
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/Position"
            },
            {
              "type": "array",
              "items": [
                {
                  "type": "number"
                },
                {
                  "type": "number"
                }
              ],
              "minItems": 2,
              "maxItems": 2
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "a"
        }
      },
      "required": [
        "a"
      ]
    },
    "IEnvelope": {
      "description": "An envelope is a rectangle defined by a range of values for each coordinate and attribute.",
      "title": "IEnvelope",
      "type": "object",
      "properties": {
        "xmin": {
          "type": "number",
          "title": "xmin"
        },
        "xmax": {
          "type": "number",
          "title": "xmax"
        },
        "ymin": {
          "type": "number",
          "title": "ymin"
        },
        "ymax": {
          "type": "number",
          "title": "ymax"
        },
        "zmin": {
          "type": "number",
          "title": "zmin"
        },
        "zmax": {
          "type": "number",
          "title": "zmax"
        },
        "mmin": {
          "type": "number",
          "title": "mmin"
        },
        "mmax": {
          "type": "number",
          "title": "mmax"
        },
        "spatialReference": {
          "description": "Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n\n`ISpatialReference` can also be imported from the following packages:\n\n```js\nimport { ISpatialReference } from \"@esri/arcgis-rest-geocoding\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-routing\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-service-admin\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-feature-layer\";\n```",
          "$ref": "#/definitions/ISpatialReference",
          "title": "spatialReference"
        }
      },
      "required": [
        "xmax",
        "xmin",
        "ymax",
        "ymin"
      ]
    },
    "IExtent": {
      "description": "Extents are used to define rectangles and bounding boxes.\n\n`IExtent` can also be imported from the following packages:\n\n```js\nimport { IExtent } from \"@esri/arcgis-rest-geocoding\";\nimport { IExtent } from \"@esri/arcgis-rest-service-admin\";\nimport { IExtent } from \"@esri/arcgis-rest-feature-layer\";\n```",
      "title": "IExtent",
      "type": "object",
      "properties": {
        "xmin": {
          "type": "number",
          "title": "xmin"
        },
        "ymin": {
          "type": "number",
          "title": "ymin"
        },
        "zmin": {
          "type": "number",
          "title": "zmin"
        },
        "xmax": {
          "type": "number",
          "title": "xmax"
        },
        "ymax": {
          "type": "number",
          "title": "ymax"
        },
        "zmax": {
          "type": "number",
          "title": "zmax"
        },
        "spatialReference": {
          "description": "Spatial reference systems define mathematical transformations and coordinate systems for displaying spatial information in 2D and 3D.\n\n`ISpatialReference` can also be imported from the following packages:\n\n```js\nimport { ISpatialReference } from \"@esri/arcgis-rest-geocoding\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-routing\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-service-admin\";\nimport { ISpatialReference } from \"@esri/arcgis-rest-feature-layer\";\n```",
          "$ref": "#/definitions/ISpatialReference",
          "title": "spatialReference"
        }
      },
      "required": [
        "xmax",
        "xmin",
        "ymax",
        "ymin"
      ]
    },
    "WebChartText": {
      "description": "Stores info on how some text is rendered on the chart and whether it is visible or not.",
      "title": "WebChartText",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the ChartText object. For ChartText object, it is \"chartText\".",
          "type": "string",
          "enum": [
            "chartText"
          ],
          "title": "type"
        },
        "visible": {
          "description": "Determines the visibility of the content.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "content": {
          "$ref": "#/definitions/WebChartTextSymbol",
          "description": "Contains the styling info and text content. Details on **esriTS** are [here](https://developers.arcgis.com/documentation/common-data-types/symbol-objects.htm).",
          "title": "content"
        }
      },
      "required": [
        "content",
        "type"
      ]
    },
    "WebChartTextSymbol": {
      "description": "Represents a text symbol.",
      "title": "WebChartTextSymbol",
      "allOf": [
        {
          "$ref": "#/definitions/Omit<ITextSymbol,\"xoffset\"|\"yoffset\">"
        },
        {
          "type": "object",
          "properties": {
            "xoffset": {
              "description": "Horizontal offset. Can be a number for a fixed value in pixels, or a string as \"25%\" for a value\nrelative to the label's container width.",
              "type": [
                "string",
                "number"
              ],
              "title": "xoffset"
            },
            "yoffset": {
              "description": "Horizontal offset. Can be a number for a fixed value in pixels, or a string as \"25%\" for a value\nrelative to the label's container height.",
              "type": [
                "string",
                "number"
              ],
              "title": "yoffset"
            }
          }
        }
      ]
    },
    "Omit<ITextSymbol,\"xoffset\"|\"yoffset\">": {
      "title": "Omit<ITextSymbol,\"xoffset\"|\"yoffset\">",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "esriTS"
          ],
          "title": "type"
        },
        "style": {
          "type": "string",
          "title": "style"
        },
        "text": {
          "type": "string",
          "title": "text"
        },
        "color": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "color"
        },
        "backgroundColor": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "backgroundColor"
        },
        "borderLineSize": {
          "type": "number",
          "title": "borderLineSize"
        },
        "borderLineColor": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "borderLineColor"
        },
        "haloSize": {
          "type": "number",
          "title": "haloSize"
        },
        "haloColor": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "haloColor"
        },
        "verticalAlignment": {
          "enum": [
            "baseline",
            "bottom",
            "middle",
            "top"
          ],
          "type": "string",
          "title": "verticalAlignment"
        },
        "horizontalAlignment": {
          "enum": [
            "center",
            "justify",
            "left",
            "right"
          ],
          "type": "string",
          "title": "horizontalAlignment"
        },
        "rightToLeft": {
          "type": "boolean",
          "title": "rightToLeft"
        },
        "kerning": {
          "type": "boolean",
          "title": "kerning"
        },
        "font": {
          "$ref": "#/definitions/IFont",
          "title": "font"
        },
        "angle": {
          "type": "number",
          "title": "angle"
        }
      },
      "required": [
        "type"
      ]
    },
    "IFont": {
      "title": "IFont",
      "type": "object",
      "properties": {
        "family": {
          "type": "string",
          "title": "family"
        },
        "size": {
          "type": "number",
          "title": "size"
        },
        "style": {
          "enum": [
            "italic",
            "normal",
            "oblique"
          ],
          "type": "string",
          "title": "style"
        },
        "weight": {
          "enum": [
            "bold",
            "bolder",
            "lighter",
            "normal"
          ],
          "type": "string",
          "title": "weight"
        },
        "decoration": {
          "enum": [
            "line-through",
            "none",
            "underline"
          ],
          "type": "string",
          "title": "decoration"
        }
      }
    },
    "WebChartCursorCrosshair": {
      "description": "JSON representation of the cursor's crosshair for a chart.",
      "title": "WebChartCursorCrosshair",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the chart cursor's crosshair.",
          "type": "string",
          "enum": [
            "cursorCrosshair"
          ],
          "title": "type"
        },
        "style": {
          "description": "Contains styling info on how the chart cursor's crosshair should be rendered.",
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "style"
        },
        "verticalLineVisible": {
          "description": "Indicates whether the vertical crosshair line should be displayed",
          "default": false,
          "type": "boolean",
          "title": "verticalLineVisible"
        },
        "horizontalLineVisible": {
          "description": "Indicates whether the horizontal crosshair line should be displayed",
          "default": false,
          "type": "boolean",
          "title": "horizontalLineVisible"
        }
      },
      "required": [
        "type"
      ]
    },
    "ISimpleLineSymbol": {
      "title": "ISimpleLineSymbol",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "esriSLS"
          ],
          "title": "type"
        },
        "style": {
          "enum": [
            "esriSLSDash",
            "esriSLSDashDot",
            "esriSLSDashDotDot",
            "esriSLSDot",
            "esriSLSNull",
            "esriSLSSolid"
          ],
          "type": "string",
          "title": "style"
        },
        "color": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "color"
        },
        "width": {
          "type": "number",
          "title": "width"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebChartLegend": {
      "description": "JSON representation of the Chart's legend box",
      "title": "WebChartLegend",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the ChartLegend object. For ChartLegend object, it is \"chartLegend\".",
          "type": "string",
          "enum": [
            "chartLegend"
          ],
          "title": "type"
        },
        "visible": {
          "description": "Determines the visibility of the content.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "title": {
          "description": "Contains styling info on how the title of the legend box should be rendered",
          "$ref": "#/definitions/WebChartText",
          "title": "title"
        },
        "body": {
          "description": "Represents a text symbol.",
          "$ref": "#/definitions/WebChartTextSymbol",
          "title": "body"
        },
        "position": {
          "description": "Positions the legends at `\"right\"`, `\"left\"`, `\"top\"`, or `\"bottom\"` of the chart.",
          "default": "WebChartLegendPositions.Right",
          "enum": [
            "bottom",
            "left",
            "right",
            "top"
          ],
          "type": "string",
          "title": "position"
        },
        "maxHeight": {
          "description": "Legend's maximum height. If not set the legend will occupy the same height as the series container or pie chart.",
          "default": null,
          "type": [
            "null",
            "number"
          ],
          "title": "maxHeight"
        },
        "roundMarkers": {
          "description": "Allows the legend markers to be displayed as circles. If the property is to:\n- `false` or `undefined` they will be rounded rectangles\n- `true` they will be circles",
          "default": false,
          "type": "boolean",
          "title": "roundMarkers"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebChartPieChartLegend": {
      "description": "Specific legend for the Pie chart",
      "title": "WebChartPieChartLegend",
      "type": "object",
      "properties": {
        "displayNumericValue": {
          "description": "Indicates whether the numeric value associated to a slice is to be displayed in the legend.\nIf both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`",
          "default": false,
          "type": "boolean",
          "title": "displayNumericValue"
        },
        "displayPercentage": {
          "description": "Indicates whether the percentage to a slice is to be displayed in the legend.\nIf both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`",
          "default": false,
          "type": "boolean",
          "title": "displayPercentage"
        },
        "labelMaxWidth": {
          "description": "Maximum width in pixels of the label displaying the slice name. If the label is larger than the maximum width, it will automatically wrap.",
          "default": 200,
          "type": "number",
          "title": "labelMaxWidth"
        },
        "valueLabelMaxWidth": {
          "description": "Maximum width in pixels of the label displaying the slice name. If the label is larger than the maximum width, it will automatically wrap.",
          "default": 200,
          "type": "number",
          "title": "valueLabelMaxWidth"
        },
        "type": {
          "description": "Represents a unique string identifier for the ChartLegend object. For ChartLegend object, it is \"chartLegend\".",
          "type": "string",
          "enum": [
            "chartLegend"
          ],
          "title": "type"
        },
        "visible": {
          "description": "Determines the visibility of the content.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "title": {
          "description": "Contains styling info on how the title of the legend box should be rendered",
          "$ref": "#/definitions/WebChartText",
          "title": "title"
        },
        "body": {
          "description": "Represents a text symbol.",
          "$ref": "#/definitions/WebChartTextSymbol",
          "title": "body"
        },
        "position": {
          "description": "Positions the legends at `\"right\"`, `\"left\"`, `\"top\"`, or `\"bottom\"` of the chart.",
          "default": "WebChartLegendPositions.Right",
          "enum": [
            "bottom",
            "left",
            "right",
            "top"
          ],
          "type": "string",
          "title": "position"
        },
        "maxHeight": {
          "description": "Legend's maximum height. If not set the legend will occupy the same height as the series container or pie chart.",
          "default": null,
          "type": [
            "null",
            "number"
          ],
          "title": "maxHeight"
        },
        "roundMarkers": {
          "description": "Allows the legend markers to be displayed as circles. If the property is to:\n- `false` or `undefined` they will be rounded rectangles\n- `true` they will be circles",
          "default": false,
          "type": "boolean",
          "title": "roundMarkers"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebChartAxis": {
      "description": "JSON representation of the chart's axis object",
      "title": "WebChartAxis",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the WebChartAxis object. For ChartAxis object, it is \"chartAxis\".",
          "type": "string",
          "enum": [
            "chartAxis"
          ],
          "title": "type"
        },
        "visible": {
          "description": "Determines the visibility of the content.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "isLogarithmic": {
          "description": "Specifies whether the axis has a logarithmic scale or not.",
          "default": false,
          "type": "boolean",
          "title": "isLogarithmic"
        },
        "title": {
          "description": "Contains styling info on how the title of the axis should be rendered",
          "$ref": "#/definitions/WebChartText",
          "title": "title"
        },
        "valueFormat": {
          "description": "Specifies how numerical/categorical/date-time values should be formatted.",
          "anyOf": [
            {
              "$ref": "#/definitions/NumberFormatOptions"
            },
            {
              "$ref": "#/definitions/DateTimeFormatOptions"
            },
            {
              "$ref": "#/definitions/CategoryFormatOptions"
            }
          ],
          "title": "valueFormat"
        },
        "minimum": {
          "description": "The minimum value which the axis should represent, when it is not defined or null, then the minimum value for the corresponding axis is automatically calculated.",
          "type": [
            "null",
            "number"
          ],
          "title": "minimum"
        },
        "maximum": {
          "description": "The maximum value which the axis should represent, when it is not defined or null, then the maximum value for the corresponding axis is automatically calculated.",
          "type": [
            "null",
            "number"
          ],
          "title": "maximum"
        },
        "grid": {
          "description": "Dictates how the grid lines associated with a particular axis should be rendered.",
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "grid"
        },
        "guides": {
          "description": "Represent an array of guides that should be rendered onto the axis.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartGuide"
          },
          "title": "guides"
        },
        "lineSymbol": {
          "description": "Contains styling info on how the axis line should be rendered.\nIf not provided a default style is applied.",
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "lineSymbol"
        },
        "labels": {
          "$ref": "#/definitions/WebChartText",
          "description": "Contains styling info on how the axis labels should be rendered.",
          "title": "labels"
        },
        "scrollbar": {
          "description": "Represents the axis scrollbar style and visibility",
          "$ref": "#/definitions/WebChartAxisScrollBar",
          "title": "scrollbar"
        },
        "displayZeroLine": {
          "description": "Represents an option to hide/un-hide the zero line on value axis",
          "default": false,
          "type": "boolean",
          "title": "displayZeroLine"
        },
        "integerOnlyValues": {
          "description": "Represents an option to show `integer-only` values for a value axis",
          "default": false,
          "type": "boolean",
          "title": "integerOnlyValues"
        },
        "displayCursorTooltip": {
          "description": "Specifies whether cursor tooltip should be displayed.",
          "default": false,
          "type": "boolean",
          "title": "displayCursorTooltip"
        },
        "buffer": {
          "description": "Allows setting a buffer to a **value axis** to provide some space around the series.",
          "default": false,
          "type": "boolean",
          "title": "buffer"
        }
      },
      "required": [
        "labels",
        "type",
        "valueFormat"
      ]
    },
    "NumberFormatOptions": {
      "description": "Defines how the numerical(value) axis data should be formatted.",
      "title": "NumberFormatOptions",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the NumberFormatOptions object. For NumberFormatOptions object, it is \"number\". It can help us to differentiate numerical (value) axis from other types of axes viz., date-time axis and category axis.",
          "type": "string",
          "enum": [
            "number"
          ],
          "title": "type"
        },
        "intlOptions": {
          "$ref": "#/definitions/Intl.NumberFormatOptions",
          "description": "Represents the JS native [Intl.NumberFormatOptions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat), which is based on [CLDR](http://cldr.unicode.org/translation/numbers-currency/number-patterns) specifications.",
          "title": "intlOptions"
        }
      },
      "required": [
        "intlOptions",
        "type"
      ]
    },
    "Intl.NumberFormatOptions": {
      "title": "Intl.NumberFormatOptions",
      "type": "object",
      "properties": {
        "localeMatcher": {
          "type": "string",
          "title": "localeMatcher"
        },
        "style": {
          "type": "string",
          "title": "style"
        },
        "currency": {
          "type": "string",
          "title": "currency"
        },
        "currencySign": {
          "type": "string",
          "title": "currencySign"
        },
        "useGrouping": {
          "type": "boolean",
          "title": "useGrouping"
        },
        "minimumIntegerDigits": {
          "type": "number",
          "title": "minimumIntegerDigits"
        },
        "minimumFractionDigits": {
          "type": "number",
          "title": "minimumFractionDigits"
        },
        "maximumFractionDigits": {
          "type": "number",
          "title": "maximumFractionDigits"
        },
        "minimumSignificantDigits": {
          "type": "number",
          "title": "minimumSignificantDigits"
        },
        "maximumSignificantDigits": {
          "type": "number",
          "title": "maximumSignificantDigits"
        },
        "compactDisplay": {
          "enum": [
            "long",
            "short"
          ],
          "type": "string",
          "title": "compactDisplay"
        },
        "notation": {
          "enum": [
            "compact",
            "engineering",
            "scientific",
            "standard"
          ],
          "type": "string",
          "title": "notation"
        },
        "signDisplay": {
          "enum": [
            "always",
            "auto",
            "exceptZero",
            "never"
          ],
          "type": "string",
          "title": "signDisplay"
        },
        "unit": {
          "type": "string",
          "title": "unit"
        },
        "unitDisplay": {
          "enum": [
            "long",
            "narrow",
            "short"
          ],
          "type": "string",
          "title": "unitDisplay"
        },
        "currencyDisplay": {
          "type": "string",
          "title": "currencyDisplay"
        }
      }
    },
    "DateTimeFormatOptions": {
      "description": "Defines how the DateTime axis data should be formatted.",
      "title": "DateTimeFormatOptions",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the NumberFormatOptions object. For NumberFormatOptions object, it is \"date\". It can help us to differentiate date-time axis from other types of axes viz., numeric (value) axis and category axis.",
          "type": "string",
          "enum": [
            "date"
          ],
          "title": "type"
        },
        "intlOptions": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions",
          "description": "Represent the JS native [Intl.DateTimeFormatOptions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormatt), which is based on [CLDR](http://cldr.unicode.org/translation/date-time-1/date-time-patterns) specifications.",
          "title": "intlOptions"
        },
        "formatPerDateTimeUnit": {
          "description": "Represents how to format specific date and time units when displayed on the axis, independently from the `intlOptions`.",
          "$ref": "#/definitions/WebChartDateTimeUnitFormatOptions",
          "title": "formatPerDateTimeUnit"
        }
      },
      "required": [
        "intlOptions",
        "type"
      ]
    },
    "Intl.DateTimeFormatOptions": {
      "title": "Intl.DateTimeFormatOptions",
      "type": "object",
      "properties": {
        "localeMatcher": {
          "enum": [
            "best fit",
            "lookup"
          ],
          "type": "string",
          "title": "localeMatcher"
        },
        "weekday": {
          "enum": [
            "long",
            "narrow",
            "short"
          ],
          "type": "string",
          "title": "weekday"
        },
        "era": {
          "enum": [
            "long",
            "narrow",
            "short"
          ],
          "type": "string",
          "title": "era"
        },
        "year": {
          "enum": [
            "2-digit",
            "numeric"
          ],
          "type": "string",
          "title": "year"
        },
        "month": {
          "enum": [
            "2-digit",
            "long",
            "narrow",
            "numeric",
            "short"
          ],
          "type": "string",
          "title": "month"
        },
        "day": {
          "enum": [
            "2-digit",
            "numeric"
          ],
          "type": "string",
          "title": "day"
        },
        "hour": {
          "enum": [
            "2-digit",
            "numeric"
          ],
          "type": "string",
          "title": "hour"
        },
        "minute": {
          "enum": [
            "2-digit",
            "numeric"
          ],
          "type": "string",
          "title": "minute"
        },
        "second": {
          "enum": [
            "2-digit",
            "numeric"
          ],
          "type": "string",
          "title": "second"
        },
        "timeZoneName": {
          "enum": [
            "long",
            "longGeneric",
            "longOffset",
            "short",
            "shortGeneric",
            "shortOffset"
          ],
          "type": "string",
          "title": "timeZoneName"
        },
        "formatMatcher": {
          "enum": [
            "basic",
            "best fit"
          ],
          "type": "string",
          "title": "formatMatcher"
        },
        "hour12": {
          "type": "boolean",
          "title": "hour12"
        },
        "timeZone": {
          "type": "string",
          "title": "timeZone"
        },
        "calendar": {
          "type": "string",
          "title": "calendar"
        },
        "dayPeriod": {
          "enum": [
            "long",
            "narrow",
            "short"
          ],
          "type": "string",
          "title": "dayPeriod"
        },
        "numberingSystem": {
          "type": "string",
          "title": "numberingSystem"
        },
        "dateStyle": {
          "enum": [
            "full",
            "long",
            "medium",
            "short"
          ],
          "type": "string",
          "title": "dateStyle"
        },
        "timeStyle": {
          "enum": [
            "full",
            "long",
            "medium",
            "short"
          ],
          "type": "string",
          "title": "timeStyle"
        },
        "hourCycle": {
          "enum": [
            "h11",
            "h12",
            "h23",
            "h24"
          ],
          "type": "string",
          "title": "hourCycle"
        }
      }
    },
    "WebChartDateTimeUnitFormatOptions": {
      "description": "Interface used by the axis `valueFormat` property to describe how to format specific date and time units when displayed on the axis.\nFor instance:\n\"year\": { year: \"numeric\" }\n\"month\": { month: \"numeric\" }\n\"day\": { day: \"2-digit\" }\n\"hour\": { day: \"numeric\" }\n\"minute\": { minute: \"numeric\" }\n\"second\": { second: \"numeric\" }\nReference: https://tc39.es/ecma402/#sec-datetimeformat-abstracts",
      "title": "WebChartDateTimeUnitFormatOptions",
      "type": "object",
      "properties": {
        "year": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions",
          "title": "year"
        },
        "month": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions",
          "title": "month"
        },
        "day": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions",
          "title": "day"
        },
        "hour": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions",
          "title": "hour"
        },
        "minute": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions",
          "title": "minute"
        },
        "second": {
          "$ref": "#/definitions/Intl.DateTimeFormatOptions",
          "title": "second"
        }
      }
    },
    "CategoryFormatOptions": {
      "description": "Defines how the category axis data (Categories) should be formatted.",
      "title": "CategoryFormatOptions",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the CategoryFormatOptions object. For CategoryFormatOptions object, it is \"category\". It can help us to differentiate category axis from other types of axes, viz., date-time axis and numeric (value) axis.",
          "type": "string",
          "enum": [
            "category"
          ],
          "title": "type"
        },
        "characterLimit": {
          "description": "Represents a positive integer which represents the limit on the number of characters to be displayed for all the category strings. The truncated string are appended with `...`. If property is not present or `null`, no truncation is done.",
          "minimum": 1,
          "multipleOf": 1,
          "type": [
            "null",
            "number"
          ],
          "title": "characterLimit"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebChartGuide": {
      "description": "JSON representation of the chart's guide object. Can be used to represent both line and fill guides.",
      "title": "WebChartGuide",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the Guide object. For Guide class, it is \"chartGuide\".",
          "type": "string",
          "enum": [
            "chartGuide"
          ],
          "title": "type"
        },
        "start": {
          "description": "Determines the value where the guide should begin.",
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": [
                "null",
                "string",
                "number"
              ]
            }
          ],
          "title": "start"
        },
        "end": {
          "description": "Determines the value where the guide should end. If it is not specified, we get a line guide, otherwise we get a fill/rectangular guide.",
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": [
                "null",
                "string",
                "number"
              ]
            }
          ],
          "title": "end"
        },
        "style": {
          "description": "Determines how the guide should be rendered. Line guide requires [esriSLS](https://developers.arcgis.com/documentation/common-data-types/symbol-objects.htm) format, and fill guide requires [esriSFS](https://developers.arcgis.com/documentation/common-data-types/symbol-objects.htm) format.",
          "anyOf": [
            {
              "$ref": "#/definitions/ISimpleLineSymbol"
            },
            {
              "$ref": "#/definitions/ISimpleFillSymbol"
            }
          ],
          "title": "style"
        },
        "name": {
          "description": "A unique string identifier which is used to refer to a particular guide. It is displayed in the Chart Authoring UI to differentiate between different guides.",
          "type": "string",
          "title": "name"
        },
        "label": {
          "description": "Represents a text symbol.",
          "$ref": "#/definitions/WebChartTextSymbol",
          "title": "label"
        },
        "visible": {
          "description": "Determines the visibility of the content.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "above": {
          "description": "Determines whether the guide should be rendered on top of (overlapping) the series or under the series.",
          "default": false,
          "type": "boolean",
          "title": "above"
        },
        "tooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the guide's tooltip background (false) or its outline (true).",
          "default": false,
          "type": "boolean",
          "title": "tooltipReverseColor"
        }
      },
      "required": [
        "name",
        "start",
        "style",
        "type"
      ]
    },
    "ISimpleFillSymbol": {
      "title": "ISimpleFillSymbol",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "esriSFS"
          ],
          "title": "type"
        },
        "style": {
          "enum": [
            "esriSFSBackwardDiagonal",
            "esriSFSCross",
            "esriSFSDiagonalCross",
            "esriSFSForwardDiagonal",
            "esriSFSHorizontal",
            "esriSFSNull",
            "esriSFSSolid",
            "esriSFSVertical"
          ],
          "type": "string",
          "title": "style"
        },
        "color": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "color"
        },
        "outline": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "outline"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebChartAxisScrollBar": {
      "description": "Describes the properties of an axis scrollbar",
      "title": "WebChartAxisScrollBar",
      "type": "object",
      "properties": {
        "visible": {
          "description": "Scrollbar visibility",
          "default": false,
          "type": "boolean",
          "title": "visible"
        },
        "width": {
          "description": "Scrollbar width in pixels",
          "type": "number",
          "title": "width"
        },
        "color": {
          "description": "Scrollbar color",
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "color"
        },
        "gripSize": {
          "description": "Grip size in pixels",
          "type": "number",
          "title": "gripSize"
        },
        "margin": {
          "description": "Margin between the scrollbar and the series container in pixels",
          "type": "number",
          "title": "margin"
        }
      }
    },
    "WebChartSeriesType": {
      "description": "Type containing all the series types available",
      "title": "WebChartSeriesType",
      "anyOf": [
        {
          "$ref": "#/definitions/WebChartBarChartSeries"
        },
        {
          "$ref": "#/definitions/WebChartHistogramSeries"
        },
        {
          "$ref": "#/definitions/WebChartScatterPlotSeries"
        },
        {
          "$ref": "#/definitions/WebChartPieChartSeries"
        },
        {
          "$ref": "#/definitions/WebChartGaugeSeries"
        },
        {
          "$ref": "#/definitions/WebChartLineChartSeries"
        },
        {
          "$ref": "#/definitions/WebChartBoxPlotSeries"
        },
        {
          "$ref": "#/definitions/WebChartRadarChartSeries"
        },
        {
          "$ref": "#/definitions/WebChartProbabilityPlotSeries"
        },
        {
          "$ref": "#/definitions/WebChartProfileGraphSeries"
        }
      ]
    },
    "WebChartBarChartSeries": {
      "description": "[Bar chart](https://pro.arcgis.com/en/pro-app/help/analysis/geoprocessing/charts/bar-chart.htm) shows the categorical distribution of String/DateTime data.",
      "title": "WebChartBarChartSeries",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the BarChartSeries object. For BarSeries object, it is \"barSeries\".",
          "type": "string",
          "enum": [
            "barSeries"
          ],
          "title": "type"
        },
        "y": {
          "description": "Specifies which field represents the y-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "y"
        },
        "fillSymbol": {
          "description": "Contains styling info on how the columns/bars should be rendered",
          "$ref": "#/definitions/ISimpleFillSymbol",
          "title": "fillSymbol"
        },
        "hideOversizedStackedLabels": {
          "description": "When true or undefined (default), the labels displayed within a small column or stack are hidden to avoid cluttering.\nWhen false, all the data labels are displayed.",
          "default": true,
          "type": "boolean",
          "title": "hideOversizedStackedLabels"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        },
        "binTemporalData": {
          "description": "Whether to use the time properties to bin the temporal data.\nIf set to `false` the `timeIntervalSize` and `timeIntervalUnits` properties can be used to set the date axis base interval.",
          "default": true,
          "type": "boolean",
          "title": "binTemporalData"
        },
        "timeIntervalUnits": {
          "description": "The time unit that corresponds to the `timeIntervalSize`. Valid options include seconds, minutes, hours, days, weeks, months, and years.",
          "enum": [
            "esriTimeUnitsDays",
            "esriTimeUnitsHours",
            "esriTimeUnitsMinutes",
            "esriTimeUnitsMonths",
            "esriTimeUnitsSeconds",
            "esriTimeUnitsWeeks",
            "esriTimeUnitsYears"
          ],
          "type": "string",
          "title": "timeIntervalUnits"
        },
        "timeIntervalSize": {
          "description": "The span of time that will be binned or aggregated together. This property must be used in conjunction with `timeIntervalUnits`.",
          "type": "number",
          "title": "timeIntervalSize"
        },
        "timeAggregationType": {
          "description": "The time interval alignment type. Valid options include `equalIntervalsFromStartTime` and `equalIntervalsFromEndTime`.",
          "default": "equalIntervalsFromStartTime",
          "enum": [
            "equalIntervalsFromEndTime",
            "equalIntervalsFromStartTime"
          ],
          "type": "string",
          "title": "timeAggregationType"
        },
        "trimIncompleteTimeInterval": {
          "description": "Determines whether incomplete time intervals at the start or end of the data span (depending on the `timeAggregationType`) will be removed from the chart.\nIncomplete intervals on a chart can cause misleading results in which the period in question is under- or overreported due to a different amount of time in the interval.\nSetting `true` indicates to trim these incomplete intervals. Setting `false` does not trim incomplete intervals.",
          "default": true,
          "type": "boolean",
          "title": "trimIncompleteTimeInterval"
        },
        "nullPolicy": {
          "description": "How summarized bins returning a null value are displayed. Supported options are:\n- `null`, `zero`, and `interpolate` for line series\n- `null` and `zero` for bar series",
          "default": "null",
          "enum": [
            "interpolate",
            "null",
            "zero"
          ],
          "type": "string",
          "title": "nullPolicy"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ]
    },
    "WebChartSeriesQuery": {
      "description": "Subset of the WebChartQuery, used at the series level",
      "title": "WebChartSeriesQuery",
      "type": "object",
      "properties": {
        "outFields": {
          "description": "Attribute fields to include in the FeatureSet. Will have an effect on chart with no aggregation.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "outFields"
        },
        "where": {
          "description": "Acts as a filter on the base data for attribute-based filtering, expect for bar/line charts for which is is used to handle the split-by field values.",
          "type": "string",
          "title": "where"
        },
        "groupByFieldsForStatistics": {
          "description": "An array of fields which determine how the base data is grouped. Only one **groupBy** Field is supported, but ArcGIS JSAPI [supports multiple groupBy fields](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#groupByFieldsForStatistics). While splitting by multiple group-by fields is possible, it is not being done because of the number of series it will give rise to (equal to the length of the Cartesian product set) possibly making the visualization hard to interpret.",
          "maxItems": 1,
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "groupByFieldsForStatistics"
        },
        "outStatistics": {
          "description": "Represents an array of statistics definitions which dictate how a particular field should be aggregated. Refer to [JSAPI Statistics Definition class](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-StatisticDefinition.html) for more info.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IStatisticDefinition"
          },
          "title": "outStatistics"
        },
        "orderByFields": {
          "description": "Represents the sorting order of the output result. More info present in [JSAPI docs](https://developers.arcgis.com/javascript/latest/api-reference/esri-tasks-support-Query.html#orderByFields).\nThe format of any entry in this array is `field_name sorting_order`. When `sorting_order` is not defined, it is assumed to be ascending.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "orderByFields"
        },
        "returnDistinctValues": {
          "description": "If true then the query returns distinct values based on the field(s) specified in outFields. Available for count-based aggregations only.",
          "default": false,
          "type": "boolean",
          "title": "returnDistinctValues"
        },
        "fetchNullValues": {
          "description": "Indicates whether to fetch null values for them to be counted or displayed as categories on the chart.",
          "default": false,
          "type": "boolean",
          "title": "fetchNullValues"
        }
      }
    },
    "IStatisticDefinition": {
      "title": "IStatisticDefinition",
      "type": "object",
      "properties": {
        "statisticType": {
          "description": "Statistical operation to perform (count, sum, min, max, avg, stddev, var, percentile_cont, percentile_disc, EnvelopeAggregate, CentroidAggregate, ConvexHullAggregate).",
          "enum": [
            "avg",
            "centroid-aggregate",
            "convex-hull-aggregate",
            "count",
            "envelope-aggregate",
            "max",
            "min",
            "percentile_cont",
            "percentile_disc",
            "stddev",
            "sum",
            "var"
          ],
          "type": "string",
          "title": "statisticType"
        },
        "statisticParameters": {
          "description": "Parameters to be used along with statisticType. Currently, only applicable for percentile_cont (continuous percentile) and percentile_disc (discrete percentile).",
          "type": "object",
          "properties": {
            "value": {
              "type": "number",
              "title": "value"
            },
            "orderBy": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string",
              "title": "orderBy"
            }
          },
          "required": [
            "value"
          ],
          "title": "statisticParameters"
        },
        "onStatisticField": {
          "description": "Field on which to perform the statistical operation.",
          "type": "string",
          "title": "onStatisticField"
        },
        "outStatisticFieldName": {
          "description": "Field name for the returned statistic field. If outStatisticFieldName is empty or missing, the server will assign one. A valid field name can only contain alphanumeric characters and an underscore. If the outStatisticFieldName is a reserved keyword of the underlying DBMS, the operation can fail. Try specifying an alternative outStatisticFieldName.",
          "type": "string",
          "title": "outStatisticFieldName"
        }
      },
      "required": [
        "onStatisticField",
        "statisticType"
      ]
    },
    "WebChartHistogramSeries": {
      "description": "[Histogram](https://pro.arcgis.com/en/pro-app/help/analysis/geoprocessing/charts/histogram.htm) shows the numerical(frequency) distribution of a numerical field.",
      "title": "WebChartHistogramSeries",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the HistogramSeries object. For BarSeries object, it is \"histogramSeries\".",
          "type": "string",
          "enum": [
            "histogramSeries"
          ],
          "title": "type"
        },
        "binCount": {
          "description": "Bin count must be a positive integer.",
          "minimum": 1,
          "multipleOf": 1,
          "default": 32,
          "type": [
            "null",
            "number"
          ],
          "title": "binCount"
        },
        "overlays": {
          "description": "Specifies the chart overlays. Histogram supports 4 overlays: **mean**, **median**, **standardDeviation** and **comparisonDistribution**.\nThe overlays won't show if the property is not defined.",
          "$ref": "#/definitions/HistogramOverlays",
          "title": "overlays"
        },
        "dataTransformationType": {
          "description": "Specifies how the data should be transformed (e.g. square root, log, etc.) before binning.",
          "enum": [
            "logarithmic",
            "none",
            "squareRoot"
          ],
          "type": "string",
          "title": "dataTransformationType"
        },
        "fillSymbol": {
          "description": "Contains styling info on how the columns/bars should be rendered",
          "$ref": "#/definitions/ISimpleFillSymbol",
          "title": "fillSymbol"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x"
      ]
    },
    "HistogramOverlays": {
      "description": "Object containing Histogram overlays",
      "title": "HistogramOverlays",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the HistogramOverlays object. For HistogramOverlays object, it is \"chartOverlays\".",
          "type": "string",
          "enum": [
            "chartOverlays"
          ],
          "title": "type"
        },
        "mean": {
          "description": "Specifies the mean overlay for histogram.\nIf not provided, the mean overlay is not displayed.",
          "$ref": "#/definitions/WebChartOverlay",
          "title": "mean"
        },
        "median": {
          "description": "Specifies the median overlay for histogram.\nIf not provided, the median overlay is not displayed.",
          "$ref": "#/definitions/WebChartOverlay",
          "title": "median"
        },
        "standardDeviation": {
          "description": "Specifies the standard deviation overlay for histogram.\nIf not provided, the standard deviation overlay is not displayed.",
          "$ref": "#/definitions/WebChartOverlay",
          "title": "standardDeviation"
        },
        "comparisonDistribution": {
          "description": "Specifies the comparison distribution overlay for histogram.\nIf not provided, the comparison distribution overlay is not displayed.",
          "$ref": "#/definitions/WebChartOverlay",
          "title": "comparisonDistribution"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebChartOverlay": {
      "description": "JSON representation of the chart's overlays like trendline scatter plot, and median in histogram",
      "title": "WebChartOverlay",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the ChartOverlay object. For ChartOverlay object, it is \"chartOverlay\".",
          "type": "string",
          "enum": [
            "chartOverlay"
          ],
          "title": "type"
        },
        "created": {
          "description": "Determines whether the overlay is created under the hood. It may or may not be visible.",
          "default": false,
          "type": "boolean",
          "title": "created"
        },
        "visible": {
          "description": "Determines the visibility of the content.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "symbol": {
          "description": "Contains styling info on how the overlay should be rendered\nIf not provided a default style is applied.",
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "symbol"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebChartScatterPlotSeries": {
      "description": "[Scatter plot](https://pro.arcgis.com/en/pro-app/help/analysis/geoprocessing/charts/scatter-plot.htm) shows the relationship between two numerical fields.",
      "title": "WebChartScatterPlotSeries",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the ScatterSeries object. For ScatterSeries object, it is \"scatterSeries\".",
          "type": "string",
          "enum": [
            "scatterSeries"
          ],
          "title": "type"
        },
        "y": {
          "description": "Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "y"
        },
        "markerSymbol": {
          "description": "Specifies how each data point in the scatter plot should be rendered. The type is `\"esriSMS\"` and it is adopted from the [REST API Types](https://developers.arcgis.com/documentation/common-data-types/symbol-objects.htm#GUID-C8D40B32-5F4B-45EB-8048-6D5A8763E13B).",
          "$ref": "#/definitions/ISimpleMarkerSymbol",
          "title": "markerSymbol"
        },
        "overlays": {
          "description": "Specifies all the chart overlays. The scatter plot implements only 1 overlay, **trendLine**.\nThe overlays won't show if the property is not defined.",
          "$ref": "#/definitions/ScatterPlotOverlays",
          "title": "overlays"
        },
        "sizePolicy": {
          "description": "Specifies rules to use the scatter plot as bubble plot, by changing dynamically the markers size according to a specific field value",
          "$ref": "#/definitions/SizePolicy",
          "title": "sizePolicy"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ]
    },
    "ISimpleMarkerSymbol": {
      "title": "ISimpleMarkerSymbol",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "esriSMS"
          ],
          "title": "type"
        },
        "style": {
          "enum": [
            "esriSMSCircle",
            "esriSMSCross",
            "esriSMSDiamond",
            "esriSMSSquare",
            "esriSMSTriangle",
            "esriSMSX"
          ],
          "type": "string",
          "title": "style"
        },
        "color": {
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "color"
        },
        "size": {
          "type": "number",
          "title": "size"
        },
        "outline": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "outline"
        },
        "angle": {
          "type": "number",
          "title": "angle"
        },
        "xoffset": {
          "type": "number",
          "title": "xoffset"
        },
        "yoffset": {
          "type": "number",
          "title": "yoffset"
        }
      },
      "required": [
        "type"
      ]
    },
    "ScatterPlotOverlays": {
      "description": "Object containing Scatter Plot overlays",
      "title": "ScatterPlotOverlays",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the ScatterPlotOverlays object. For ScatterPlotOverlays object, it is \"chartOverlays\".",
          "type": "string",
          "enum": [
            "chartOverlays"
          ],
          "title": "type"
        },
        "trendLine": {
          "description": "Specifies the trendline overlay for scatter plot.\nThe trendline won't show if the property is not defined.",
          "$ref": "#/definitions/WebChartOverlay",
          "title": "trendLine"
        }
      },
      "required": [
        "type"
      ]
    },
    "SizePolicy": {
      "title": "SizePolicy",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the sizePolicy object. For sizePolicy object, it is \"sizeScale\".",
          "type": "string",
          "enum": [
            "sizeScale"
          ],
          "title": "type"
        },
        "scaleType": {
          "description": "The type of scale to apply to the markers (linear or logarithmic)",
          "default": "SizePolicyScaleTypes.Linear",
          "enum": [
            "linear",
            "logarithmic"
          ],
          "type": "string",
          "title": "scaleType"
        },
        "field": {
          "description": "The field which determines the markers size",
          "type": "string",
          "title": "field"
        },
        "minSize": {
          "description": "The minimum marker size",
          "default": 5,
          "multipleOf": 1,
          "type": "number",
          "title": "minSize"
        },
        "maxSize": {
          "description": "The maximum marker size",
          "default": 30,
          "multipleOf": 1,
          "type": "number",
          "title": "maxSize"
        }
      },
      "required": [
        "field",
        "type"
      ]
    },
    "WebChartPieChartSeries": {
      "description": "JSON representation of the Pie Chart series",
      "title": "WebChartPieChartSeries",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the PieSeries object. For PieSeries object, it is \"pieSeries\".",
          "type": "string",
          "enum": [
            "pieSeries"
          ],
          "title": "type"
        },
        "y": {
          "description": "Specifies which field represents the y-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "y"
        },
        "innerRadius": {
          "description": "Represents the size of the hole in middle of the chart. The number is used as a percentage rather than a fixed value.",
          "minimum": 0,
          "maximum": 100,
          "default": 50,
          "type": [
            "null",
            "number"
          ],
          "title": "innerRadius"
        },
        "startAngle": {
          "default": -90,
          "type": [
            "null",
            "number"
          ],
          "title": "startAngle"
        },
        "endAngle": {
          "default": 270,
          "type": [
            "null",
            "number"
          ],
          "title": "endAngle"
        },
        "fillSymbol": {
          "description": "Contains styling info on how the slices should be rendered",
          "$ref": "#/definitions/ISimpleFillSymbol",
          "title": "fillSymbol"
        },
        "displayNumericValueOnDataLabel": {
          "description": "Indicates whether the numeric value associated to a slice is to be displayed on its data label.\nIf both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`.\nThis property will be ignored if the chart options `dataLabelFormatter` is provided.",
          "default": true,
          "type": "boolean",
          "title": "displayNumericValueOnDataLabel"
        },
        "displayPercentageOnDataLabel": {
          "description": "Indicates whether the percentage associated to a slice is to be displayed on its data label.\nIf both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`\nThis property will be ignored if the chart options `dataLabelFormatter` is provided.",
          "default": false,
          "type": "boolean",
          "title": "displayPercentageOnDataLabel"
        },
        "displayNumericValueOnTooltip": {
          "description": "Indicates whether the numeric value associated to a slice is to be displayed on its tooltip.\nIf both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`\nThis property will be ignored if the chart options `tooltipFormatter` is provided.",
          "default": true,
          "type": "boolean",
          "title": "displayNumericValueOnTooltip"
        },
        "displayPercentageOnTooltip": {
          "description": "Indicates whether the percentage associated to a slice is to be displayed on its tooltip.\nIf both displayNumericValue & displayPercentage are true on a same label, they will be displayed as `percentage (value)`\nThis property will be ignored if the chart options `tooltipFormatter` is provided.",
          "default": true,
          "type": "boolean",
          "title": "displayPercentageOnTooltip"
        },
        "numericValueFormat": {
          "description": "Specifies how the numerical values should be formatted (applied to label, tooltip and legend).\nCan be overridden for the tooltips by series.dataTooltipValueFormat.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "numericValueFormat"
        },
        "percentValueFormat": {
          "description": "Specifies how the percent values should be formatted (applied to label, tooltip and legend)\nCan be overridden for the tooltips by series.dataTooltipPercentFormat.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "percentValueFormat"
        },
        "valuePrefix": {
          "description": "Adds a prefix to all the values displayed on the pie chart: data labels, tooltips and legend",
          "type": "string",
          "title": "valuePrefix"
        },
        "valueSuffix": {
          "description": "Adds a suffix to all the values displayed on the pie chart: data labels, tooltips and legend",
          "type": "string",
          "title": "valueSuffix"
        },
        "percentagePrefix": {
          "description": "Adds a prefix to all the percentages displayed on the pie chart: data labels, tooltips and legend",
          "type": "string",
          "title": "percentagePrefix"
        },
        "percentageSuffix": {
          "description": "Adds a suffix to all the percentages displayed on the pie chart: data labels, tooltips and legend",
          "type": "string",
          "title": "percentageSuffix"
        },
        "dataLabelsCharacterLimit": {
          "description": "If set, the category on the data label is truncated to display only `characterLimit` characters, and an ellipsis (\"...\")\nis added to the end of the label.\nThis does not affect the value and percentage part of the labels.\nDoes not apply to tooltips and legend labels.",
          "default": "undefined",
          "minimum": 1,
          "multipleOf": 1,
          "type": [
            "null",
            "number"
          ],
          "title": "dataLabelsCharacterLimit"
        },
        "ticks": {
          "description": "Specifies how to render the ticks shown on each slide.\nTicks will be displayed with default values if not provided.",
          "$ref": "#/definitions/WebChartPieChartTick",
          "title": "ticks"
        },
        "dataLabelsOffset": {
          "description": "Determines in pixel how far the data labels should be placed from their slice.\nIf a negative value is provided the label will be placed inside of the chart.",
          "default": 10,
          "type": "number",
          "title": "dataLabelsOffset"
        },
        "alignDataLabels": {
          "description": "Aligns labels into columns to make them more readable and avoid them to overlap each other.",
          "default": false,
          "type": "boolean",
          "title": "alignDataLabels"
        },
        "optimizeDataLabelsOverlapping": {
          "description": "Optimizes the data labels rendering to avoid them to be cut off on the edges or to overlap the legend by wrapping them and adding padding to the chart.",
          "default": false,
          "type": "boolean",
          "title": "optimizeDataLabelsOverlapping"
        },
        "sliceGrouping": {
          "description": "Specifies if and how the slices under a given percentage threshold are grouped into a unique slice",
          "$ref": "#/definitions/WebChartPieChartGroupSlice",
          "title": "sliceGrouping"
        },
        "slices": {
          "description": "An array of WebChartPieChartSlice representing the ids, labels and styles of the pie slices.\n\nWhen this property is not defined, or when a pie slice does not have a matching slice in this array,\nthe series' fillSymbol will be used. If the series' fillSymbol does not contain color information, colors from the\ncolor ramps will be utilized.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebChartPieChartSlice"
          },
          "title": "slices"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ]
    },
    "WebChartPieChartTick": {
      "description": "JSON representation of the pie ticks.",
      "title": "WebChartPieChartTick",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the WebChartPieChartTick object. For PieTick object, it is \"pieTick\".",
          "type": "string",
          "enum": [
            "pieTick"
          ],
          "title": "type"
        },
        "visible": {
          "description": "Determines the visibility of the tick.\nAssigning the `true` value will only be considered when the data labels are visible (`series.dataLabels.visible`) and\nwhen the data label associated to the tick is outside of the chart (`series.dataLabelsOffset` > 0).",
          "type": "boolean",
          "title": "visible"
        },
        "lineSymbol": {
          "description": "Contains styling info on how the pie chart ticks should be rendered",
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "lineSymbol"
        }
      },
      "required": [
        "type"
      ]
    },
    "WebChartPieChartGroupSlice": {
      "description": "JSON representation of the pie grouped slice",
      "title": "WebChartPieChartGroupSlice",
      "type": "object",
      "properties": {
        "percentageThreshold": {
          "description": "Slices that have a percent value equal or lesser to this threshold are grouped into a unique slice",
          "type": "number",
          "title": "percentageThreshold"
        },
        "dataLabels": {
          "description": "Specifies how the grouped slice data labels should be rendered.\nIf the property is not set the `series.dataLabels` will be used instead.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "sliceId": {
          "description": "A unique string used identify the slice of a pie chart.",
          "type": "string",
          "title": "sliceId"
        },
        "originalLabel": {
          "description": "The slice's original label.",
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": [
                "null",
                "string",
                "number"
              ]
            }
          ],
          "title": "originalLabel"
        },
        "label": {
          "description": "Custom label for the slice.\nFor grouped slice, the default value is `Other`.\nFor regular slice, it will be either the category or field name.",
          "type": "string",
          "title": "label"
        },
        "fillSymbol": {
          "description": "Contains styling info on how the slice should be rendered. If not provided, the slice will\nbe styled with default values.",
          "$ref": "#/definitions/ISimpleFillSymbol",
          "title": "fillSymbol"
        }
      },
      "required": [
        "percentageThreshold",
        "sliceId"
      ]
    },
    "WebChartPieChartSlice": {
      "description": "JSON representation of the pie slices",
      "title": "WebChartPieChartSlice",
      "type": "object",
      "properties": {
        "sliceId": {
          "description": "A unique string used identify the slice of a pie chart.",
          "type": "string",
          "title": "sliceId"
        },
        "originalLabel": {
          "description": "The slice's original label.",
          "anyOf": [
            {
              "type": "string",
              "format": "date-time"
            },
            {
              "type": [
                "null",
                "string",
                "number"
              ]
            }
          ],
          "title": "originalLabel"
        },
        "label": {
          "description": "Custom label for the slice.\nFor grouped slice, the default value is `Other`.\nFor regular slice, it will be either the category or field name.",
          "type": "string",
          "title": "label"
        },
        "fillSymbol": {
          "description": "Contains styling info on how the slice should be rendered. If not provided, the slice will\nbe styled with default values.",
          "$ref": "#/definitions/ISimpleFillSymbol",
          "title": "fillSymbol"
        }
      },
      "required": [
        "sliceId"
      ]
    },
    "WebChartGaugeSeries": {
      "description": "JSON representation of the `Gauge` series",
      "title": "WebChartGaugeSeries",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the GaugeSeries object. For GaugeSeries object, it is \"gaugeSeries\".",
          "type": "string",
          "enum": [
            "gaugeSeries"
          ],
          "title": "type"
        },
        "valueConversion": {
          "description": "Defines the conversion to apply to the gauge value",
          "$ref": "#/definitions/ValueConversion",
          "title": "valueConversion"
        },
        "featureIndex": {
          "description": "Specifies the index of the feature to be rendered.\nThis property will be ignored for a statistic gauge (indicated via `WebGaugeChart.subType` property).\nFor feature-based gauge, if this property is not present, the first feature will be used (featureIndex = 0)",
          "type": "number",
          "title": "featureIndex"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x"
      ]
    },
    "ValueConversion": {
      "description": "Stores information regarding a numeric conversion",
      "title": "ValueConversion",
      "type": "object",
      "properties": {
        "factor": {
          "description": "A numeric value multiplying the value to convert",
          "type": "number",
          "title": "factor"
        },
        "offset": {
          "description": "A numeric offset to apply to the value to convert",
          "type": "number",
          "title": "offset"
        }
      }
    },
    "WebChartLineChartSeries": {
      "description": "JSON representation of the Line Chart series",
      "title": "WebChartLineChartSeries",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents a unique string identifier for the LineSeries object. For LineSeries object, it is \"lineSeries\".",
          "type": "string",
          "enum": [
            "lineSeries"
          ],
          "title": "type"
        },
        "y": {
          "description": "Specifies the numeric field(s) used by the series. The array type is useful when used for a box plot.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "title": "y"
        },
        "lineSymbol": {
          "description": "Contains styling info on how the line/line segments should be rendered",
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "lineSymbol"
        },
        "lineSmoothed": {
          "description": "Specifies whether line segments should be smoothed.",
          "default": false,
          "type": "boolean",
          "title": "lineSmoothed"
        },
        "showArea": {
          "description": "Indicates whether line series show area.",
          "default": false,
          "type": "boolean",
          "title": "showArea"
        },
        "markerVisible": {
          "description": "Indicates whether to show or hide the markers/bullets of the line series.",
          "default": true,
          "type": "boolean",
          "title": "markerVisible"
        },
        "markerSymbol": {
          "description": "Contains styling info on how the marker should be rendered",
          "$ref": "#/definitions/ISimpleMarkerSymbol",
          "title": "markerSymbol"
        },
        "areaColor": {
          "description": "Specifies the color of the filled area for line chart.\nareaColor will be applied only if showArea is true, and is defaulted to the line color if not provided.",
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "areaColor"
        },
        "stackNegativeValuesToBaseline": {
          "description": "Specifies how negative values are treated in stacked series.\nIf true, negative values will be stacked on the base line.\nIf false, negative values will be stacked in relation to their previous values in the stack.",
          "default": true,
          "type": "boolean",
          "title": "stackNegativeValuesToBaseline"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        },
        "binTemporalData": {
          "description": "Whether to use the time properties to bin the temporal data.\nIf set to `false` the `timeIntervalSize` and `timeIntervalUnits` properties can be used to set the date axis base interval.",
          "default": true,
          "type": "boolean",
          "title": "binTemporalData"
        },
        "timeIntervalUnits": {
          "description": "The time unit that corresponds to the `timeIntervalSize`. Valid options include seconds, minutes, hours, days, weeks, months, and years.",
          "enum": [
            "esriTimeUnitsDays",
            "esriTimeUnitsHours",
            "esriTimeUnitsMinutes",
            "esriTimeUnitsMonths",
            "esriTimeUnitsSeconds",
            "esriTimeUnitsWeeks",
            "esriTimeUnitsYears"
          ],
          "type": "string",
          "title": "timeIntervalUnits"
        },
        "timeIntervalSize": {
          "description": "The span of time that will be binned or aggregated together. This property must be used in conjunction with `timeIntervalUnits`.",
          "type": "number",
          "title": "timeIntervalSize"
        },
        "timeAggregationType": {
          "description": "The time interval alignment type. Valid options include `equalIntervalsFromStartTime` and `equalIntervalsFromEndTime`.",
          "default": "equalIntervalsFromStartTime",
          "enum": [
            "equalIntervalsFromEndTime",
            "equalIntervalsFromStartTime"
          ],
          "type": "string",
          "title": "timeAggregationType"
        },
        "trimIncompleteTimeInterval": {
          "description": "Determines whether incomplete time intervals at the start or end of the data span (depending on the `timeAggregationType`) will be removed from the chart.\nIncomplete intervals on a chart can cause misleading results in which the period in question is under- or overreported due to a different amount of time in the interval.\nSetting `true` indicates to trim these incomplete intervals. Setting `false` does not trim incomplete intervals.",
          "default": true,
          "type": "boolean",
          "title": "trimIncompleteTimeInterval"
        },
        "nullPolicy": {
          "description": "How summarized bins returning a null value are displayed. Supported options are:\n- `null`, `zero`, and `interpolate` for line series\n- `null` and `zero` for bar series",
          "default": "null",
          "enum": [
            "interpolate",
            "null",
            "zero"
          ],
          "type": "string",
          "title": "nullPolicy"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ]
    },
    "WebChartBoxPlotSeries": {
      "description": "JSON representation of the Box plot series",
      "title": "WebChartBoxPlotSeries",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "boxPlotSeries"
          ],
          "title": "type"
        },
        "y": {
          "description": "Specifies the numeric field(s) used by the box plot series.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "title": "y"
        },
        "fillSymbol": {
          "description": "Contains styling info on how the box and whiskers should be rendered. The whiskers use the fillSymbol.outline.",
          "$ref": "#/definitions/ISimpleFillSymbol",
          "title": "fillSymbol"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "x",
        "y"
      ]
    },
    "WebChartRadarChartSeries": {
      "title": "WebChartRadarChartSeries",
      "allOf": [
        {
          "$ref": "#/definitions/Omit<WebChartLineChartSeries,\"type\">"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "radarSeries"
              ],
              "title": "type"
            }
          },
          "required": [
            "type"
          ]
        }
      ]
    },
    "Omit<WebChartLineChartSeries,\"type\">": {
      "title": "Omit<WebChartLineChartSeries,\"type\">",
      "type": "object",
      "properties": {
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "y": {
          "description": "Specifies the numeric field(s) used by the series. The array type is useful when used for a box plot.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            }
          ],
          "title": "y"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        },
        "lineSymbol": {
          "description": "Contains styling info on how the line/line segments should be rendered",
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "lineSymbol"
        },
        "lineSmoothed": {
          "description": "Specifies whether line segments should be smoothed.",
          "default": false,
          "type": "boolean",
          "title": "lineSmoothed"
        },
        "showArea": {
          "description": "Indicates whether line series show area.",
          "default": false,
          "type": "boolean",
          "title": "showArea"
        },
        "markerVisible": {
          "description": "Indicates whether to show or hide the markers/bullets of the line series.",
          "default": true,
          "type": "boolean",
          "title": "markerVisible"
        },
        "markerSymbol": {
          "description": "Contains styling info on how the marker should be rendered",
          "$ref": "#/definitions/ISimpleMarkerSymbol",
          "title": "markerSymbol"
        },
        "areaColor": {
          "description": "Specifies the color of the filled area for line chart.\nareaColor will be applied only if showArea is true, and is defaulted to the line color if not provided.",
          "type": "array",
          "items": [
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            },
            {
              "type": "number"
            }
          ],
          "minItems": 4,
          "maxItems": 4,
          "title": "areaColor"
        },
        "stackNegativeValuesToBaseline": {
          "description": "Specifies how negative values are treated in stacked series.\nIf true, negative values will be stacked on the base line.\nIf false, negative values will be stacked in relation to their previous values in the stack.",
          "default": true,
          "type": "boolean",
          "title": "stackNegativeValuesToBaseline"
        },
        "binTemporalData": {
          "description": "Whether to use the time properties to bin the temporal data.\nIf set to `false` the `timeIntervalSize` and `timeIntervalUnits` properties can be used to set the date axis base interval.",
          "default": true,
          "type": "boolean",
          "title": "binTemporalData"
        },
        "timeIntervalUnits": {
          "description": "The time unit that corresponds to the `timeIntervalSize`. Valid options include seconds, minutes, hours, days, weeks, months, and years.",
          "enum": [
            "esriTimeUnitsDays",
            "esriTimeUnitsHours",
            "esriTimeUnitsMinutes",
            "esriTimeUnitsMonths",
            "esriTimeUnitsSeconds",
            "esriTimeUnitsWeeks",
            "esriTimeUnitsYears"
          ],
          "type": "string",
          "title": "timeIntervalUnits"
        },
        "timeIntervalSize": {
          "description": "The span of time that will be binned or aggregated together. This property must be used in conjunction with `timeIntervalUnits`.",
          "type": "number",
          "title": "timeIntervalSize"
        },
        "timeAggregationType": {
          "description": "The time interval alignment type. Valid options include `equalIntervalsFromStartTime` and `equalIntervalsFromEndTime`.",
          "default": "equalIntervalsFromStartTime",
          "enum": [
            "equalIntervalsFromEndTime",
            "equalIntervalsFromStartTime"
          ],
          "type": "string",
          "title": "timeAggregationType"
        },
        "trimIncompleteTimeInterval": {
          "description": "Determines whether incomplete time intervals at the start or end of the data span (depending on the `timeAggregationType`) will be removed from the chart.\nIncomplete intervals on a chart can cause misleading results in which the period in question is under- or overreported due to a different amount of time in the interval.\nSetting `true` indicates to trim these incomplete intervals. Setting `false` does not trim incomplete intervals.",
          "default": true,
          "type": "boolean",
          "title": "trimIncompleteTimeInterval"
        },
        "nullPolicy": {
          "description": "How summarized bins returning a null value are displayed. Supported options are:\n- `null`, `zero`, and `interpolate` for line series\n- `null` and `zero` for bar series",
          "default": "null",
          "enum": [
            "interpolate",
            "null",
            "zero"
          ],
          "type": "string",
          "title": "nullPolicy"
        }
      },
      "required": [
        "id",
        "name",
        "x",
        "y"
      ]
    },
    "WebChartProbabilityPlotSeries": {
      "description": "JSON representation of the Probability plot series",
      "title": "WebChartProbabilityPlotSeries",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "probabilityPlotSeries"
          ],
          "title": "type"
        },
        "y": {
          "type": "string",
          "title": "y"
        },
        "probabilityPlotType": {
          "$ref": "#/definitions/WebChartProbabilityPlotKinds",
          "title": "probabilityPlotType"
        },
        "dataTransformationType": {
          "$ref": "#/definitions/WebChartDataTransformations",
          "title": "dataTransformationType"
        },
        "showReferenceLine": {
          "type": "boolean",
          "title": "showReferenceLine"
        },
        "standardizeValues": {
          "type": "boolean",
          "title": "standardizeValues"
        },
        "markerSymbol": {
          "$ref": "#/definitions/ISimpleMarkerSymbol",
          "title": "markerSymbol"
        },
        "referenceLineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "referenceLineSymbol"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        }
      },
      "required": [
        "dataTransformationType",
        "id",
        "markerSymbol",
        "name",
        "probabilityPlotType",
        "referenceLineSymbol",
        "showReferenceLine",
        "standardizeValues",
        "type",
        "x",
        "y"
      ]
    },
    "WebChartProbabilityPlotKinds": {
      "title": "WebChartProbabilityPlotKinds",
      "enum": [
        "normalQQPlot",
        "qqPlot"
      ],
      "type": "string"
    },
    "WebChartDataTransformations": {
      "title": "WebChartDataTransformations",
      "enum": [
        "logarithmic",
        "none",
        "squareRoot"
      ],
      "type": "string"
    },
    "WebChartProfileGraphSeries": {
      "description": "JSON representation of the Profile graph series",
      "title": "WebChartProfileGraphSeries",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "profileGraphSeries"
          ],
          "title": "type"
        },
        "y": {
          "type": "string",
          "title": "y"
        },
        "horizontalUnits": {
          "type": "string",
          "title": "horizontalUnits"
        },
        "verticalUnits": {
          "type": "string",
          "title": "verticalUnits"
        },
        "lineSymbol": {
          "$ref": "#/definitions/ISimpleLineSymbol",
          "title": "lineSymbol"
        },
        "markerSymbol": {
          "$ref": "#/definitions/ISimpleMarkerSymbol",
          "title": "markerSymbol"
        },
        "id": {
          "description": "A unique string used to differentiate the series on a chart.",
          "type": "string",
          "title": "id"
        },
        "visible": {
          "description": "Hides or shows the series. If the series is has **visible** set to `false`, the corresponding legend is grayed out in the legend box.",
          "default": true,
          "type": "boolean",
          "title": "visible"
        },
        "dataTooltipVisible": {
          "description": "Hides or shows data tooltips.\nApplies to all charts but Gauge.",
          "default": true,
          "type": "boolean",
          "title": "dataTooltipVisible"
        },
        "dataTooltipReverseColor": {
          "description": "Indicates whether to apply the hovered element's color to the background (false) or the outline (true).\nApplies to all charts but Gauge.",
          "default": false,
          "type": "boolean",
          "title": "dataTooltipReverseColor"
        },
        "dataTooltipValueFormat": {
          "description": "Defines how to render numeric values in tooltips.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipValueFormat"
        },
        "dataTooltipPercentFormat": {
          "description": "Defines how to render percent values in tooltips.\nCurrently used for stacked 100% bar and line charts, as well as pie charts.",
          "$ref": "#/definitions/NumberFormatOptions",
          "title": "dataTooltipPercentFormat"
        },
        "dataTooltipDateFormat": {
          "description": "Defines how to render dates in tooltips.\nCurrently used for bar and line charts using a date x-axis with no time binning.",
          "$ref": "#/definitions/DateTimeFormatOptions",
          "title": "dataTooltipDateFormat"
        },
        "name": {
          "description": "Specifies the name of the series. It would be reflected in the chart [legends](#legend)",
          "type": "string",
          "title": "name"
        },
        "query": {
          "description": "Subset of the WebChartQuery, used at the series level",
          "$ref": "#/definitions/WebChartSeriesQuery",
          "title": "query"
        },
        "x": {
          "description": "Specifies which field represents the x-coordinates of this series. Empty string or one with just white spaces is not allowed. At least 1 or more word characters (a-z, A-Z, _) are needed.",
          "minLength": 1,
          "type": "string",
          "title": "x"
        },
        "dataLabels": {
          "description": "Specifies how the data labels should be rendered.",
          "$ref": "#/definitions/WebChartText",
          "title": "dataLabels"
        },
        "assignToSecondValueAxis": {
          "description": "Specifies whether the series should be assigned to the second value axis, when the `axes` property defines it.\nSupported by bar and line series.",
          "default": false,
          "type": "boolean",
          "title": "assignToSecondValueAxis"
        }
      },
      "required": [
        "horizontalUnits",
        "id",
        "lineSymbol",
        "markerSymbol",
        "name",
        "type",
        "verticalUnits",
        "x",
        "y"
      ]
    },
    "WebChartOrderSeriesBy": {
      "description": "Order options for split-by series.",
      "title": "WebChartOrderSeriesBy",
      "type": "object",
      "properties": {
        "preferLabel": {
          "description": "When the value is set to true, we want to order the split-by series based on the series' names (alias, custom label, or description).\n\nWhen the value is set to false, we want to order the split-by series based on the series' split-by values.",
          "default": true,
          "type": "boolean",
          "title": "preferLabel"
        },
        "orderBy": {
          "description": "The direction of the order.",
          "default": "WebChartSortOrderKinds.Ascending",
          "enum": [
            "ASC",
            "DESC"
          ],
          "type": "string",
          "title": "orderBy"
        }
      }
    },
    "WebChartDirectionalDataOrder": {
      "description": "A data order option that the items are to be ordered either ascending or descending.\nIt can be used for any type of order, like by category, by mean, by median, etc.",
      "title": "WebChartDirectionalDataOrder",
      "type": "object",
      "properties": {
        "orderType": {
          "$ref": "#/definitions/WebChartOrderDataByTypes",
          "description": "The type of order, eg by category, by mean, by median, or by y value.",
          "title": "orderType"
        },
        "orderBy": {
          "$ref": "#/definitions/WebChartSortOrderKinds",
          "description": "The direction of the order, either ascending or descending.",
          "title": "orderBy"
        },
        "preferLabel": {
          "description": "Indicates whether to order data by the label or the value.\n\nFor example, when a field has domain coded values or supbtypes, setting this property to `false` will order the data by the field value.\nOtherwise the domain description, subtypes description, or the alias of the field will be used to sort the data.",
          "default": true,
          "type": "boolean",
          "title": "preferLabel"
        }
      },
      "required": [
        "orderBy",
        "orderType"
      ]
    },
    "WebChartOrderDataByTypes": {
      "description": "The types of order assocated with chart data.",
      "title": "WebChartOrderDataByTypes",
      "enum": [
        "arcgis-charts-category",
        "arcgis-charts-mean",
        "arcgis-charts-median",
        "arcgis-charts-y-value"
      ],
      "type": "string"
    },
    "WebChartSortOrderKinds": {
      "title": "WebChartSortOrderKinds",
      "enum": [
        "ASC",
        "DESC"
      ],
      "type": "string"
    },
    "WebChartPredefinedLabelsDataOrder": {
      "description": "A data order option for the items to be ordered by `category` based on a predefined list of labels.",
      "title": "WebChartPredefinedLabelsDataOrder",
      "type": "object",
      "properties": {
        "orderType": {
          "description": "The type of order, which is by category.",
          "type": "string",
          "enum": [
            "arcgis-charts-category"
          ],
          "title": "orderType"
        },
        "orderBy": {
          "description": "The predefined list of labels to order the data by.\n\nWhen the value of the `preferLabel` property is set to `false`, the `orderBy` list should be a list of\ncoded domain values or field names; otherwise, it should be a list of domain descriptions, subtypes descriptions, or field aliases.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "orderBy"
        },
        "preferLabel": {
          "description": "Indicates whether to order data by the label or the value.\n\nFor example, when a field has domain coded values or supbtypes, setting this property to `false` will order the data by the field value.\nOtherwise the domain description, subtypes description, or the alias of the field will be used to sort the data.\n\nWhen the value is set to `true` or undefined, the `orderBy` property should contain a list of labels like domain descriptions, subtypes descriptions, or field aliases.\nWhen the value is set to `false`, the `orderBy` property should contain a list of coded domain values or field names, in order for the data to be sorted correctly.",
          "default": true,
          "type": "boolean",
          "title": "preferLabel"
        }
      },
      "required": [
        "orderBy",
        "orderType"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "WebMapWebChart"
}