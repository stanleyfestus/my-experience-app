// src/framework.ts
import { isNotUndefined } from "@arcgis/components-utils";
function retrieveComponentMembers(component, isLit) {
  if (isLit) {
    const elementProperties = component.constructor.elementProperties;
    component.manager.internals.members = Object.fromEntries(
      Array.from(
        elementProperties,
        ([name, descriptor]) => descriptor.noAccessor ? void 0 : [
          name,
          [
            (descriptor.readOnly ? 2048 /* ReadOnly */ : 0) | (descriptor.state ? 32 /* State */ : 16 /* Unknown */)
          ]
        ]
      ).filter(isNotUndefined)
    );
  } else {
    const constructor = component.constructor;
    const members = constructor.__registerControllers?.(component) ?? void 0;
    constructor.__registerControllers = void 0;
    if (typeof members !== "object") {
      throw new Error(
        process.env.NODE_ENV === "production" ? "Failed to retrieve component meta" : "Failed to retrieve internal component meta. Make sure you have the useComponentsControllers() Rollup Plugin for Stencil Controllers configured in your Stencil config."
      );
    }
    component.manager.internals.members = Object.fromEntries(
      Object.entries(members).filter(([_name, [propType]]) => (propType & 63 /* PropLike */) !== 0)
    );
  }
}
function parsePropertyValue(value, type = 8 /* Any */) {
  const isComplex = value == null || typeof value === "object" || typeof value === "function";
  if (isComplex) {
    return value;
  }
  if ((type & 4 /* Boolean */) !== 0) {
    return value === "false" ? false : value === "" || !!value;
  } else if ((type & 2 /* Number */) !== 0) {
    return Number.parseFloat(value);
  } else if ((type & 1 /* String */) !== 0) {
    return String(value);
  } else {
    return value;
  }
}
var getMemberType = (component, name) => component.manager.internals.members?.[name]?.[0];

export {
  retrieveComponentMembers,
  parsePropertyValue,
  getMemberType
};
